[
	{
		"original_line": "parameter real vlogic_high = 5;", 
		"bug_line": "parameter real vlogic_high = 5",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as statements must be properly terminated in Verilog-A."
	},
	{
		"original_line": "electrical vin1, vin2, vin_carry, vout_sum, vout_carry;", 
		"bug_line": "electrical vin1 vin2, vin_carry, vout_sum, vout_carry;",
		"error_description": "Missing comma between identifiers causes syntax error. VerilogA requires commas to separate multiple identifiers in discipline declarations."
	},
	{
		"original_line": "   integer a, b, c;", 
		"bug_line": "   integer a, b c;",
		"error_description": "Missing comma between variable declarations 'b' and 'c'"
	},
	{
		"original_line": "      c = V(vin_carry) > vtrans;", 
		"bug_line": "      c = V(vin_carry > vtrans;",
		"error_description": "Missing closing parenthesis for the V() function call. The expression inside the parentheses is now unterminated."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begi",
		"error_description": "Misspelled keyword 'begin' as 'begi' which creates an unterminated 'analog' block and invalid syntax"
	},
	{
		"original_line": "	 if (vlogic_high < vlogic_low) begin", 
		"bug_line": "	 if (vlogic_high <<< vlogic_low) begin",
		"error_description": "Invalid operator '<<<' used in condition. VerilogA requires valid comparison operators like '<', '>', '==', etc. Triple '<' is syntactically illegal."
	},
	{
		"original_line": "input vin1, vin2, vin_carry;", 
		"bug_line": "input vin1, vin2 vin_carry;",
		"error_description": "Missing comma between 'vin2' and 'vin_carry' in the input port list, causing invalid port declaration syntax."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ ( initial_step begin",
		"error_description": "Missing closing parenthesis for the event control expression, causing unterminated grouping and syntax error."
	},
	{
		"original_line": "	 if (vlogic_high < vlogic_low) begin", 
		"bug_line": "	 if (vlogic_high < vlogic_low begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression, causing mismatched parentheses in the if statement."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begn",
		"error_description": "Misspelled 'begin' as 'begn', causing invalid keyword syntax"
	},
	{
		"original_line": "      V(vout_carry) <+ transition( vout_carry_val, tdel, trise, tfall);", 
		"bug_line": "      V(vout_carry) <+ transition( vout_carry_val, tdel, trise, tfall;",
		"error_description": "Missing closing parenthesis for the transition function call. The ')' after tfall is removed, leaving an unmatched opening parenthesis which causes a syntax error."
	},
	{
		"original_line": "input vin1, vin2, vin_carry;", 
		"bug_line": "input vin1, vin2 vin_carry;",
		"error_description": "Missing comma between 'vin2' and 'vin_carry' in input declaration"
	},
	{
		"original_line": "@ (cross(V(vin2) - vtrans, -1))  b = 0;", 
		"bug_line": "@ (cross(V(vin2) - vtrans, -1))  b = 0",
		"error_description": "Missing semicolon at the end of the statement. VerilogA requires semicolons to terminate analog block statements."
	},
	{
		"original_line": "   integer a, b, c;", 
		"bug_line": "   integer a, b c;",
		"error_description": "Missing comma between variable declarations 'b' and 'c', violating VerilogA syntax for multiple variable definitions."
	},
	{
		"original_line": "@ (cross(V(vin2) - vtrans, -1))  b = 0;", 
		"bug_line": "@ (cross(V(vin2) - vtrans, -1)  b = 0;",
		"error_description": "Missing closing parenthesis for the event control. The event control started with '@ (' requires two closing parentheses: one for the cross function and one for the event group. Removing one parenthesis leaves the event control unterminated."
	},
	{
		"original_line": "a = V(vin1) > vtrans;", 
		"bug_line": "a = V(vin1 > vtrans;",
		"error_description": "Missing closing parenthesis for function call V() - the expression should be V(vin1) but the closing parenthesis after vin1 was omitted, causing a syntax error in the function argument list."
	},
	{
		"original_line": "   real vout_carry_val;", 
		"bug_line": "   real vout_carry_val",
		"error_description": "Missing semicolon at the end of the variable declaration, causing a syntax error as the next keyword 'analog' becomes part of an invalid expression."
	},
	{
		"original_line": "		    $display("Range specification error.  vlogic_high = (%E) less than vlogic_low = (%E).\n", vlogic_high, vlogic_low );", 
		"bug_line": "		    $display("Range specification error.  vlogic_high = (%E) less than vlogic_low = (%E).\n", vlogic_high, vlogic_low ;",
		"error_description": "Missing closing parenthesis for the $display function call, resulting in a syntax error due to unclosed parentheses."
	},
	{
		"original_line": "parameter real tfall = 1u from (0:inf);", 
		"bug_line": "parameter real tfall = 1u from (0:inf;",
		"error_description": "Unmatched parenthesis: the opening '(' in the range expression is never closed, causing a syntax error as the compiler expects a closing ')' before the semicolon."
	},
	{
		"original_line": "	 if (vtrans > vlogic_high || vtrans < vlogic_low) begin", 
		"bug_line": "	 if (vtrans > vlogic_high || vtrans < vlogic_low begin",
		"error_description": "Missing closing parenthesis for the conditional expression in the if statement"
	}
]