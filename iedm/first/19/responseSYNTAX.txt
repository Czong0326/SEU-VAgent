[
	{
		"original_line": "            $strobe( "Breakdown voltage no longer exceeded at t = %E.\n",", 
		"bug_line": "            $strobe( "Breakdown voltage no longer exceeded at t = %E.\n,",
		"error_description": "Unterminated string constant due to missing closing double quote"
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module }",
		"error_description": "Mismatched attribute delimiter: The closing '*)' was replaced with '}', creating an unterminated attribute block and invalid symbol."
	},
	{
		"original_line": "            I(vanode, vcathode) <+ -area*ibv;", 
		"bug_line": "            I(vanode vcathode) <+ -area*ibv;",
		"error_description": "Missing comma between function arguments vanode and vcathode, causing a syntax error in the contribution statement"
	},
	{
		"original_line": "parameter real area = 1 from (0:inf);", 
		"bug_line": "parameter real area = 1 from (0:inf)",
		"error_description": "Missing semicolon at the end of the parameter declaration. VerilogA requires each parameter statement to be terminated with a semicolon."
	},
	{
		"original_line": "         ibv = is*bv/$vt;", 
		"bug_line": "         ibv = is bv/$vt;",
		"error_description": "Missing multiplication operator between 'is' and 'bv' creates invalid adjacent identifiers without operator"
	},
	{
		"original_line": "      Vd = V(vanode, vcathode);", 
		"bug_line": "      Vd = V(vanode vcathode);",
		"error_description": "Missing comma separator between function arguments, causing syntax error in function call."
	},
	{
		"original_line": "   f3 = 1 - fc*(1 + m);", 
		"bug_line": "   f3 = 1 - fc*(1 + m)",
		"error_description": "Missing semicolon at end of statement causes syntax error. VerilogA requires semicolons to terminate assignment statements."
	},
	{
		"original_line": "      if (Vd < -5*n*$vt) begin", 
		"bug_line": "      if (Vd < -5*n*$vt) begin;",
		"error_description": "Added semicolon after 'begin', creating invalid token before 'end' keyword. Semicolons cannot terminate compound statement delimiters."
	},
	{
		"original_line": "parameter real bv=10e9 from [0:inf);", 
		"bug_line": "parameter real bv=10e9 from [0:inf]",
		"error_description": "Missing closing parenthesis and semicolon. The range specification uses mismatched brackets ([0:inf]) instead of correct [0:inf), and the line lacks the required semicolon terminator."
	},
	{
		"original_line": "`else", 
		"bug_line": "`els",
		"error_description": "Misspelled preprocessor directive: 'els' instead of correct 'else' keyword, causing unrecognized compiler directive error"
	},
	{
		"original_line": "parameter real is=1e-14 from (0:inf);", 
		"bug_line": "parameter real is=1e-14 from (0:inf;",
		"error_description": "Missing closing parenthesis in range expression (0:inf)"
	},
	{
		"original_line": "                    $abstime );", 
		"bug_line": "                    $abstime ););",
		"error_description": "Added an extra closing parenthesis and semicolon inside the function argument list. The double ');' creates unmatched parentheses and an invalid token after the function argument."
	},
	{
		"original_line": "$strobe( "Breakdown voltage no longer exceeded at t = %E.\n",", 
		"bug_line": "$strobe( "Breakdown voltage no longer exceeded at t = %E.\n"",
		"error_description": "Missing comma between arguments in $strobe system task call, causing a syntax error due to adjacent string and $abstime token without separator."
	},
	{
		"original_line": "         end else begin", 
		"bug_line": "         end else begine",
		"error_description": "Misspelled 'begin' keyword as 'begine', causing unrecognized token syntax error"
	},
	{
		"original_line": "$display( "Breakdown voltage exceeded at t = %E.\n", $abstime );", 
		"bug_line": "$display( "Breakdown voltage exceeded at t = %E.\n", $abstime ;",
		"error_description": "Missing closing parenthesis for $display function call. The expression ends with a semicolon instead of properly closing the parentheses around the function arguments."
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module",
		"error_description": "Unterminated comment attribute: missing closing '*)'"
	},
	{
		"original_line": "   real Vd, Id, Qd;", 
		"bug_line": "   reel Vd, Id, Qd;",
		"error_description": "Misspelled keyword 'real' as 'reel', which is not a valid VerilogA data type identifier"
	},
	{
		"original_line": "f2 = pow((1 - fc), (1 + m));", 
		"bug_line": "f2 = pow((1 - fc) (1 + m));",
		"error_description": "Missing comma between function arguments causes invalid syntax - expressions must be separated by commas in function calls."
	},
	{
		"original_line": "	 BreakingDown = 0;", 
		"bug_line": "	 BreakingDown = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'f1' becomes an invalid continuation."
	},
	{
		"original_line": "parameter real n=1 from (0:inf);", 
		"bug_line": "parameter real n=1 from (0:inf;",
		"error_description": "Missing closing parenthesis ')' for the range specification, causing a syntax error due to unmatched parentheses."
	}
]