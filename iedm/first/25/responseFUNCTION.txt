[
	{
		"original_line": "out_file = $fopen( "%C:r.dat" );", 
		"bug_line": "out_file = $fopen( "%C:r.dat", "r" );",
		"error_description": "Changed file open mode to read-only ("r") instead of default write mode. This prevents writing measurement data to the log file as the file descriptor lacks write permissions."
	},
	{
		"original_line": "tlast_cross = $abstime;", 
		"bug_line": "tlast_cross = $abstime + 1;",
		"error_description": "Sets tlast_cross to a future time (current time + 1 second) instead of the current simulation time. This causes the time difference calculation for frequency to be negative when the actual period is less than 1 second, leading to invalid negative frequency values. For periods greater than 1 second, the calculation becomes 1/(2*(T-1)) instead of 1/(2*T), introducing significant measurement errors."
	},
	{
		"original_line": "      FF(fout) <+ fout_val;", 
		"bug_line": "      FF(fout) <+ 1.0 / fout_val;",
		"error_description": "Assigns the period (1/frequency) instead of frequency to the output. The design requires frequency measurement in Hz, but this modification inverts the output to seconds/cycle."
	},
	{
		"original_line": "real fout_val;", 
		"bug_line": "real fout_val = 1.0;",
		"error_description": "Initializes fout_val to 1.0 instead of 0.0, causing incorrect frequency output (1 Hz) before the first zero-crossing event occurs."
	},
	{
		"original_line": "	units = "Hz";", 
		"bug_line": "	units = "rad/s";",
		"error_description": "Changed frequency units from Hz to rad/s. This causes unit mismatch in the output calculation since the module computes frequency in Hz (1/(2*Δt)), but the nature now expects angular frequency. Simulators performing automatic unit conversion would scale the output by 2π, introducing a ~6.28x error."
	},
	{
		"original_line": "discipline freq_current", 
		"bug_line": "discipline voltage",
		"error_description": "Changed discipline to 'voltage' instead of 'freq_current'. This incorrectly redefines the output port's nature as electrical voltage rather than frequency, causing unit mismatch where frequency values are incorrectly interpreted as voltages during simulation."
	},
	{
		"original_line": "abstol = 1m;", 
		"bug_line": "abstol = 0;",
		"error_description": "Setting absolute tolerance to zero eliminates necessary hysteresis for zero-crossing detection, causing numerical instability and inaccurate frequency measurements during simulations."
	},
	{
		"original_line": "$fstrobe(out_file,"# Generated by Spectre from module `%M'");", 
		"bug_line": "$fstrobe(out_file,"# Generated by Spectre from module `%m'");",
		"error_description": "Changed format specifier from %M to %m, which is undefined in Verilog. This causes the hierarchical module name to be omitted from the log header, resulting in incorrect/missing identification information in the output file."
	},
	{
		"original_line": "module freq_meter(vp,vn,fout);", 
		"bug_line": "module freq_meter(vp,vn);",
		"error_description": "Removed the 'fout' output port, disconnecting the frequency measurement output. This breaks the module's interface and prevents external access to the measured frequency signal."
	},
	{
		"original_line": "real tlast_cross;", 
		"bug_line": "integer tlast_cross;",
		"error_description": "Changing the variable type from real to integer causes truncation of time values stored in tlast_cross. This precision loss leads to incorrect frequency calculations in the cross event handler since fractional time differences between zero crossings are essential for accurate frequency measurement."
	},
	{
		"original_line": "real tlast_cross;", 
		"bug_line": "real tlast_cross = 1e9;",
		"error_description": "Initializing tlast_cross to 1e9 seconds causes negative frequency calculation at first zero crossing since ($abstime - 1e9) is negative, violating the requirement to measure actual signal frequency."
	},
	{
		"original_line": "      @ ( cross (V(vp,vn),0,1.0, vp.potential.abstol) ) begin", 
		"bug_line": "      @ ( cross (V(vp,vn),-1,1.0, vp.potential.abstol) ) begin",
		"error_description": "Changed cross direction from 0 (any zero crossing) to -1 (only negative-going crossings). This causes frequency measurement to trigger on falling edges instead of all zero crossings, halving the measured frequency since only half the waveform cycles are detected."
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "/* instrument_module */",
		"error_description": "Replaced attribute syntax with comment, removing the 'instrument_module' directive. This prevents simulators from recognizing the measurement module, causing frequency output (fout) to remain uninitialized and produce incorrect results."
	},
	{
		"original_line": "if (log_to_file ) begin", 
		"bug_line": "if (log_to_file == 0 ) begin",
		"error_description": "The condition is inverted - the log file is now opened only when logging is disabled (log_to_file=0), causing file write attempts during enabled logging to fail with invalid file descriptor errors."
	},
	{
		"original_line": "potential Frequency;", 
		"bug_line": "flow Frequency;",
		"error_description": "Changing 'potential' to 'flow' creates two flow declarations in the discipline. This violates Verilog-A discipline rules requiring exactly one potential and one flow, causing undefined behavior during simulation when connecting frequency signals."
	},
	{
		"original_line": "tlast_cross = $abstime;", 
		"bug_line": "tlast_cross = tlast_cross;",
		"error_description": "The variable tlast_cross is never updated with the current simulation time. Instead, it retains its initial value (0.0) permanently. This causes the frequency calculation to always use the absolute simulation time as the period interval (1/(2*$abstime)), resulting in continuously decreasing incorrect frequency values rather than measuring actual zero-crossing intervals."
	},
	{
		"original_line": "module freq_meter(vp,vn,fout);", 
		"bug_line": "module freq_meter(vp,vn);",
		"error_description": "The output port 'fout' is removed, making the frequency measurement unavailable externally. This violates the design requirement to output the measured frequency."
	},
	{
		"original_line": "@ ( cross (V(vp,vn),0,1.0, vp.potential.abstol) ) begin", 
		"bug_line": "@ ( cross (V(vp,vn),0,-1.0, vp.potential.abstol) ) begin",
		"error_description": "Changed crossing direction from positive slope (1.0) to negative slope (-1.0). This causes frequency measurement to trigger on falling zero-crossings instead of rising edges, resulting in incorrect period calculation since the time between consecutive falling edges doesn't necessarily represent the full signal period."
	},
	{
		"original_line": "         out_file = $fopen( "%C:r.dat" );", 
		"bug_line": "         out_file = $fopen( "%C:r.dat", "r" );",
		"error_description": "Opens file in read-only mode ("r") instead of default write mode. Subsequent $fstrobe write operations will fail since the file descriptor lacks write permissions, breaking logging functionality."
	},
	{
		"original_line": "discipline freq_current", 
		"bug_line": "discipline freq_voltage",
		"error_description": "Changed discipline name to 'freq_voltage' which is undefined, causing compilation failure when referencing the original 'freq_current' discipline for the fout port."
	}
]