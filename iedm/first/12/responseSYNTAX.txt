[
	{
		"original_line": "sigin_val = V(sigin_p, sigin_n);", 
		"bug_line": "sigin_val = V(sigin_p, sigin_n",
		"error_description": "Missing semicolon at the end of the assignment statement, causing unterminated expression."
	},
	{
		"original_line": "	 if (sigin_dead_high <= sigin_dead_low) begin", 
		"bug_line": "	 if (sigin_dead_high <= sigin_dead_low begin",
		"error_description": "Missing closing parenthesis for conditional expression. Causes unbalanced parentheses syntax error."
	},
	{
		"original_line": "      if (sigin_val >= sigin_dead_high) begin", 
		"bug_line": "      if (sigin_val => sigin_dead_high) begin",
		"error_description": "Using '=>' (assignment pattern operator) instead of '>=' (relational operator) for comparison, causing syntax error."
	},
	{
		"original_line": "         sigout_val = gain_high * (sigin_val - sigin_dead_high) + sigout_leak;", 
		"bug_line": "         sigout_val = gain_high * (sigin_val - sigin_dead_high + sigout_leak;",
		"error_description": "Missing closing parenthesis for the expression inside the multiplication operator, causing an unmatched parenthesis syntax error."
	},
	{
		"original_line": "	    $finish;", 
		"bug_line": "	    $finish",
		"error_description": "Missing semicolon at the end of the $finish statement, causing a syntax error when the parser encounters the 'end' keyword without a statement separator."
	},
	{
		"original_line": "parameter real sigin_dead_high = 10;", 
		"bug_line": "parameter real sigin_dead_high = 10",
		"error_description": "Missing semicolon at the end of the parameter declaration line"
	},
	{
		"original_line": "parameter real sigout_leak = 0;", 
		"bug_line": "parameter real sigout_leak == 0;",
		"error_description": "Used equality operator '==' instead of assignment operator '=' in parameter declaration"
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analg begin",
		"error_description": "Misspelled 'analog' keyword as 'analg'. VerilogA requires 'analog' to declare analog behavior blocks."
	},
	{
		"original_line": "input sigin_p, sigin_n;", 
		"bug_line": "input sigin_p sigin_n;",
		"error_description": "Missing comma between port identifiers. Verilog-A requires commas to separate multiple ports in declaration lists."
	},
	{
		"original_line": "parameter real sigout_leak = 0;", 
		"bug_line": "parameter real sigout_leak = 0",
		"error_description": "Missing semicolon at end of parameter declaration"
	},
	{
		"original_line": "electrical sigin_p, sigin_n, sigout;", 
		"bug_line": "electrica sigin_p, sigin_n, sigout;",
		"error_description": "Misspelled discipline keyword 'electrica' instead of 'electrical', causing an undefined type error"
	},
	{
		"original_line": "module deadband_diffamp(sigin_p, sigin_n, sigout);", 
		"bug_line": "module deadband_diffamp(sigin_p sigin_n, sigout);",
		"error_description": "Missing comma between port identifiers 'sigin_p' and 'sigin_n' in module declaration, causing invalid port list syntax"
	},
	{
		"original_line": "input sigin_p, sigin_n;", 
		"bug_line": "input sigin_p, sigin_n",
		"error_description": "Missing semicolon at the end of the input port declaration. VerilogA requires semicolons to terminate port declarations."
	},
	{
		"original_line": "parameter real sigin_dead_low = -10;", 
		"bug_line": "parameter real sigin_dead_low = -10",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "sigin_val = V(sigin_p, sigin_n);", 
		"bug_line": "sigin_val = V(sigin_p, sigin_n)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "parameter real gain_low = 1;", 
		"bug_line": "paramter real gain_low = 1;",
		"error_description": "Misspelled keyword 'paramter' instead of 'parameter'"
	},
	{
		"original_line": "parameter real sigout_leak = 0;", 
		"bug_line": "parameter real sigout_leak = 0",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error when parsing subsequent lines."
	},
	{
		"original_line": "      sigout_val = sigout_leak;", 
		"bug_line": "      sigout_val = sigout_leak",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "sigout_val = gain_low * (sigin_val - sigin_dead_low) + sigout_leak;", 
		"bug_line": "sigout_val = gain_low * (sigin_val - sigin_dead_low) + sigout_leak",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "      sigout_val = sigout_leak;", 
		"bug_line": "      sigout_val = sigout_leak",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'sigin_val' will be interpreted as part of the same expression."
	}
]