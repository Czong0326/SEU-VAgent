[
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "`include "disciplines.vams",
		"error_description": "Unterminated string: Missing closing double quote in the `include directive"
	},
	{
		"original_line": "`include "rbtConst.va"", 
		"bug_line": "include "rbtConst.va"",
		"error_description": "Missing backtick (`) in the `include directive, causing the compiler to interpret 'include' as an invalid identifier instead of a preprocessor directive."
	},
	{
		"original_line": "        `else", 
		"bug_line": "        `elses",
		"error_description": "Misspelled preprocessor directive: '`elses' is not a valid directive (should be '`else')."
	},
	{
		"original_line": "parameter real rbt_W   = `RBT_W   from (0:inf);	// Width of bar", 
		"bug_line": "parameter real rbt_W   = `RBT_W   from (0 inf);	// Width of bar",
		"error_description": "Missing colon in range expression (0 inf) instead of (0:inf), causing invalid range syntax"
	},
	{
		"original_line": "Pwr(T) <+ Temp(T) / rbt_Rth;", 
		"bug_line": "Pwr(T) <+ Temp(T) / rbt_Rth",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "`ifdef __RBT_THERMAL_VA__", 
		"bug_line": "ifdef __RBT_THERMAL_VA__",
		"error_description": "Missing backtick ` before preprocessor directive, causing 'ifdef' to be interpreted as an unknown identifier instead of a valid compiler directive."
	},
	{
		"original_line": "parameter real rbt_cm  = `RBT_CM  from (0:inf);	// Mass heat capacity", 
		"bug_line": "parameter real rbt_cm  = `RBT_CM  from (0:inf)	// Mass heat capacity",
		"error_description": "Missing semicolon at the end of the parameter declaration. VerilogA requires semicolons to terminate parameter statements."
	},
	{
		"original_line": "parameter real rbt_rho = `RBT_RHO from (0:inf); // Density", 
		"bug_line": "parameter real rbt_rho = `RBT_RHO from (0:inf; // Density",
		"error_description": "Missing closing parenthesis in the range expression. The correct syntax requires matching parentheses around range specifications like '(0:inf)'."
	},
	{
		"original_line": "`else", 
		"bug_line": "`elsee",
		"error_description": "Added an extra 'e' to the directive, creating an undefined compiler directive `elsee which causes a syntax error."
	},
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "`include "disciplines.vams",
		"error_description": "Unterminated string literal due to missing closing double quote"
	},
	{
		"original_line": "parameter real rbt_THK = `RBT_THK from (0:inf);	// Thickness of the bar", 
		"bug_line": "parameter real rbt_THK = `RBT_THK from (0,inf);	// Thickness of the bar",
		"error_description": "Replaced colon with comma in range specification (0:inf becomes 0,inf). VerilogA requires colons for range operators, making this a syntax error."
	},
	{
		"original_line": "parameter real rbt_W   = `RBT_W   from (0:inf);	// Width of bar", 
		"bug_line": "parameter real rbt_W   = `RBT_W   from (0,inf);	// Width of bar",
		"error_description": "Using comma ',' instead of colon ':' in the range specification (0,inf) causes a syntax error. VerilogA requires colons for range expressions like (min:max)."
	},
	{
		"original_line": "inout T;", 
		"bug_line": "inout T",
		"error_description": "Missing semicolon at the end of the port declaration, causing a syntax error when the parser encounters the next token 'thermal'."
	},
	{
		"original_line": "parameter real rbt_rho = `RBT_RHO from (0:inf); // Density", 
		"bug_line": "parameter real rbt_rho = `RBT_RHO from (0,inf); // Density",
		"error_description": "Invalid range separator: comma ',' used instead of required colon ':' in the 'from' clause, violating VerilogA range syntax rules."
	},
	{
		"original_line": "parameter real rbt_Rth = `RBT_RTH from (0:inf);	// Thermal resistance", 
		"bug_line": "parameter real rbt_Rth = `RBT_RTH from (0:inf	// Thermal resistance",
		"error_description": "Missing closing parenthesis in range specification (0:inf). The unmatched '(' will cause a syntax error as the range expression is incomplete."
	},
	{
		"original_line": "`define __RBT_THERMAL_VA__", 
		"bug_line": "define __RBT_THERMAL_VA__",
		"error_description": "Missing backtick (`) before compiler directive keyword 'define', causing the preprocessor to not recognize it as a valid directive."
	},
	{
		"original_line": "Pwr(T) <+ ddt( Cth * Temp(T) );", 
		"bug_line": "Pwr(T) <+ ddt( Cth * Temp(T)  ;",
		"error_description": "Missing closing parenthesis for the ddt function call, causing unmatched parentheses"
	},
	{
		"original_line": "localparam Cth = rbt_cm * rbt_rho * rbt_W * rbt_L * rbt_THK;", 
		"bug_line": "localparam Cth = rbt_cm * rbt_rho * rbt_W * rbt_L * rbt_THK",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as the statement is not properly terminated."
	},
	{
		"original_line": "`include "rbtConst.va"", 
		"bug_line": "`include "rbtConst.va",
		"error_description": "Unterminated string: missing closing double quote after filename"
	},
	{
		"original_line": "thermal T;", 
		"bug_line": "thermal T",
		"error_description": "Missing semicolon at the end of the statement causes a syntax error as the next token 'parameter' becomes unexpected."
	}
]