[
	{
		"original_line": "electrical vd7, vd6, vd5, vd4, vd3, vd2, vd1, vd0, vout;", 
		"bug_line": "electrical vd7, vd6, vd5, vd4, vd3, vd2, vd1 vd0, vout;",
		"error_description": "Missing comma between vd1 and vd0 identifiers causes syntax error due to undeclared 'vd0' token"
	},
	{
		"original_line": "parameter real trise = 0 from [0:inf);", 
		"bug_line": "parameter real trise = 0 form [0:inf);",
		"error_description": "Misspelled keyword 'from' as 'form', causing unrecognized directive in parameter declaration"
	},
	{
		"original_line": "module dac_8bit_ideal (vd7, vd6, vd5, vd4, vd3, vd2, vd1, vd0, vout);", 
		"bug_line": "moduel dac_8bit_ideal (vd7, vd6, vd5, vd4, vd3, vd2, vd1, vd0, vout);",
		"error_description": "Misspelled keyword 'moduel' instead of correct 'module' keyword, causing unrecognized declaration syntax"
	},
	{
		"original_line": "V(vout) <+ transition( vref*out_scaled/256, tdel, trise, tfall );", 
		"bug_line": "V(vout) <+ transition( vref*out_scaled/256, tdel trise, tfall );",
		"error_description": "Missing comma between 'tdel' and 'trise' arguments in function call, causing two identifiers without separator"
	},
	{
		"original_line": "    analog begin", 
		"bug_line": "    analog begn",
		"error_description": "Misspelled 'begin' keyword as 'begn', causing undefined token syntax error"
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd2) > vtrans) ? 4 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd2) > vtrans) ? 4 0);",
		"error_description": "Missing colon in ternary operator between true/false expressions"
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd3) > vtrans) ? 8 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd3) > vtrans) ? 8 ; 0);",
		"error_description": "Ternary operator uses semicolon ';' instead of colon ':' to separate true/false expressions"
	},
	{
		"original_line": "		out_scaled = 0;", 
		"bug_line": "		out_scaled = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects an operator or semicolon before the next assignment"
	},
	{
		"original_line": "parameter real vref  = 1 from [0:inf);", 
		"bug_line": "parameter real vref  == 1 from [0:inf);",
		"error_description": "Replaced assignment operator '=' with equality operator '==', which is invalid syntax for parameter declarations"
	},
	{
		"original_line": "    analog begin", 
		"bug_line": "    analog beginn",
		"error_description": "Misspelled 'begin' as 'beginn', creating an unrecognized keyword"
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd6) > vtrans) ? 64 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd6) > vtrans) ? 64 0);",
		"error_description": "Missing colon in ternary operator, violating the 'condition ? true_expr : false_expr' syntax structure."
	},
	{
		"original_line": "electrical vd7, vd6, vd5, vd4, vd3, vd2, vd1, vd0, vout;", 
		"bug_line": "electrical vd7, vd6, vd5, vd4, vd3, vd2, vd1, vd0, vout",
		"error_description": "Missing semicolon at the end of the discipline declaration, causing a syntax error as VerilogA requires statements to be properly terminated."
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd7) > vtrans) ? 128 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd7) > vtrans) ; 128 : 0);",
		"error_description": "Replaced ternary operator '?' with semicolon ';', breaking conditional expression syntax and creating invalid tokens"
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd1) > vtrans) ? 2 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd1) > vtrans ? 2 : 0);",
		"error_description": "Missing closing parenthesis for the inner condition. The expression '(V(vd1) > vtrans' lacks a closing parenthesis, causing unbalanced parentheses in the ternary operator."
	},
	{
		"original_line": "parameter real tdel  = 0 from [0:inf);", 
		"bug_line": "parameter real tdel  = 0 from [0:inf)",
		"error_description": "Missing required semicolon at the end of the parameter declaration statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd7) > vtrans) ? 128 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd7) > vtrans) ? 128 0);",
		"error_description": "Missing colon in ternary operator between true/false expressions"
	},
	{
		"original_line": "		out_scaled = out_scaled + ((V(vd3) > vtrans) ? 8 : 0);", 
		"bug_line": "		out_scaled = out_scaled + ((V(vd3) > vtrans ? 8 : 0);",
		"error_description": "Missing closing parenthesis for the condition in ternary operator, causing unbalanced parentheses"
	},
	{
		"original_line": "out_scaled = 0;", 
		"bug_line": "out_scaled = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements in analog blocks."
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd4) > vtrans) ? 16 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd4) > vtrans) ? 16 0);",
		"error_description": "Missing colon between ternary operator outputs causes syntax error"
	},
	{
		"original_line": "out_scaled = out_scaled + ((V(vd0) > vtrans) ? 1 : 0);", 
		"bug_line": "out_scaled = out_scaled + ((V(vd0) > vtrans) ? 1 : 0",
		"error_description": "Missing semicolon at statement termination"
	}
]