[
	{
		"original_line": "            sigout_inc_val = vlogic_high;", 
		"bug_line": "            sigout_inc_val = vlogic_high",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "parameter real tdel = 0 from [0:inf);", 
		"bug_line": "parameter real tdel = 0 from (0:inf);",
		"error_description": "Mismatched parentheses in range constraint. Verilog-A requires square brackets for range expressions, but an opening parenthesis was used instead of the required opening square bracket."
	},
	{
		"original_line": "`define same 1", 
		"bug_line": "`define 1 same",
		"error_description": "Macro name '1' violates Verilog-A identifier rules; identifiers must start with a letter or underscore, not a digit."
	},
	{
		"original_line": "         end else if (state == `behind) begin", 
		"bug_line": "         end else if (state == `behind begin",
		"error_description": "Missing closing parenthesis ')' in conditional expression"
	},
	{
		"original_line": "         end else if (state == `same) begin", 
		"bug_line": "         endd else if (state == `same) begin",
		"error_description": "Misspelled 'end' keyword as 'endd', creating an undefined identifier syntax error"
	},
	{
		"original_line": "            sigout_dec_val = vlogic_low;", 
		"bug_line": "            sigout_dec_val = vlogic_low",
		"error_description": "Missing semicolon at the end of the assignment statement, causing unterminated expression before the 'end' keyword."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begin;",
		"error_description": "Added semicolon after 'begin' keyword, which is invalid syntax in Verilog-A as 'begin' must not be followed by a semicolon until its corresponding 'end' block terminator."
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "* instrument_module *)",
		"error_description": "Missing opening parenthesis '(' for attribute. Attributes must be enclosed in (* ... *). The modified line starts with an asterisk instead of '(*', causing a syntax error due to an invalid attribute declaration."
	},
	{
		"original_line": "tpos_on_lo = 0;", 
		"bug_line": "tpos_on_lo = 0)",
		"error_description": "Added unmatched closing parenthesis which creates invalid syntax and breaks expression parsing"
	},
	{
		"original_line": "   integer tpos_on_if, tpos_on_lo;  // flags for transitions on the inputs", 
		"bug_line": "   integer tpos_on_if tpos_on_lo;  // flags for transitions on the inputs",
		"error_description": "Missing comma between variable declarations causes syntax error"
	},
	{
		"original_line": "         sigout_dec_val = 0;", 
		"bug_line": "         sigout_dec_val = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the statement is improperly terminated."
	},
	{
		"original_line": "          tpos_on_lo = 1;", 
		"bug_line": "          tpos_on_lo = 1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects either a semicolon or another expression before the 'end' keyword."
	},
	{
		"original_line": "parameter real vtrans = 2.5;", 
		"bug_line": "parameter real vtrans = 2.5",
		"error_description": "Missing semicolon at the end of the parameter declaration. VerilogA requires semicolons to terminate parameter statements."
	},
	{
		"original_line": "         end else if (state == `behind) begin", 
		"bug_line": "         end else if (state == `behind begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression, creating unbalanced parentheses and invalid syntax."
	},
	{
		"original_line": "         end else if (state == `same) begin", 
		"bug_line": "         end else if (state == `same)) begin",
		"error_description": "Unbalanced parentheses: extra closing parenthesis in condition causes syntax error"
	},
	{
		"original_line": "         state = `same;", 
		"bug_line": "         state = `same",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with a semicolon."
	},
	{
		"original_line": "         sigout_inc_val = vlogic_high;", 
		"bug_line": "         sigout_inc_val = vlogic_high",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error when the parser encounters the next identifier (sigout_dec_val) without an operator separator."
	},
	{
		"original_line": "         if (state == `behind) begin", 
		"bug_line": "         if (state == `behind begin",
		"error_description": "Missing closing parenthesis ')' for the condition expression in the if statement, causing unbalanced parentheses."
	},
	{
		"original_line": "module freq_ph_detector(vin_if, vin_lo, sigout_inc, sigout_dec);", 
		"bug_line": "module freq_ph_detector(vin_if, vin_lo. sigout_inc, sigout_dec);",
		"error_description": "Replaced comma separator with invalid period between port declarations, causing syntax error in port list"
	},
	{
		"original_line": "      end else if (tpos_on_if) begin", 
		"bug_line": "      end else if (tpos_on_if begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression, making the syntax invalid due to unbalanced parentheses."
	}
]