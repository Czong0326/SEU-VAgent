[
	{
		"original_line": "        Vtp      = Vt0bs - Vdsi * mvss_delta - 0.5 * aphit;                             // Computed from corrected intrinsic Vbs and intrinsic Vds", 
		"bug_line": "        Vtp      = Vt0bs - Vdsi * mvss_delta - 0.5 * aphit                              // Computed from corrected intrinsic Vbs and intrinsic Vds",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        etai                    =       ( Vgsi - ( Vt0bs0 - FF * aphit ))/ ( nphit );", 
		"bug_line": "        etai                    =       ( Vgsi - ( Vt0bs0 - FF * aphit ))/ ( nphit )",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        Qdif                    =       ( mvss_type * mvss_Cif + mvss_CC * Vgdraw ) * FFy;", 
		"bug_line": "        Qdif                    =       ( mvss_type * mvss_Cif + mvss_CC * Vgdraw ) * FFy",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "`else", 
		"bug_line": "else",
		"error_description": "Missing backtick before 'else' directive, causing a syntax error as the preprocessor expects a valid compiler directive starting with a backtick."
	},
	{
		"original_line": "Qb                      =       -mvss_type * mvss_W * Leff * ( mvss_Cg * mvss_gamma * sqrt( abs( psis - Vbsi )) + ( a - 1.0 )/ ( 1.0 * a ) * Qinv * ( 1.0 - qi ));", 
		"bug_line": "Qb                      =       -mvss_type * mvss_W * Leff * ( mvss_Cg * mvss_gamma * sqrt( abs( psis - Vbsi )) + ( a - 1.0 )/ ( 1.0 * a ) * Qinv * ( 1.0 - qi ))",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "electrical xdisp, vss;", 
		"bug_line": "electrical xdisp vss;",
		"error_description": "Missing comma between identifiers in net declaration. VerilogA requires commas to separate multiple identifiers in a single declaration statement."
	},
	{
		"original_line": "tol                     =       ( `MVSS_SMALL_VALUE * mvss_vxo/ 100.0 ) * ( `MVSS_SMALL_VALUE * mvss_vxo/ 100.0 ) * me/ ( 2 * `P_Q );", 
		"bug_line": "tol                     =       ( `MVSS_SMALL_VALUE * mvss_vxo/ 100.0 ) * ( `MVSS_SMALL_VALUE * mvss_vxo/ 100.0 ) * me/ ( 2 * `P_Q ;",
		"error_description": "Missing closing parenthesis in denominator expression causes mismatched parentheses"
	},
	{
		"original_line": "        I(di,si)                <+      mvss_type * dir * Id;", 
		"bug_line": "        I(di,si)                <+      mvss_type * dir * Id",
		"error_description": "Missing semicolon at the end of the contribution statement, causing syntax error as statements must be properly terminated in VerilogA."
	},
	{
		"original_line": "        rbt_mu = mvss_mu * mobModFactor;", 
		"bug_line": "        rbt_mu = mvss_mu * mobModFactor",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "parameter real      mvss_phib   = 1.2;                                  // ~abs(2*phif)>0 [V]", 
		"bug_line": "parameter real      mvss_phib   = 1.2,;                                  // ~abs(2*phif)>0 [V]",
		"error_description": "Extra comma after parameter value creates invalid syntax (expects another parameter assignment to follow)."
	},
	{
		"original_line": "        stress = (- rbt_wgVtoT) * rbt_senseMSF * V(xdisp,vss); // -ve sign for equivalent circuit convention", 
		"bug_line": "        stress = (- rbt_wgVtoT) * rbt_senseMSF V(xdisp,vss); // -ve sign for equivalent circuit convention",
		"error_description": "Missing multiplication operator between 'rbt_senseMSF' and 'V(xdisp,vss)', creating invalid adjacent expressions without operator."
	},
	{
		"original_line": "real Rs, Rd, Vds, Vgs, Vgsraw, Vgdraw, Vbs, Vdsi, Vgsi, Vbsi, dir;", 
		"bug_line": "real Rs, Rd, Vds, Vgs, Vgsraw, Vgdraw, Vbs Vdsi, Vgsi, Vbsi, dir;",
		"error_description": "Missing comma between Vbs and Vdsi in variable declaration list, causing syntax error due to unseparated identifiers."
	},
	{
		"original_line": "        Vbscorr  = Vbsi + Vcorr;                                                        // Intrinsic Vgs corrected (to be used for charge and current computation)", 
		"bug_line": "        Vbscorr  = Vbsi + Vcorr                                                         // Intrinsic Vgs corrected (to be used for charge and current computation)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        Vgta                    =       Vgt/ a;                                                         // Vdsat in strong inversion", 
		"bug_line": "        Vgta                    =       Vgt/ a                                                          // Vdsat in strong inversion",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "        Vdsi = mvss_type * ( V(si) - V(di) );", 
		"bug_line": "        Vdsi = mvss_type * ( V(si) - V(di) )",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to end with a semicolon."
	},
	{
		"original_line": "Vdsi = mvss_type * ( V(di) - V(si) );", 
		"bug_line": "Vdsi = mvss_type * ( V(di) - V(si);",
		"error_description": "Missing closing parenthesis in expression - unmatched opening parenthesis remains unclosed"
	},
	{
		"original_line": "parameter real      mvss_beta   = `MVSS_BETA    from (0:inf);           // Saturation factor. Typ. nFET=1.8, pFET=1.6", 
		"bug_line": "parameter real      mvss_beta   = `MVSS_BETA    from (0:inf           // Saturation factor. Typ. nFET=1.8, pFET=1.6",
		"error_description": "Missing closing parenthesis in the range expression. Correct syntax requires parentheses around range limits: from (min:max)."
	},
	{
		"original_line": "        else begin", 
		"bug_line": "        elsee begin",
		"error_description": "Misspelled 'else' keyword as 'elsee', causing unrecognized token syntax error"
	},
	{
		"original_line": "I(di,b)                 <+      ddt( Qd );                                                      // charge term: node di to node b", 
		"bug_line": "I(di,b)                 <+      ddt( Qd ;                                                      // charge term: node di to node b",
		"error_description": "Missing closing parenthesis in ddt function call. The statement ends with a semicolon inside the parentheses, causing syntax error."
	},
	{
		"original_line": "Fs              =       0.0;                                                            // Not used", 
		"bug_line": "Fs              =       0.0                                                            // Not used",
		"error_description": "Missing semicolon at the end of the assignment statement"
	}
]