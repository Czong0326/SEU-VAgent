[
	{
		"original_line": "      Tau(pos_shaft) <+ Tau(<wshaft>);", 
		"bug_line": "      Tau(pos_shaft) <+ Tau(wshaft>);",
		"error_description": "Missing opening angle bracket '<' for branch specification in Tau function argument. Branch names must be enclosed in angle brackets (e.g., <branch_name>)."
	},
	{
		"original_line": "module dc_motor(vp, vn, wshaft, pos_shaft);", 
		"bug_line": "module dc_motor(vp, vn, wshaft, pos_shaft",
		"error_description": "Missing closing parenthesis and semicolon in module declaration"
	},
	{
		"original_line": "parameter real j = 0.004;", 
		"bug_line": "parameter real j = 0.004",
		"error_description": "Missing semicolon at the end of parameter declaration"
	},
	{
		"original_line": "inout wshaft;", 
		"bug_line": "inot wshaft;",
		"error_description": "Misspelled keyword 'inout' as 'inot' - VerilogA requires correct port direction keywords"
	},
	{
		"original_line": "rotational pos_shaft;", 
		"bug_line": "rotational pos_shaft",
		"error_description": "Missing semicolon at the end of the port type declaration"
	},
	{
		"original_line": "module dc_motor(vp, vn, wshaft, pos_shaft);", 
		"bug_line": "module dc_motor(vp, vn wshaft, pos_shaft);",
		"error_description": "Missing comma between ports 'vn' and 'wshaft' in module declaration"
	},
	{
		"original_line": "parameter real j = 0.004;", 
		"bug_line": "parameter real j = 0.004",
		"error_description": "Missing semicolon at the end of the parameter declaration. VerilogA requires semicolons to terminate parameter statements, and omitting it will cause a syntax error when parsing subsequent lines."
	},
	{
		"original_line": "electrical vp, vn;", 
		"bug_line": "electrical vp vn;",
		"error_description": "Missing comma between variables in electrical declaration, causing 'vp vn' to be interpreted as a single invalid identifier instead of separate ports."
	},
	{
		"original_line": "parameter real rm = 5.0;", 
		"bug_line": "parameter real rm = 5.0",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as the parser expects a semicolon to terminate the statement."
	},
	{
		"original_line": "inout pos_shaft;", 
		"bug_line": "inout pos_shaft",
		"error_description": "Missing semicolon at line termination, causing syntax error due to unterminated port declaration"
	},
	{
		"original_line": "parameter real kf = 6.2;", 
		"bug_line": "parameter real kf = 6,2;",
		"error_description": "Comma instead of period in real number literal causes syntax error: VerilogA requires decimal points (e.g., 6.2), not commas (6,2)"
	},
	{
		"original_line": "parameter real j = 0.004;", 
		"bug_line": "parameter real j = 0.004",
		"error_description": "Missing semicolon at end of parameter declaration"
	},
	{
		"original_line": "inout wshaft;", 
		"bug_line": "inout wshaft",
		"error_description": "Missing semicolon at the end of the port declaration"
	},
	{
		"original_line": "`endif", 
		"bug_line": "endif",
		"error_description": "Missing backtick in preprocessor directive. 'endif' is interpreted as an identifier instead of a directive, causing syntax error due to unterminated `ifdef block."
	},
	{
		"original_line": "parameter real j = 0.004;", 
		"bug_line": "parameter real j = 0.004",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "      Tau(pos_shaft) <+ Tau(wshaft,wshaft);", 
		"bug_line": "      Tau(pos_shaft) <+ Tau(wshaft wshaft);",
		"error_description": "Missing comma between function arguments in Tau call. Two arguments require separation by a comma."
	},
	{
		"original_line": "parameter real lm = 0.02;", 
		"bug_line": "parameter real lm = 0.02",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as statements in Verilog-A must be properly terminated."
	},
	{
		"original_line": "      `ifdef __VAMS_ENABLE__", 
		"bug_line": "      ifdef __VAMS_ENABLE__",
		"error_description": "Missing backtick ` at directive start causes 'ifdef' to be interpreted as an invalid identifier instead of a preprocessor directive, breaking conditional compilation syntax."
	},
	{
		"original_line": "`ifdef __VAMS_ENABLE__", 
		"bug_line": "`ifdef __VAMS_ENABLE_",
		"error_description": "Unterminated macro name due to missing closing double underscore, making the preprocessor directive invalid."
	},
	{
		"original_line": "module dc_motor(vp, vn, wshaft, pos_shaft);", 
		"bug_line": "module dc_motor(vp, vn, wshaft, pos_shaft",
		"error_description": "Missing semicolon at the end of module declaration statement"
	}
]