[
	{
		"original_line": "      iout_val = ileak;", 
		"bug_line": "      iout_val = ileak",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects an operator or semicolon before the next variable 'iin_val'."
	},
	{
		"original_line": "electrical iin_p, iin_n, iout;", 
		"bug_line": "electrcal iin_p, iin_n, iout;",
		"error_description": "Misspelled keyword 'electrical' as 'electrcal' causing undefined type declaration"
	},
	{
		"original_line": "	 if (idead_high <= idead_low) begin", 
		"bug_line": "	 if (idead_high <= idead_low begin",
		"error_description": "Missing closing parenthesis for the condition expression, causing unbalanced parentheses"
	},
	{
		"original_line": "iout_val = ileak;", 
		"bug_line": "iout_val = ileak",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements within analog blocks."
	},
	{
		"original_line": "output iout;", 
		"bug_line": "output iout",
		"error_description": "Missing semicolon at the end of the output declaration, causing a syntax error as VerilogA requires semicolons to terminate port declarations."
	},
	{
		"original_line": "         iout_val = gain_low * (iin_val - idead_low) + ileak;", 
		"bug_line": "         iout_val = gain_low * (iin_val - idead_low + ileak;",
		"error_description": "Missing closing parenthesis for the expression inside the parentheses, causing unbalanced parentheses."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ initial_step ) begin",
		"error_description": "Missing opening parenthesis after '@' in event control statement. VerilogA requires parentheses around event expressions."
	},
	{
		"original_line": "      if (iin_val >= idead_high) begin", 
		"bug_line": "      if (iin_val = idead_high) begin",
		"error_description": "Assignment operator '=' used instead of relational operator '>='. Verilog-A requires explicit comparisons in conditions; this attempts assignment within a conditional expression."
	},
	{
		"original_line": "module current_dba(iin_p, iin_n, iout);", 
		"bug_line": "moduel current_dba(iin_p, iin_n, iout);",
		"error_description": "Misspelled keyword 'module' as 'moduel'"
	},
	{
		"original_line": "iout_val = gain_low * (iin_val - idead_low) + ileak;", 
		"bug_line": "iout_val = gain_low (iin_val - idead_low) + ileak;",
		"error_description": "Missing multiplication operator between 'gain_low' and the parenthesis, causing invalid function call syntax since 'gain_low' is not a function."
	},
	{
		"original_line": "parameter real gain_high = 1;", 
		"bug_line": "parameter real gain_high = 1",
		"error_description": "Missing semicolon at end of parameter declaration. VerilogA requires all statements and declarations to terminate with semicolons."
	},
	{
		"original_line": "input iin_p, iin_n;", 
		"bug_line": "input iin_p, iin_n",
		"error_description": "Missing semicolon at the end of the input port declaration. VerilogA requires semicolons to terminate port direction statements."
	},
	{
		"original_line": "parameter real idead_low = -1e-3;", 
		"bug_line": "parameter real idead_low = -1e-3",
		"error_description": "Missing semicolon at end of parameter declaration"
	},
	{
		"original_line": "parameter real gain_low = 1;", 
		"bug_line": "parameter real gain_low = 1",
		"error_description": "Missing semicolon at the end of the parameter declaration causes a syntax error as statements must be properly terminated in Verilog-A."
	},
	{
		"original_line": "      iin_val = I(iin_p, iin_n);", 
		"bug_line": "      iin_val = I(iin_p, iin_n)",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "         iout_val = gain_low * (iin_val - idead_low) + ileak;", 
		"bug_line": "         iout_val = gain_low * (iin_val - idead_low + ileak;",
		"error_description": "Missing closing parenthesis for the multiplication expression, creating unbalanced parentheses. The opening parenthesis before 'iin_val' remains unclosed."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ initial_step ) begin",
		"error_description": "Missing opening parenthesis for the event control expression. The '@' event trigger requires parentheses around the event name (e.g., '@(event)')."
	},
	{
		"original_line": "		 $display("Range specification error.  idead_high = (%E) less than idead_low = (%E).\n", idead_high, idead_low );", 
		"bug_line": "		 $display("Range specification error.  idead_high = (%E) less than idead_low = (%E).\n", idead_high, idead_low ;",
		"error_description": "Missing closing parenthesis for $display system task call. The line ends with a semicolon instead of the required ')' before the semicolon, causing unbalanced parentheses."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begin;",
		"error_description": "Added semicolon after 'begin' keyword, which is invalid syntax in VerilogA as 'begin' cannot be terminated with a semicolon when starting a block"
	},
	{
		"original_line": "      iout_val = ileak;", 
		"bug_line": "      iout_val = ileak",
		"error_description": "Missing semicolon at the end of the assignment statement"
	}
]