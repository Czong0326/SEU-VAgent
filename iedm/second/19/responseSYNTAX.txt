[
	{
		"original_line": "real iin_val;", 
		"bug_line": "reel iin_val;",
		"error_description": "Misspelled keyword 'real' as 'reel', which is not a valid data type in VerilogA"
	},
	{
		"original_line": "         if (tend <= tstart) begin", 
		"bug_line": "         if (tend =< tstart) begin",
		"error_description": "Invalid operator '=<' used for less than or equal comparison; correct Verilog-A operator is '<='."
	},
	{
		"original_line": "           integer measuring;", 
		"bug_line": "           integer measuring",
		"error_description": "Missing semicolon at the end of the variable declaration statement."
	},
	{
		"original_line": "   potential Q_Charge;", 
		"bug_line": "   potential Q_Charge",
		"error_description": "Missing semicolon at end of declaration statement. VerilogA requires semicolons to terminate discipline declarations."
	},
	{
		"original_line": "   huge=1;", 
		"bug_line": "   huge=1",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "	access = QQ;", 
		"bug_line": "	access = QQ",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "      @ ( timer(tend)) begin", 
		"bug_line": "      @ ( timer(tend) begin",
		"error_description": "Missing closing parenthesis for the event control. The expression now has unbalanced parentheses, causing a syntax error as the 'begin' keyword is incorrectly included inside the parentheses."
	},
	{
		"original_line": "      V(vp,vn) <+ 0;", 
		"bug_line": "      V(vp,vn <+ 0;",
		"error_description": "Missing closing parenthesis in the potential function call. The expression 'V(vp,vn' is missing the required closing parenthesis before the operator."
	},
	{
		"original_line": "      if (log_to_file ) begin", 
		"bug_line": "      if log_to_file ) begin",
		"error_description": "Missing opening parenthesis after 'if' keyword. The condition must be enclosed in parentheses."
	},
	{
		"original_line": "                  input_expr = 0;", 
		"bug_line": "                  input_expr = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as all Verilog-A statements must be properly terminated."
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module *",
		"error_description": "Unterminated attribute specification due to missing closing '*)' delimiter"
	},
	{
		"original_line": "            $display("Range specification error.  tend = (%E) less than tstart = (%E).", tend, tstart );", 
		"bug_line": "            $display("Range specification error.  tend = (%E) less than tstart = (%E).", tend tstart );",
		"error_description": "Missing comma between arguments 'tend' and 'tstart' in the $display system task, causing invalid argument separation syntax error."
	},
	{
		"original_line": "             out_file = $fopen( "%C:r.dat" );", 
		"bug_line": "             out_file = $fopen( "%C:r.dat );",
		"error_description": "Unterminated string literal due to missing closing double quote (") after 'r.dat'"
	},
	{
		"original_line": "		$finish;", 
		"bug_line": "		$finish",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error when parsing subsequent tokens"
	},
	{
		"original_line": "          input_expr = 0;", 
		"bug_line": "          input_expr = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "out_file = $fopen( "%C:r.dat" );", 
		"bug_line": "out_file = $fopen( "%C:r.dat );",
		"error_description": "Unterminated string literal due to missing closing double quote after the filename"
	},
	{
		"original_line": "charge_current qout;", 
		"bug_line": "charge_curren qout;",
		"error_description": "Misspelled discipline name 'charge_curren' instead of 'charge_current', causing an undefined type error as the discipline was previously declared as 'charge_current'."
	},
	{
		"original_line": "real qout_val;", 
		"bug_line": "real qout_val",
		"error_description": "Missing semicolon at the end of the variable declaration statement"
	},
	{
		"original_line": "discipline charge_current", 
		"bug_line": "discipline charge_current;",
		"error_description": "Added an extraneous semicolon at the end of the discipline declaration line. VerilogA discipline blocks must not have semicolons after the name declaration; the body should follow directly."
	},
	{
		"original_line": "   real input_expr;", 
		"bug_line": "   reel input_expr;",
		"error_description": "Misspelled keyword 'real' as 'reel', which is not a valid Verilog-A data type."
	}
]