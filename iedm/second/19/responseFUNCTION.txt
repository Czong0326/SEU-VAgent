[
	{
		"original_line": "parameter real tstart = 0 from [0:inf);", 
		"bug_line": "parameter real tstart = 0 from (0:inf];",
		"error_description": "Changed range to (0:inf] which excludes 0. The default value 0 becomes invalid, causing parameter range violation since simulation start time cannot be 0."
	},
	{
		"original_line": "		$finish;", 
		"bug_line": "		$display("Error: Invalid time range");",
		"error_description": "Replaced $finish with $display, allowing simulation to continue with invalid tstart/tend parameters instead of terminating. This could cause incorrect charge measurement due to undefined time window."
	},
	{
		"original_line": "electrical vp, vn;", 
		"bug_line": "charge_current vp, vn;",
		"error_description": "Changed discipline from electrical to charge_current, making voltage/current accessors (V/I) invalid. The analog block relies on electrical nature for V(vp,vn) and I(vp,vn) operations."
	},
	{
		"original_line": "         if (log_to_file) $fclose(out_file);", 
		"bug_line": "         if (!log_to_file) $fclose(out_file);",
		"error_description": "Inverted condition closes the file only when logging is disabled (log_to_file=0), causing two errors: 1) Attempt to close an unopened file when logging is disabled (runtime error) 2) Resource leak when logging is enabled (log_to_file=1) as the opened file remains unclosed."
	},
	{
		"original_line": "parameter real tstart = 0 from [0:inf);", 
		"bug_line": "parameter real tstart = 1M from [0:inf);",
		"error_description": "Default tstart (1e-6) equals default tend (1e-6), triggering 'tend <= tstart' error during initial_step and aborting simulation with default parameters."
	},
	{
		"original_line": "iin_val = I(vp,vn);", 
		"bug_line": "iin_val = I(vn,vp);",
		"error_description": "Reversed current measurement direction: Measures current flowing from vn to vp instead of vp to vn, causing negative charge readings and incorrect polarity in results."
	},
	{
		"original_line": "$display("Range specification error.  tend = (%E) less than tstart = (%E).", tend, tstart );", 
		"bug_line": "$display("Range specification error.  tend = (%E) greater than tstart = (%E).", tend, tstart );",
		"error_description": "The condition description was changed from 'less than' to 'greater than'. This inverts the error message logic, incorrectly reporting the relationship between tend and tstart when the actual error condition (tend <= tstart) remains unchanged."
	},
	{
		"original_line": "qout_val = idt(input_expr,0);", 
		"bug_line": "qout_val = idt(-input_expr,0);",
		"error_description": "The negative sign causes charge polarity reversal. Instead of measuring the charge flowing from vn to vp, it now measures the opposite flow direction, violating the design specification of measuring charge flow between the terminals."
	},
	{
		"original_line": "qout_val = idt(input_expr,0);", 
		"bug_line": "qout_val = idt(-input_expr,0);",
		"error_description": "The negative sign reverses the current integration direction. This causes the charge measurement to have the opposite polarity (e.g., flowing out instead of in), violating the directional requirement of charge measurement between vn and vp."
	},
	{
		"original_line": "real qout_val;", 
		"bug_line": "real qout_val = 1.0;",
		"error_description": "Added incorrect initial value (1.0) to qout_val, causing a constant 1 Coulomb offset in the measured charge output, violating the requirement for accurate charge measurement starting from 0 at tstart."
	},
	{
		"original_line": "qout_val = idt(input_expr,0);", 
		"bug_line": "qout_val = idt(iin_val,0);",
		"error_description": "The integral uses iin_val (instantaneous current) instead of input_expr (current windowed to measurement interval). This causes charge measurement to include all current flow since simulation start, violating the design to measure only between tstart and tend."
	},
	{
		"original_line": "real qout_val;", 
		"bug_line": "real qout_val = 1.0;",
		"error_description": "Initializing qout_val to 1.0 introduces a DC offset in the charge measurement. The idt() function already initializes the integration to 0 at t=0, but this hard-coded offset causes all charge measurements to be inflated by 1.0 Coulomb regardless of actual current flow."
	},
	{
		"original_line": "V(vp,vn) <+ 0;", 
		"bug_line": "I(vp,vn) <+ 0;",
		"error_description": "Changed voltage contribution to current contribution. This forces zero current flow between vp/vn, preventing charge accumulation and making qout_val always zero, violating the charge measurement functionality."
	},
	{
		"original_line": "real iin_val;", 
		"bug_line": "integer iin_val;",
		"error_description": "Changing iin_val from real to integer causes truncation of current measurements, resulting in incorrect charge integration due to loss of fractional current values."
	},
	{
		"original_line": "      integer out_file;", 
		"bug_line": "      real out_file;",
		"error_description": "Changed out_file type from integer to real. $fopen returns an integer file descriptor which cannot be stored in a real variable. This causes type mismatch errors during file operations when logging is enabled (log_to_file=1), breaking the logging functionality."
	},
	{
		"original_line": "real input_expr;", 
		"bug_line": "real input_expr = 1.0;",
		"error_description": "Initializing input_expr to 1.0 introduces a constant offset in the charge calculation. The variable is later assigned to either iin_val or 0 in the analog block, but the initial value contaminates the idt() integration at t=0, creating erroneous charge accumulation even when no current flows."
	},
	{
		"original_line": "   integer measuring;", 
		"bug_line": "   integer measure_flag;",
		"error_description": "The variable 'measuring' is incorrectly renamed to 'measure_flag', making all subsequent references to 'measuring' unresolved. This prevents the integration flag from being set, causing the charge measurement to remain zero regardless of actual current flow."
	},
	{
		"original_line": "      if ( measuring )", 
		"bug_line": "      if ( !measuring )",
		"error_description": "Reverses the measurement logic, causing current integration only when NOT in measurement window. Charge accumulates during unintended periods (before tstart and after tend) instead of during [tstart, tend]."
	},
	{
		"original_line": "charge_current qout;", 
		"bug_line": "charge_current qout = 0;",
		"error_description": "Assigning a default value (0) to the charge_current output port violates Verilog-A port declaration rules and creates a short circuit by forcing constant zero charge output, breaking the measurement functionality."
	},
	{
		"original_line": "real qout_val;", 
		"bug_line": "real qout_val = 1.0;",
		"error_description": "Initializing qout_val to 1.0 introduces a constant offset in the measured charge, violating the requirement that charge should start accumulating from zero at tstart."
	}
]