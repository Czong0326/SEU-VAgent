[
	{
		"original_line": "parameter real V_MAX = 5 from (0.1 to 50);      // Maximum operating voltage [V]", 
		"bug_line": "parameter real V_MAX = 5 from (0.1 to 50;      // Maximum operating voltage [V]",
		"error_description": "Missing closing parenthesis in the range specification. The opening parenthesis '(' at 'from (' has no matching closing ')', causing a syntax error."
	},
	{
		"original_line": "  `endif", 
		"bug_line": "  `endifd",
		"error_description": "Misspelled preprocessor directive 'endifd' instead of correct 'endif'. This extra 'd' character makes the directive unrecognizable to the compiler, causing a syntax error for unterminated `ifdef block."
	},
	{
		"original_line": "real v_pn = V(p,n);", 
		"bug_line": "real v_pn = V(p,n)",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "module res_linear_process (p, n);", 
		"bug_line": "module res_linear_process (p, n",
		"error_description": "Missing closing parenthesis and semicolon. The line ends without terminating the port list with ')' and lacks the required semicolon to end the module declaration statement."
	},
	{
		"original_line": "inout p, n;", 
		"bug_line": "inout p, n",
		"error_description": "Missing semicolon at the end of the port declaration statement"
	},
	{
		"original_line": "electrical p, n;", 
		"bug_line": "electrical p, n",
		"error_description": "Missing semicolon at the end of the port discipline declaration"
	},
	{
		"original_line": "process_shift = 1 + corner_shift + random_shift;", 
		"bug_line": "process_shift = 1 + corner_shift + random_shift)",
		"error_description": "Extra closing parenthesis without matching opening parenthesis at end of statement"
	},
	{
		"original_line": "module res_linear_process (p, n);", 
		"bug_line": "module res_linear_process (p, n));",
		"error_description": "Extra closing parenthesis in port list creates mismatched parentheses"
	},
	{
		"original_line": "  if (abs(v_pn) > V_MAX) begin", 
		"bug_line": "  if (abs(v_pn) > V_MAX begin",
		"error_description": "Missing closing parenthesis for the conditional expression. The condition should be enclosed in parentheses, but the right parenthesis after V_MAX is removed, causing unbalanced parentheses."
	},
	{
		"original_line": "endgenerate", 
		"bug_line": "endgenerat",
		"error_description": "Misspelled 'endgenerate' keyword as 'endgenerat', causing unrecognized block termination"
	},
	{
		"original_line": "  real process_shift;", 
		"bug_line": "  real process_shift",
		"error_description": "Missing semicolon at the end of the variable declaration statement. VerilogA requires semicolons to terminate statements, and its absence will cause a syntax error during compilation."
	},
	{
		"original_line": "  if (R0 <= 0) $error("Invalid R0=%.1e: Must be positive", R0);", 
		"bug_line": "  if (R0 <= 0) $error("Invalid R0=%.1e: Must be positive", R0)",
		"error_description": "Missing semicolon at the end of the statement causes syntax error as statements in Verilog-A blocks must be properly terminated."
	},
	{
		"original_line": "parameter real V_MAX = 5 from (0.1 to 50);      // Maximum operating voltage [V]", 
		"bug_line": "parameter real V_MAX = 5 from [0.1 to 50);      // Maximum operating voltage [V]",
		"error_description": "Mismatched brackets: opening square bracket '[' doesn't match closing parenthesis ')' in the range specification"
	},
	{
		"original_line": "  `endif", 
		"bug_line": "  endif",
		"error_description": "Removed backtick from preprocessor directive, leaving 'endif' as an invalid identifier. VerilogA requires directives to start with backticks (`), so this appears as an undeclared variable in the analog block."
	},
	{
		"original_line": "  if (abs(CORNER) > 1) $error("Invalid CORNER=%0d", CORNER);", 
		"bug_line": "  if (abs(CORNER) > 1 $error("Invalid CORNER=%0d", CORNER);",
		"error_description": "Missing closing parenthesis for the conditional expression. The condition 'abs(CORNER) > 1' lacks the required closing parenthesis before the '$error' statement."
	},
	{
		"original_line": "real random_shift = R_SIGMA * $dist_normal(seed, 0, 1, 3);", 
		"bug_line": "real random_shift = R_SIGMA * $dist_normal(seed, 0, 1, 3)",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "        `endif", 
		"bug_line": "        endif",
		"error_description": "Missing backtick (`) before 'endif', turning compiler directive into an unrecognized identifier token"
	},
	{
		"original_line": "  `ifdef SIMULATION", 
		"bug_line": "  `ifdef SIMULATION  // Missing closing `endif",
		"error_description": "Unterminated `ifdef directive - comment falsely implies the block is closed while actually breaking the compiler's preprocessor structure"
	},
	{
		"original_line": "if (R_SIGMA < 0) $error("Negative R_SIGMA=%.2f", R_SIGMA);", 
		"bug_line": "if (R_SIGMA < 0) $error("Negative R_SIGMA=%.2f, R_SIGMA);",
		"error_description": "Unterminated string literal due to missing closing double quote after the format specifier. The comma and variable reference become part of the string, breaking the argument list syntax."
	},
	{
		"original_line": "electrical p, n;", 
		"bug_line": "electrical p, n",
		"error_description": "Missing semicolon at the end of the discipline declaration statement"
	}
]