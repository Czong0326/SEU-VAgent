[
	{
		"original_line": "parameter real nr=1.0 exclude 0;", 
		"bug_line": "parameter real nr=1.0 exclude 0",
		"error_description": "Missing semicolon at the end of parameter declaration"
	},
	{
		"original_line": "parameter real nr=1.0 exclude 0;", 
		"bug_line": "parameter real nr=1.0 exclud 0;",
		"error_description": "Misspelled keyword 'exclude' as 'exclud', causing unrecognized directive in parameter declaration"
	},
	{
		"original_line": "parameter real tr=1n;", 
		"bug_line": "parameter real tr=1n",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "         fcs2 = `F2(mjs, fc);", 
		"bug_line": "         fcs2 = `F2(mjs, fc;",
		"error_description": "Missing closing parenthesis in macro call, causing unbalanced parentheses syntax error"
	},
	{
		"original_line": "      if (Vbe <= fpbe) begin", 
		"bug_line": "      if (Vbe <= fpbe begin",
		"error_description": "Missing closing parenthesis ')' in conditional expression"
	},
	{
		"original_line": "      Ibe = (IsExpVbe - is)/bf + (IsExpVbc - is)/br", 
		"bug_line": "      Ibe = (IsExpVbe - is)/bf + (IsExpVbc - is)/br;",
		"error_description": "Added extra semicolon at the end of the expression, creating an unterminated statement when the next line continues with '+ IseExpVbe...'"
	},
	{
		"original_line": "      if (ikf != 1M) Q2 = Q2 + (IsExpVbe - is)/ikf;", 
		"bug_line": "      if (ikf != 1M) Q2 = Q2 + (IsExpVbe - is)/ikf",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "parameter real tr=1n;", 
		"bug_line": "parameter real tr=1n",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing unterminated statement. VerilogA requires all parameter declarations to end with a semicolon."
	},
	{
		"original_line": "`define F3(m, f)		(1 - f*(1 + m))", 
		"bug_line": "`define F3(m, f)		(1 - f*(1 + m)",
		"error_description": "Missing closing parenthesis in macro definition, resulting in unbalanced parentheses in the expression."
	},
	{
		"original_line": "      if (var != 1M) InvQ1 = InvQ1 - Vbe/var;", 
		"bug_line": "      if (var != 1M InvQ1 = InvQ1 - Vbe/var;",
		"error_description": "Missing closing parenthesis ')' in conditional expression. The condition should be enclosed in parentheses."
	},
	{
		"original_line": "   Vbc = V(vbase,vcoll);", 
		"bug_line": "   Vbc = V(vbase,vcoll;",
		"error_description": "Missing closing parenthesis ')' in the function call for voltage potential measurement between vbase and vcoll"
	},
	{
		"original_line": "Ifwd = IsExpVbe - is;", 
		"bug_line": "Ifwd = IsExpVbe - is",
		"error_description": "Missing semicolon at the end of the assignment statement, violating VerilogA's statement termination requirement"
	},
	{
		"original_line": "      real ddt_expr4;", 
		"bug_line": "      real ddt_expr4",
		"error_description": "Missing semicolon at the end of variable declaration. Verilog requires semicolons to terminate variable declarations."
	},
	{
		"original_line": "      InvQ1 = 1;", 
		"bug_line": "      InvQ1 = 1",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "parameter real cje=0 from [0:inf);", 
		"bug_line": "parameter real cje=0 from [0:inf;",
		"error_description": "Missing closing parenthesis in interval specification. Expected ')' after 'inf' but found semicolon instead."
	},
	{
		"original_line": "      Ibc = 0.0;", 
		"bug_line": "      Ibc = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "parameter real is=1e-16 from (0:inf);", 
		"bug_line": "parameter real is=1e-16 from (0:inf;",
		"error_description": "Missing closing parenthesis ')' in the range expression for parameter 'is'. The correct syntax requires balanced parentheses around the range."
	},
	{
		"original_line": "      if (Vbc <= fpbc) begin", 
		"bug_line": "      if (Vbc =< fpbc) begin",
		"error_description": "Reversed operator token '=<' instead of correct '<=' causes invalid syntax"
	},
	{
		"original_line": "         pow_expr3 = 0.0;", 
		"bug_line": "         pow_expr3 = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects either an operator or the end of the statement."
	},
	{
		"original_line": "   real fbe1, fbe2, fbe3;", 
		"bug_line": "   reel fbe1, fbe2, fbe3;",
		"error_description": "Misspelled 'real' keyword as 'reel', causing an invalid data type declaration"
	}
]