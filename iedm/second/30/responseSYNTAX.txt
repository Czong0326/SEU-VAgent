[
	{
		"original_line": "parameter integer LOCAL_SEED = 271828;         // Local instance seed", 
		"bug_line": "parameter integer LOCAL_SEED = 271828         // Local instance seed",
		"error_description": "Missing semicolon at the end of parameter declaration"
	},
	{
		"original_line": "inout p, n;", 
		"bug_line": "inout p, n",
		"error_description": "Missing semicolon at the end of the port declaration. VerilogA requires semicolons to terminate module port declarations."
	},
	{
		"original_line": "          I(p,n) <+ white_noise(noise_pwr, "thermal");", 
		"bug_line": "          I(p,n) <+ white_noise(noise_pwr "thermal");",
		"error_description": "Missing comma between function arguments creates invalid syntax. The comma separating noise_pwr and "thermal" parameters was removed, violating VerilogA function call syntax which requires commas between arguments."
	},
	{
		"original_line": "initial $display("Final R: %.2fΩ (Variation: %.1f%%)",", 
		"bug_line": "initial $display("Final R: %.2fΩ (Variation: %.1f%%)"",
		"error_description": "Missing comma after format string, causing R_actual argument to be incorrectly parsed as part of the string literal"
	},
	{
		"original_line": "$strobe("[Warning] %.2fV exceeds V_MAX=%.1fV @%t",", 
		"bug_line": "$strobe "[Warning] %.2fV exceeds V_MAX=%.1fV @%t",",
		"error_description": "Missing opening parenthesis after $strobe system task call. VerilogA requires parentheses around arguments for system tasks with parameters."
	},
	{
		"original_line": "parameter real LOCAL_VAR = 0.05 from [0:0.15]; // Local mismatch (σ/R0) [0-15%]", 
		"bug_line": "parameter real LOCAL_VAR 0.05 from [0:0.15]; // Local mismatch (σ/R0) [0-15%]",
		"error_description": "Missing equals sign (=) in parameter assignment. VerilogA requires the '=' operator between parameter names and their default values."
	},
	{
		"original_line": "real corner_shift = 0.12 * CORNER;  // ±12% shift for SS/FF corners", 
		"bug_line": "real corner_shift = 0.12 CORNER;  // ±12% shift for SS/FF corners",
		"error_description": "Missing multiplication operator between constant 0.12 and variable CORNER, causing invalid syntax where numerical value directly precedes identifier without operator"
	},
	{
		"original_line": "analog begin", 
		"bug_line": "analogx begin",
		"error_description": "Invalid keyword 'analogx' instead of correct 'analog' keyword for analog block declaration"
	},
	{
		"original_line": "  if (R_actual <= 0) begin", 
		"bug_line": "  if (R_actual <= 0 begin",
		"error_description": "Missing closing parenthesis for conditional expression before 'begin' keyword"
	},
	{
		"original_line": "$strobe("[Error] Negative R=%.2eΩ at %t", R_actual, $realtime);", 
		"bug_line": "$strobe("[Error] Negative R=%.2eΩ at %t" R_actual, $realtime);",
		"error_description": "Missing comma between format string and first argument in $strobe call, causing invalid argument separation syntax error."
	},
	{
		"original_line": "parameter integer GLOBAL_SEED = 314159;        // Global Monte Carlo seed", 
		"bug_line": "parameter integer GLOBAL_SEED  314159;        // Global Monte Carlo seed",
		"error_description": "Missing '=' operator in parameter assignment between identifier and value"
	},
	{
		"original_line": "electrical p, n;", 
		"bug_line": "electrical p, n",
		"error_description": "Missing semicolon at the end of the port declaration statement"
	},
	{
		"original_line": "parameter integer LOCAL_SEED = 271828;         // Local instance seed", 
		"bug_line": "parameter integer LOCAL SEED = 271828;         // Local instance seed",
		"error_description": "Space instead of underscore in identifier splits 'LOCAL_SEED' into two tokens 'LOCAL' and 'SEED', causing invalid syntax for parameter declaration"
	},
	{
		"original_line": "electrical p, n;", 
		"bug_line": "electrical p, n",
		"error_description": "Missing semicolon at end of declaration statement"
	},
	{
		"original_line": "                      $dist_normal(GLOBAL_SEED, 0, 1, 3);  // 3σ variation", 
		"bug_line": "                      $dist_normal(GLOBAL_SEED, 0, 1, 3;  // 3σ variation",
		"error_description": "Missing closing parenthesis for function call, resulting in unterminated function arguments and misplaced semicolon inside the function parameter list."
	},
	{
		"original_line": "  `ifdef SIMULATION", 
		"bug_line": "  `ifdefd SIMULATION",
		"error_description": "Misspelled preprocessor directive 'ifdefd' instead of correct 'ifdef'. VerilogA requires exact directive names, and 'ifdefd' is not a valid preprocessor command."
	},
	{
		"original_line": "  I(p,n) <+ v_pn / R_actual;  // I = V/R", 
		"bug_line": "  I(p,n) <+ v_pn / R_actual  // I = V/R",
		"error_description": "Missing semicolon at statement termination"
	},
	{
		"original_line": "parameter integer LOCAL_SEED = 271828;         // Local instance seed", 
		"bug_line": "parameter integer LOCAL_SEED = 271828         // Local instance seed",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "process_factor = 1 + corner_shift + global_shift + local_shift;", 
		"bug_line": "process_factor = 1 + corner_shift + global_shift + local_shift",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "          if (abs(v_pn) > V_MAX) begin", 
		"bug_line": "          if (abs(v_pn) > V_MAX began",
		"error_description": "Misspelled 'begin' as 'began' - invalid keyword causing syntax error"
	}
]