[
	{
		"original_line": "$strobe("Warning: Negative resistance detected at %t!", $realtime);", 
		"bug_line": "R_actual = 1e9;",
		"error_description": "Replaced warning with incorrect resistance override. When negative resistance is detected, this forcibly sets R_actual to 1e9 Ω instead of preserving the calculated negative value, violating the design's specified temperature-dependent resistance behavior."
	},
	{
		"original_line": "TC2*1e-6 * delta_T*delta_T  // 2nd-order temp effect", 
		"bug_line": "TC2*1e-6 * delta_T / delta_T  // 2nd-order temp effect",
		"error_description": "Replaced multiplication with division for the second delta_T term. This causes the second-order temperature effect to simplify to a constant TC2*1e-6 when delta_T ≠ 0, eliminating the quadratic dependence. Additionally, it introduces division by zero at exactly T_REF (delta_T=0), crashing simulations at the reference temperature."
	},
	{
		"original_line": "                              TC2*1e-6 * delta_T*delta_T  // 2nd-order temp effect", 
		"bug_line": "                              TC2*1e-6 * delta_T  // 2nd-order temp effect",
		"error_description": "Changed the quadratic temperature dependence to linear by removing one delta_T multiplication, violating the intended second-order coefficient behavior."
	},
	{
		"original_line": "real R_actual = R0 * (1 +", 
		"bug_line": "real R_actual = R0 * (0 +",
		"error_description": "Changed the constant term from 1 to 0, eliminating the nominal resistance component. At reference temperature (T_REF), the resistance becomes zero instead of R0, causing catastrophic failure of Ohm's Law implementation."
	},
	{
		"original_line": "real temp = $temperature;", 
		"bug_line": "real temp = T_REF;",
		"error_description": "Replaces the simulation temperature with the fixed reference temperature (T_REF), eliminating all temperature-dependent behavior by forcing delta_T to always be zero."
	},
	{
		"original_line": "  TC1*1e-6 * delta_T +        // 1st-order temp effect", 
		"bug_line": "  TC1*1e6 * delta_T +        // 1st-order temp effect",
		"error_description": "Changed scaling factor from 1e-6 to 1e6. This makes the first-order temperature coefficient 1e12 times larger than intended (ppm to percentage), causing extreme resistance deviations even at small temperature changes."
	},
	{
		"original_line": "TC1*1e-6 * delta_T +        // 1st-order temp effect", 
		"bug_line": "TC1*1e-3 * delta_T +        // 1st-order temp effect",
		"error_description": "Changed scaling factor from 1e-6 to 1e-3, making TC1 effectively 1000x larger. This misinterprets ppm (parts-per-million) as parts-per-thousand, drastically exaggerating temperature effects."
	},
	{
		"original_line": "real delta_T = temp - T_REF;", 
		"bug_line": "real delta_T = T_REF - temp;",
		"error_description": "Reverses the sign of temperature deviation, causing the temperature compensation to work in the opposite direction (e.g., a positive TC1 would incorrectly decrease resistance with increasing temperature)."
	},
	{
		"original_line": "          if (R_actual <= 0) begin", 
		"bug_line": "          if (R_actual > 0) begin",
		"error_description": "The condition is inverted: the warning now triggers for positive resistance (normal condition) instead of negative/zero resistance (dangerous condition). This masks critical failures where extreme temperatures cause negative resistance."
	},
	{
		"original_line": "electrical p, n;", 
		"bug_line": "electrical p;",
		"error_description": "Port 'n' is not declared as an electrical node, making the voltage reference V(p,n) invalid and breaking Ohm's law implementation."
	},
	{
		"original_line": "I(p,n) <+ V(p,n) / R_actual;  // I = V/R", 
		"bug_line": "I(p,n) <+ V(p,n) / R0;  // I = V/R",
		"error_description": "Replaced R_actual (temperature-adjusted resistance) with R0 (nominal resistance), removing temperature compensation and violating design specification for thermal modeling."
	},
	{
		"original_line": "I(p,n) <+ V(p,n) / R_actual;  // I = V/R", 
		"bug_line": "I(n,p) <+ V(p,n) / R_actual;  // I = V/R",
		"error_description": "Swapped branch from I(p,n) to I(n,p), inverting current direction. This violates resistor polarity, causing current to flow opposite to voltage polarity."
	},
	{
		"original_line": "parameter real TC2 = 10 from (-1e3 to 1e3);     // 2nd-order tempco [ppm/°C²]", 
		"bug_line": "parameter real TC2_wrong = 10 from (-1e3 to 1e3);     // 2nd-order tempco [ppm/°C²]",
		"error_description": "Changed parameter name to TC2_wrong, making TC2 undefined in the analog block. This breaks the resistance calculation as the second-order temperature coefficient term becomes missing, causing inaccurate resistance values without compiler errors."
	},
	{
		"original_line": "generate if (R0 <= 0) begin", 
		"bug_line": "generate if (R0 < 0) begin",
		"error_description": "The condition misses R0=0 cases. This allows zero resistance without warning, causing potential division-by-zero errors in the analog block when R_actual becomes zero."
	},
	{
		"original_line": "analog begin", 
		"bug_line": "initial begin",
		"error_description": "Replacing 'analog begin' with 'initial begin' executes the resistance calculation only once at time zero. The resistor fails to update during temperature changes, violating temperature-dependent behavior requirements."
	},
	{
		"original_line": "  real R_actual = R0 * (1 + ", 
		"bug_line": "  real R_actual = R0 * 1 + ",
		"error_description": "Removed parentheses around temperature compensation terms, causing incorrect order of operations. The compensation terms are now added as absolute values instead of being relative to R0, resulting in underestimated temperature effects and wrong resistance calculation."
	},
	{
		"original_line": "generate if (R0 <= 0) begin", 
		"bug_line": "generate if (TC1 <= 0) begin",
		"error_description": "Condition erroneously checks temperature coefficient TC1 instead of resistance R0. This bypasses the critical safety check for invalid R0 values (<=0), allowing simulation to proceed with potentially catastrophic division-by-zero or negative resistance errors."
	},
	{
		"original_line": "endgenerate", 
		"bug_line": "endgenerate initial $display("Fatal Error: R0 must be positive!");",
		"error_description": "The initial statement for error checking is moved outside the generate block, causing the fatal error message to be printed unconditionally at time zero regardless of R0's value. This violates the conditional error reporting intended only for non-positive R0."
	},
	{
		"original_line": "real R_actual = R0 * (1 +", 
		"bug_line": "real R_actual = T_REF * (1 +",
		"error_description": "Replaced nominal resistance R0 with reference temperature T_REF, causing resistance calculation to use temperature value (25) instead of designed ohmic value (e.g., 1000), completely distorting the output."
	},
	{
		"original_line": "$strobe("Warning: Negative resistance detected at %t!", $realtime);", 
		"bug_line": "R_actual = R0;",
		"error_description": "Replaces the warning with an assignment that forces resistance to nominal value R0 when negative, overriding the temperature-dependent calculation and causing incorrect circuit behavior under temperature variations."
	}
]