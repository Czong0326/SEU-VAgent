[
	{
		"original_line": "@ (cross( V(vin_k) - vtrans, -1, 1.0, vin_k.potential.abstol))begin", 
		"bug_line": "@ (cros( V(vin_k) - vtrans, -1, 1.0, vin_k.potential.abstol))begin",
		"error_description": "Misspelled event function 'cros' instead of 'cross', causing undefined function error"
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module",
		"error_description": "Unterminated attribute: Missing closing '*)' delimiter for compiler directive."
	},
	{
		"original_line": "@ (cross( V(vin_k) - vtrans, -1, 1.0, vin_k.potential.abstol))begin", 
		"bug_line": "@ (cross( V(vin_k) - vtrans, -1 1.0, vin_k.potential.abstol))begin",
		"error_description": "Missing comma between arguments -1 and 1.0 creates adjacent numbers without operator/separator, causing syntax error"
	},
	{
		"original_line": "          else if (J) begin", 
		"bug_line": "          else if (J begin",
		"error_description": "Missing closing parenthesis for conditional expression"
	},
	{
		"original_line": "       V(vout_qbar) <+ transition( vlogic_high*!q + vlogic_low*q,", 
		"bug_line": "       V(vout_qbar) <+ transition( vlogic_high*!q + vlogic_low*q",
		"error_description": "Missing comma at the end of the line. This breaks the argument list separation between the first expression and the 'tdel' parameter on the next line, causing a syntax error in the function call."
	},
	{
		"original_line": "          trigger=1;", 
		"bug_line": "          trigger=1",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "          J = 0;", 
		"bug_line": "          J = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error when the parser encounters the next token 'trigger' without statement termination."
	},
	{
		"original_line": "   integer trigger;", 
		"bug_line": "   integer trigger",
		"error_description": "Missing semicolon at the end of the integer variable declaration"
	},
	{
		"original_line": "          trigger=1;", 
		"bug_line": "          trigger=1x;",
		"error_description": "Invalid token '1x' - malformed integer constant due to trailing 'x' character"
	},
	{
		"original_line": "parameter real tdel = 3u from [0:inf);", 
		"bug_line": "parameter real tdel = 3u from [0,inf);",
		"error_description": "Replaced colon with comma in range specification, making the range delimiter invalid"
	},
	{
		"original_line": "       @ (cross( V(vin_k) - vtrans, 1, 1.0, vin_k.potential.abstol))begin", 
		"bug_line": "       @ (cross( V(vin_k) - vtrans, 1, 1.0 vin_k.potential.abstol))begin",
		"error_description": "Missing comma between 1.0 and vin_k.potential.abstol arguments in cross function call, resulting in incorrect number of arguments and invalid syntax."
	},
	{
		"original_line": "          J = 0;", 
		"bug_line": "          J = 0",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "          trigger=1;", 
		"bug_line": "          trigger=1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as statements in analog blocks require explicit termination"
	},
	{
		"original_line": "parameter real trise = 1u from (0:inf);", 
		"bug_line": "parameter real trise = 1u fromm (0:inf);",
		"error_description": "Misspelled 'from' keyword as 'fromm' in parameter range specification"
	},
	{
		"original_line": "          trigger=1;", 
		"bug_line": "          trigger=1",
		"error_description": "Missing semicolon at end of assignment statement. VerilogA requires all statements to end with semicolons."
	},
	{
		"original_line": "				    tdel, trise, tfall );", 
		"bug_line": "				    tdel, trise, tfall ;",
		"error_description": "Missing closing parenthesis for the transition function call, resulting in unclosed parentheses syntax error."
	},
	{
		"original_line": "         q = J;", 
		"bug_line": "         q = J",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "          trigger=1;", 
		"bug_line": "          trigger=1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'end' is unexpected."
	},
	{
		"original_line": "       if (trigger)begin", 
		"bug_line": "       if (trigger begin",
		"error_description": "Missing closing parenthesis ')' for the conditional expression before the 'begin' keyword."
	},
	{
		"original_line": "parameter real tfall = 1u from (0:inf);", 
		"bug_line": "parameter real tfall = 1u from (0:inf;",
		"error_description": "Unmatched parentheses: the opening '(' in the range expression lacks a closing ')', causing a syntax error."
	}
]