[
	{
		"original_line": "        tmp4 = cb(tmp2) + sq(tmp3);", 
		"bug_line": "        tmp4 = cb(tmp2) sq(tmp3);",
		"error_description": "Missing '+' operator between function calls creates invalid expression syntax with adjacent terms"
	},
	{
		"original_line": "vjl		Limited junction voltage / V", 
		"bug_line": "vjl-		Limited junction voltage / V",
		"error_description": "Added hyphen creating invalid identifier 'vjl-', hyphens are not allowed in Verilog-A identifiers"
	},
	{
		"original_line": "		while (abserr > `ENERGY_ABSTOL) begin", 
		"bug_line": "		while (abserr > ENERGY_ABSTOL) begin",
		"error_description": "Missing backtick (`) before macro name ENERGY_ABSTOL, causing it to be interpreted as an undeclared variable instead of a preprocessor macro"
	},
	{
		"original_line": "n0 = nc * exp(epsf - epsc);", 
		"bug_line": "n0 = nc * exp(epsf - epsc;",
		"error_description": "Missing closing parenthesis in exp function call. The expression inside exp() requires balanced parentheses."
	},
	{
		"original_line": "    real yref, xquot, xexpn;", 
		"bug_line": "    real yref, xquot, xexpn",
		"error_description": "Missing semicolon at the end of the variable declaration statement, causing a syntax error as statements in VerilogA analog function blocks must be properly terminated."
	},
	{
		"original_line": "	nai = 0.0;", 
		"bug_line": "	nai = 0.0);",
		"error_description": "Unmatched closing parenthesis at the end of the line causes syntax error as there's no corresponding opening parenthesis."
	},
	{
		"original_line": "vjt		Threshold junction voltage / V", 
		"bug_line": "real		Threshold junction voltage / V",
		"error_description": "Reserved keyword 'real' used as variable name, which is invalid syntax in VerilogA."
	},
	{
		"original_line": "    real x;", 
		"bug_line": "    real x",
		"error_description": "Missing semicolon at the end of the variable declaration statement, causing unterminated statement syntax error."
	},
	{
		"original_line": "    real ndi, nai, tmp1, tmp2;", 
		"bug_line": "    real ndi, nai, tmp1 tmp2;",
		"error_description": "Missing comma between variable declarations 'tmp1' and 'tmp2', causing invalid token 'tmp2' after 'tmp1' without separator"
	},
	{
		"original_line": "				channel current for a uniform rectangular channel with", 
		"bug_line": "				channel current for a uniform rectangular channel with */ )",
		"error_description": "Unmatched closing parenthesis and premature comment termination. The '*/' ends the block comment prematurely, and the standalone ')' has no matching opening parenthesis, causing a syntax error."
	},
	{
		"original_line": "    pnj_curr = is * (exp(vj / vt) - 1.0);", 
		"bug_line": "    pnj_curr = is * (exp(vj vt) - 1.0);",
		"error_description": "Missing division operator between 'vj' and 'vt' in the argument to the 'exp' function, resulting in an invalid expression with two adjacent identifiers without an operator."
	},
	{
		"original_line": "        epsc = (eci + cb_shift(ndi, nai)) / vt;", 
		"bug_line": "        epsc = (eci + cb_shift(ndi, nai) / vt;",
		"error_description": "Missing closing parenthesis for the function call cb_shift. The expression now has mismatched parentheses: one opening parenthesis '(' at the start is never closed, causing a syntax error."
	},
	{
		"original_line": "	ndi = 0.0;", 
		"bug_line": "	ndi = 0.0",
		"error_description": "Missing semicolon at end of assignment statement. VerilogA requires all statements to be terminated with semicolons."
	},
	{
		"original_line": "        vb_edos		Effective density of states / m^-3", 
		"bug_line": "        vb_edos		Effective density of states / m^-3 */",
		"error_description": "Prematurely terminates the multi-line comment with '*/', causing subsequent description lines (e.g., 'INPUT:', 'LOCAL:') to be interpreted as invalid VerilogA syntax outside a comment block."
	},
	{
		"original_line": "    njf_dg_sat_volt = 0.0;", 
		"bug_line": "    njf_dg_sat_volt = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        c = tmp1 * cos(tmp2);", 
		"bug_line": "        c = tmp1 * cos(tmp2;",
		"error_description": "Missing closing parenthesis for the cos function call, resulting in unmatched parentheses and invalid argument list."
	},
	{
		"original_line": "        ndi = nihi + niki;", 
		"bug_line": "        ndi = nihi + niki",
		"error_description": "Missing semicolon at the end of the assignment statement, causing unterminated statement syntax error"
	},
	{
		"original_line": "        p0 = nv * exp(epsv - x);", 
		"bug_line": "        p0 = nv * exp(epsv - x;",
		"error_description": "Missing closing parenthesis for the exp function call. The expression becomes 'exp(epsv - x' which is incomplete syntax due to unmatched parentheses."
	},
	{
		"original_line": " / (1.0 + yquot * pow(xquot, xexpn1 - xexpn2));", 
		"bug_line": " / (1.0 + yquot * pow(xquot, xexpn1 - xexpn2);",
		"error_description": "Missing closing parenthesis for the pow function call. The original line had two closing parentheses at the end - one for pow and one for the outer expression. The modified line removes the outer closing parenthesis, leaving an unmatched parenthesis in the expression."
	},
	{
		"original_line": "            nik = 0.5 * na;", 
		"bug_line": "            nik = 0.5 * na *;",
		"error_description": "Syntax error: unmatched multiplication operator (missing right operand) due to trailing '*' without subsequent expression"
	}
]