[
	{
		"original_line": "for (k = 0; k < n_int; k = k + 1)", 
		"bug_line": "for (k = 0; k < n_int k = k + 1)",
		"error_description": "Missing semicolon between condition and increment in for loop"
	},
	{
		"original_line": "parameter real  g_c2  = 6     from (0:inf);  //valley degeneracy of the second lowest valley in the conduction band", 
		"bug_line": "parameter real  g_c2  = 6     from (0:inf;  //valley degeneracy of the second lowest valley in the conduction band",
		"error_description": "Missing closing parenthesis in range expression. The correct form requires balanced parentheses around '0:inf'."
	},
	{
		"original_line": "     Phi = Phi_Dch;", 
		"bug_line": "     Phi = Phi_Dch",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "parameter real  miu0   = 60e-4                 from (0:inf);  //intrinsic mobility", 
		"bug_line": "parameter real  miu0   = 60e-4                 from (0:inf)  //intrinsic mobility",
		"error_description": "Missing semicolon at end of parameter declaration. VerilogA requires semicolons to terminate parameter statements."
	},
	{
		"original_line": "     Phi = Phi + dPhi; ", 
		"bug_line": "     Phi = Phi + dPhi: ",
		"error_description": "Replaced terminating semicolon with colon, which is invalid statement termination in VerilogA"
	},
	{
		"original_line": "parameter real  Cfb  = 0.1 * W * L_ch * epsBOX / T_BOX from [0 : inf);  //fringing bottom capacitance", 
		"bug_line": "parameter real  Cfb  = 0.1 * W * L_ch * epsBOX / T_BOX from [0 : inf;  //fringing bottom capacitance",
		"error_description": "Missing closing parenthesis ')' in range constraint. The range should end with ')' to denote exclusive infinity, but it was replaced by ';' which is invalid syntax."
	},
	{
		"original_line": "   Phi_chD  = (supchD * (1 - np) + subchD * np) * Smooth_chD + (subchD * (1 - np) + supchD * np) * (1 - Smooth_chD);  //inital guess for drain potential", 
		"bug_line": "   Phi_chD  = (supchD * (1 - np) + subchD * np) Smooth_chD + (subchD * (1 - np) + supchD * np) * (1 - Smooth_chD);  //inital guess for drain potential",
		"error_description": "Missing multiplication operator between the first parenthesized expression and 'Smooth_chD'"
	},
	{
		"original_line": "real Smooth_Sct, Smooth_Sch, Smooth_chS, Smooth_chD, Smooth_Dch, Smooth_Dct;", 
		"bug_line": "real Smooth_Sct, Smooth_Sch, Smooth_chS, Smooth_chD, Smooth_Dch Smooth_Dct;",
		"error_description": "Missing comma between variables Smooth_Dch and Smooth_Dct in the declaration list"
	},
	{
		"original_line": "   if (SDseries == 1)", 
		"bug_line": "   if (SDseries == 1",
		"error_description": "Missing closing parenthesis for conditional expression"
	},
	{
		"original_line": "parameter integer  iter     = 10     from [1 : inf);  //# of iteration in Newton-Raphson method", 
		"bug_line": "parameter integer  iter     = 10     from [1 : inf];  //# of iteration in Newton-Raphson method",
		"error_description": "Mismatched range delimiter: Used closing square bracket ']' instead of required closing parenthesis ')' for exclusive upper bound in range constraint."
	},
	{
		"original_line": "F_Sch_prime = q * q * DOS / epsTMD / T_TMD / kT * exp(q/ kT * (Type * Phi_Sch - Type * Vsch -Eg/q * np)) +  1 / pow(namda_B, 2);", 
		"bug_line": "F_Sch_prime = q * q * DOS / epsTMD / T_TMD / kT * exp(q/ kT * (Type * Phi_Sch - Type * Vsch -Eg/q * np)) +  1 / pow(namda_B, 2",
		"error_description": "Missing semicolon at end of statement, which is required to terminate Verilog-A assignments"
	},
	{
		"original_line": "   Phi_Dct  = (supDct * (1 - np) + subDct * np) * Smooth_Dct + (subDct * (1 - np) + supDct * np) * (1 - Smooth_Dct); //initial guess for drain extension potential at he contact side", 
		"bug_line": "   Phi_Dct  = (supDct * (1 - np) + subDct * np) * Smooth_Dct + (subDct * (1 - np) + supDct * np * (1 - Smooth_Dct); //initial guess for drain extension potential at he contact side",
		"error_description": "Unmatched parentheses: Missing closing parenthesis for the second term after 'supDct * np', causing unbalanced parentheses in the expression."
	},
	{
		"original_line": "   if (MobDeg == 1)", 
		"bug_line": "   if (MobDeg == 1",
		"error_description": "Missing closing parenthesis for the condition statement"
	},
	{
		"original_line": " I(S, Sct) <+ V(S, Sct) / Rs;", 
		"bug_line": " I(S, Sct) < V(S, Sct) / Rs;",
		"error_description": "Missing '+' in contribution operator: '<' is invalid without the '+', must use '<+' for analog operator contributions."
	},
	{
		"original_line": "real Vsct, Vdct, Vsch, Vdch, Vgt, Vgb;", 
		"bug_line": "real Vsct, Vdct, Vsch, Vdch, Vgt Vgb;",
		"error_description": "Missing comma between 'Vgt' and 'Vgb' in variable declaration list causes syntax error"
	},
	{
		"original_line": "I(Sch) <+  ddt(Q_Sch);", 
		"bug_line": "I(Sch) <+  ddt(Q_Sch)",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "Qgb = -(Q_chS + Q_chD - Nd_pre * T_TMD) * Cgb /(Cgt + Cgb) - (Q_Sct + Q_Sch + Q_Dct + Q_Dch -2 * (Nd_pre +Nd_pos) * T_TMD);", 
		"bug_line": "Qgb = -(Q_chS + Q_chD - Nd_pre * T_TMD) * Cgb /(Cgt + Cgb) - (Q_Sct + Q_Sch + Q_Dct + Q_Dch -2 * (Nd_pre +Nd_pos * T_TMD;",
		"error_description": "Missing closing parenthesis for the second term in the expression. The opening parenthesis before 'Nd_pre' in the second subtraction is never properly closed."
	},
	{
		"original_line": "   supDch  = -Eg/q * np + Type * kT /q * ln(abs((kesi_sd + q / epsTMD * (Nd_pre + Nd_pos)) / q / DOS * epsTMD * T_TMD)) + Vdch;", 
		"bug_line": "   supDch  = -Eg/q * np + Type * kT /q * ln(abs((kesi_sd + q / epsTMD * (Nd_pre + Nd_pos)) / q / DOS * epsTMD * T_TMD) + Vdch;",
		"error_description": "Mismatched parentheses in ln() function call - missing closing parenthesis for ln argument"
	},
	{
		"original_line": " I(S, Sct) <+ V(S, Sct) / Rs;", 
		"bug_line": " I(S, Sct) <+ V(S, Sct) / Rs",
		"error_description": "Missing semicolon at the end of the contribution statement, causing syntax error in VerilogA analog block."
	},
	{
		"original_line": "parameter real  Nd_pre  = Type * 1e24     from (-inf:inf); //doping concentration before gate formation", 
		"bug_line": "parameter real  Nd_pre  = Type * 1e24     from (-inf:inf; //doping concentration before gate formation",
		"error_description": "Missing closing parenthesis in range constraint. The correct syntax requires parentheses around the range values, but the closing ')' was replaced with a semicolon."
	}
]