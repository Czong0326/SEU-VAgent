[
	{
		"original_line": "    (* desc="Temperature coefficient of LAMBDA", units="(deg C)^-1",", 
		"bug_line": "    (* desc="Temperature coefficient of LAMBDA", units="(deg C)^-1"",
		"error_description": "Missing comma between attribute specifications in the parameter attribute list. The next attribute 'xyceUnit' is not properly separated, causing a syntax error."
	},
	{
		"original_line": "        if (NAB <= NDB)", 
		"bug_line": "        if (NAB =< NDB)",
		"error_description": "Invalid operator: '=<' is not a valid comparison operator in VerilogA. The correct operator for 'less than or equal' is '<='."
	},
	{
		"original_line": "        `error("TNOM is less than or equal to negative P_CELSIUS0.");", 
		"bug_line": "        `error("TNOM is less than or equal to negative P_CELSIUS0.);",
		"error_description": "Missing closing double quote in string literal. The unterminated string causes a syntax error as the compiler expects a closing quotation mark."
	},
	{
		"original_line": "        goces = goces_noscale * AREA;", 
		"bug_line": "        goces = goces_noscale * AREA",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error in VerilogA."
	},
	{
		"original_line": "I(bi_se) <+ $simparam("gmin", 0.0) * V(bi_se);", 
		"bug_line": "I(bi_se) <+ $simparam("gmin" 0.0) * V(bi_se);",
		"error_description": "Missing comma between arguments in $simparam function call"
	},
	{
		"original_line": "            CGSI = -ddx(qg, V(si));", 
		"bug_line": "            CGSI = -ddx(qg V(si));",
		"error_description": "Missing comma between function arguments in ddx call. VerilogA requires commas to separate function arguments; omitting it creates invalid syntax."
	},
	{
		"original_line": "        `warning("RSTC is not given.");", 
		"bug_line": "        `warning("RSTC is not given.);",
		"error_description": "Missing closing double quote in the string literal. The unterminated string causes a syntax error as the compiler expects the string to be properly closed before the parentheses and semicolon."
	},
	{
		"original_line": "        qbs = tmp2;", 
		"bug_line": "        qbs = tmp2",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "    parameter real RSTC = 0.0;", 
		"bug_line": "    parameter real RSTC = 0.0",
		"error_description": "Missing semicolon at end of parameter declaration"
	},
	{
		"original_line": "		mode = `REVERSE_MODE;", 
		"bug_line": "		mode = `REVERSE_MODE",
		"error_description": "Missing semicolon at statement termination. VerilogA requires all statements to end with semicolons."
	},
	{
		"original_line": "            tmp2 = TYPE * njf_sg_gs_chrg(cj0bes, phij0b, vbsi, vbses, vtobe,", 
		"bug_line": "            tmp2 = TYPE * njf_sg_gs_chrg(cj0bes, phij0b, vbsi vbses, vtobe,",
		"error_description": "Missing comma between 'vbsi' and 'vbses' arguments creates adjacent identifiers without operator, violating VerilogA syntax rules for function calls."
	},
	{
		"original_line": "	    vt = $vt(tempk);", 
		"bug_line": "	    vt = $vt(tempk",
		"error_description": "Missing closing parenthesis and semicolon in function call"
	},
	{
		"original_line": "        `error("RG is less than zero.");", 
		"bug_line": "        `error("RG is less than zero.")",
		"error_description": "Missing semicolon at the end of the statement. VerilogA requires all statements to terminate with a semicolon, and its absence creates a syntax error."
	},
	{
		"original_line": "    tempk = $temperature + DTEMP;", 
		"bug_line": "    tempk = $temperature + DTEMP",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error in VerilogA."
	},
	{
		"original_line": "            vds = mode * vdsi;", 
		"bug_line": "            vds = mode * vdsi",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "        (* desc="Gate reverse-bias saturation current", units="A",", 
		"bug_line": "        (* desc="Gate reverse-bias saturation current" units="A",",
		"error_description": "Missing comma between attribute key-value pairs in the parameter declaration, causing syntax error"
	},
	{
		"original_line": "    branch (gi, di) gi_di;	// Gate-drain junction", 
		"bug_line": "    branch (gi di) gi_di;	// Gate-drain junction",
		"error_description": "Missing comma between the two nodes (gi and di) in the branch statement, violating Verilog-A syntax which requires commas to separate node identifiers in branch declarations."
	},
	{
		"original_line": "        if (NAG < 0.0)", 
		"bug_line": "        if (NAG < 0.0",
		"error_description": "Missing closing parenthesis in condition statement"
	},
	{
		"original_line": "            cj0bi_noscale = pnj_cap(nadb, ndac, epss, phij0b, aji);", 
		"bug_line": "            cj0bi_noscale = pnj_cap(nadb, ndac, epss, phij0b, aji;",
		"error_description": "Missing closing parenthesis for function call. The line ends with a semicolon instead of closing the function arguments with a parenthesis, causing a syntax error due to mismatched parentheses."
	},
	{
		"original_line": "        if (EPSR < 1.0)", 
		"bug_line": "        if (EPSR < 1.0",
		"error_description": "Missing closing parenthesis ')' for the condition expression in the if statement."
	}
]