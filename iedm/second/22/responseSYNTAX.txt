[
	{
		"original_line": "end else begin", 
		"bug_line": "end else begn",
		"error_description": "Misspelled 'begin' as 'begn', which is not a recognized VerilogA keyword, causing a syntax error due to invalid token."
	},
	{
		"original_line": "parameter real maxl = 0.10; // maximum extension in meters", 
		"bug_line": "parameter real maxl 0.10; // maximum extension in meters",
		"error_description": "Missing equals sign (=) in parameter assignment"
	},
	{
		"original_line": "if (Pos(posp,posn) - maxl + F(posp,posn) / 10.0e3 > 0.0) begin", 
		"bug_line": "if (Pos(posp,posn) - maxl + F(posp,posn) / 10.0e3 > 0.0 begin",
		"error_description": "Missing closing parenthesis for the condition in the if statement. The condition ends with '0.0' but lacks the required ')' before 'begin'."
	},
	{
		"original_line": "	    too_short = 0;", 
		"bug_line": "	    too_short = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as VerilogA requires all statements to be properly terminated."
	},
	{
		"original_line": "	    too_short = 0;", 
		"bug_line": "	    too_short = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "        if (too_long) begin", 
		"bug_line": "        if (too_long begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression. Verilog-A requires conditions in if statements to be fully enclosed in parentheses."
	},
	{
		"original_line": "        out_of_range = 0;", 
		"bug_line": "        out_of_range = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token '$strobe' is not a valid continuation of the expression."
	},
	{
		"original_line": "	    too_long = 0;", 
		"bug_line": "	    too_long = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with semicolons."
	},
	{
		"original_line": "    if (!too_long && !too_short) begin", 
		"bug_line": "    if (!too_long && !too_short begin",
		"error_description": "Missing closing parenthesis ')' for the conditional expression before 'begin'"
	},
	{
		"original_line": "    too_short = 1;", 
		"bug_line": "    too_short = 1",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with semicolons."
	},
	{
		"original_line": "	    if (too_long) begin", 
		"bug_line": "	    if (too_long begin",
		"error_description": "Missing closing parenthesis ')' in conditional expression"
	},
	{
		"original_line": "parameter real minl = 0.02;  // minimum extension in meters", 
		"bug_line": "parmeter real minl = 0.02;  // minimum extension in meters",
		"error_description": "Misspelled 'parameter' keyword as 'parmeter' which is not a valid VerilogA keyword"
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "( instrument_module *)",
		"error_description": "Mismatched attribute syntax: missing opening asterisk. Attributes must begin with '(*' and end with '*)'."
	},
	{
		"original_line": "            too_short = 1;", 
		"bug_line": "            too_short = 1",
		"error_description": "Missing semicolon at the end of the assignment statement."
	},
	{
		"original_line": "$strobe( "Bottomed out at t = %E s.\n", $abstime );", 
		"bug_line": "$strobe( "Bottomed out at t = %E s.\n", $abstime;",
		"error_description": "Missing closing parenthesis for the $strobe system task argument list. The line ends with a semicolon instead of the required ');' to properly terminate both the argument list and the statement."
	},
	{
		"original_line": "    too_long = 0;", 
		"bug_line": "    too_long = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with semicolons, causing a syntax error when the parser encounters the next token 'too_short' without statement termination."
	},
	{
		"original_line": "            too_long = 1;", 
		"bug_line": "            too_long = 1",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with a semicolon, and omitting it causes a syntax error when parsing subsequent tokens."
	},
	{
		"original_line": "module restrainer (posp, posn);", 
		"bug_line": "module restrainer (posp, posn)",
		"error_description": "Missing semicolon at the end of the module declaration statement"
	},
	{
		"original_line": "if (out_of_range) begin", 
		"bug_line": "if (out_of_range begin",
		"error_description": "Missing closing parenthesis ')' in conditional statement. VerilogA requires balanced parentheses around conditional expressions."
	},
	{
		"original_line": "integer out_of_range;", 
		"bug_line": "integer out_of_range",
		"error_description": "Missing semicolon at the end of the variable declaration, causing a syntax error as subsequent tokens become unexpected."
	}
]