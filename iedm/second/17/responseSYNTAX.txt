[
	{
		"original_line": "           input_expr = iin_val*iin_val;", 
		"bug_line": "           input_expr = iin_val*iin_val",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as all Verilog-A statements must be properly terminated."
	},
	{
		"original_line": "        pf_out_val = 0;", 
		"bug_line": "        pf_out_val = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with a semicolon."
	},
	{
		"original_line": "   real irms;", 
		"bug_line": "   real irms",
		"error_description": "Missing semicolon at the end of the variable declaration. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "          v_ifilt1_val = 0;", 
		"bug_line": "          v_ifilt1_val = 0:",
		"error_description": "Colon ':' used instead of semicolon ';' at end of assignment statement, causing invalid token in expression."
	},
	{
		"original_line": "      end else begin", 
		"bug_line": "      end else begn",
		"error_description": "Misspelled 'begin' keyword as 'begn' causing undefined keyword syntax error"
	},
	{
		"original_line": "discipline power_current", 
		"bug_line": "diszipline power_current",
		"error_description": "Misspelled keyword 'diszipline' instead of 'discipline'"
	},
	{
		"original_line": "   integer out_file;", 
		"bug_line": "   integer out_file",
		"error_description": "Missing semicolon at the end of the integer variable declaration, causing a syntax error as VerilogA requires statements to end with semicolons."
	},
	{
		"original_line": "          abstol = 1m;", 
		"bug_line": "          abstol = 1m",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "      V(v_vfilt1) <+ v_vfilt1_val;", 
		"bug_line": "      V(v_vfilt1) <+ v_vfilt1_val",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error in VerilogA."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ ( initial_step ) begine",
		"error_description": "Misspelled 'begin' as 'begine', causing a syntax error since 'begine' is not a valid Verilog-A keyword for starting code blocks."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ [ initial_step ) begin",
		"error_description": "Using square bracket '[' instead of parenthesis '(' for event control syntax. VerilogA requires parentheses for event controls like @( )."
	},
	{
		"original_line": "   electrical v_ifilt1, v_ifilt2;", 
		"bug_line": "   electrical v_ifilt1 v_ifilt2;",
		"error_description": "Missing comma between variable declarations in the electrical statement, causing a syntax error as variables must be comma-separated in VerilogA."
	},
	{
		"original_line": "      iin_val = I(iin,vp_iout);", 
		"bug_line": "      iin_val = I(iin,vp_iout;",
		"error_description": "Missing closing parenthesis ')' for the function call I()"
	},
	{
		"original_line": "electrical v_ifilt1, v_ifilt2;", 
		"bug_line": "electrical v_ifilt1 v_ifilt2;",
		"error_description": "Missing comma between variable declarations in the electrical net declaration, causing a syntax error as multiple identifiers require explicit separation."
	},
	{
		"original_line": "      V(iin,vp_iout) <+ 0;", 
		"bug_line": "      V(iin,vp_iout <+ 0;",
		"error_description": "Mismatched parentheses - missing closing parenthesis for the V() function call"
	},
	{
		"original_line": "      end else begin", 
		"bug_line": "      end else begn",
		"error_description": "Misspelled 'begin' keyword as 'begn'. VerilogA requires exact keyword spelling for block statements."
	},
	{
		"original_line": "      if ($abstime > tstart) ", 
		"bug_line": "      if ($abstime > tstart ",
		"error_description": "Missing closing parenthesis for conditional expression"
	},
	{
		"original_line": "module power_meter(iin,vp_iout,vn,pout, va_out, pf_out);", 
		"bug_line": "module power_meter(iin,vp_iout,vn,pout, va_out, pf_out)",
		"error_description": "Missing semicolon at the end of the module declaration statement"
	},
	{
		"original_line": "         pf_out_val = 0;", 
		"bug_line": "         pf_out_val = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with a semicolon."
	},
	{
		"original_line": "   real v_vfilt1_val;", 
		"bug_line": "   reel v_vfilt1_val;",
		"error_description": "Misspelled keyword 'real' as 'reel' - VerilogA requires correct data type keywords for variable declarations."
	}
]