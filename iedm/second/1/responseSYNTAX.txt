[
	{
		"original_line": "module jk_clk_ff(vin_j, vin_k, vclk, vout_q, vout_qbar);", 
		"bug_line": "module jk_clk_ff(vin_j, vin_k vclk, vout_q, vout_qbar);",
		"error_description": "Missing comma between port declarations. VerilogA requires commas to separate ports in the module definition list."
	},
	{
		"original_line": "            q = !q;", 
		"bug_line": "            q = !q",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as VerilogA requires explicit statement termination."
	},
	{
		"original_line": "parameter real tdel = 3u from [0:inf);", 
		"bug_line": "parameter real tdel = 3u from [0:inf)",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing syntax error due to unterminated statement"
	},
	{
		"original_line": "            q = !q;", 
		"bug_line": "            q = !q",
		"error_description": "Missing semicolon at the end of the assignment statement, causing unterminated statement before the 'end' keyword"
	},
	{
		"original_line": "            q = !q;", 
		"bug_line": "            q = !q",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "         if (V(vin_j) > vtrans && V(vin_k) > vtrans) begin", 
		"bug_line": "         if (V(vin_j) > vtrans && V(vin_k) > vtrans begin",
		"error_description": "Missing closing parenthesis ')' for the conditional expression in the if statement"
	},
	{
		"original_line": "            q = 0;", 
		"bug_line": "            q = 0 +;",
		"error_description": "Operator '+' without a right operand creates invalid expression syntax"
	},
	{
		"original_line": "            q = !q;", 
		"bug_line": "            q = !q",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "parameter real vlogic_low = 0;", 
		"bug_line": "parameter real vlogic_low = 0",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "   integer q;", 
		"bug_line": "   integer q",
		"error_description": "Missing semicolon at the end of the integer declaration. VerilogA requires semicolons to terminate variable declarations."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begin // Missing semicolon after 'analog'",
		"error_description": "Missing semicolon after 'analog' keyword before 'begin' block"
	},
	{
		"original_line": "parameter real vtrans_clk = 2.5;", 
		"bug_line": "parameter real vtrans_clk = 2.5",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "module jk_clk_ff(vin_j, vin_k, vclk, vout_q, vout_qbar);", 
		"bug_line": "module jk_clk_ff(vin_j; vin_k, vclk, vout_q, vout_qbar);",
		"error_description": "Used semicolon instead of comma to separate ports in module declaration, violating VerilogA port list syntax which requires commas between ports."
	},
	{
		"original_line": "         end else if (V(vin_j) > vtrans && V(vin_k) < vtrans) begin", 
		"bug_line": "         endd else if (V(vin_j) > vtrans && V(vin_k) < vtrans) begin",
		"error_description": "Misspelled keyword 'end' as 'endd' - 'endd' is not a valid Verilog-A keyword and will cause a syntax error"
	},
	{
		"original_line": "         if (V(vin_j) > vtrans && V(vin_k) > vtrans) begin", 
		"bug_line": "         if (V(vin_j) > vtrans && V(vin_k) > vtrans begin",
		"error_description": "Missing closing parenthesis ')' for the conditional expression in the if statement. The condition is not properly terminated, causing a syntax error due to unbalanced parentheses."
	},
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module; *)",
		"error_description": "Semicolon inside attribute comment is invalid syntax as attributes cannot contain statement terminators"
	},
	{
		"original_line": "parameter real tdel = 3u from [0:inf);", 
		"bug_line": "parameter real tdel = 3u from [0:inf)",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as the next parameter statement is not properly separated."
	},
	{
		"original_line": "         end else if (V(vin_j) < vtrans && V(vin_k) > vtrans) begin", 
		"bug_line": "         end else if (V(vin_j) < vtrans && V(vin_k) > vtrans begin",
		"error_description": "Missing closing parenthesis for the conditional expression in the else if statement, causing unbalanced parentheses and invalid syntax."
	},
	{
		"original_line": "           analog begin", 
		"bug_line": "           analog begn",
		"error_description": "Misspelled 'begin' keyword as 'begn'"
	},
	{
		"original_line": "   integer q;", 
		"bug_line": "   intege q;",
		"error_description": "Misspelled keyword 'integer' as 'intege', causing unrecognized type declaration syntax error"
	}
]