[
	{
		"original_line": "               input_expr = iin_val*iin_val;", 
		"bug_line": "               input_expr = iin_val**iin_val;",
		"error_description": "Using double asterisk (**) instead of single asterisk (*) for multiplication creates an exponentiation operator, which requires an exponent expression after the operator but none is provided, causing a syntax error."
	},
	{
		"original_line": "`define RMS 1", 
		"bug_line": "`defin RMS 1",
		"error_description": "Misspelled preprocessor directive 'defin' instead of 'define'. VerilogA requires correct directive names after backtick."
	},
	{
		"original_line": "vout_val = vin_filter;", 
		"bug_line": "vout_val = vin_filter",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as VerilogA requires explicit statement termination."
	},
	{
		"original_line": "      iin_val = I(vp,vn);", 
		"bug_line": "      iin_val = I(vp vn);",
		"error_description": "Missing comma between arguments in function call. VerilogA requires commas to separate function arguments."
	},
	{
		"original_line": "      if (bw != 0 ) begin", 
		"bug_line": "      if (bw != 0  begin",
		"error_description": "Missing closing parenthesis ')' in conditional expression"
	},
	{
		"original_line": "`define ABSOLUTE 0", 
		"bug_line": "`define ABSOLUTE: 0",
		"error_description": "Macro name contains an illegal colon character (':'), which is invalid in Verilog-A identifiers and breaks preprocessor syntax"
	},
	{
		"original_line": "   real iin_val;", 
		"bug_line": "   real iin_val",
		"error_description": "Missing semicolon at the end of the variable declaration statement"
	},
	{
		"original_line": "@ ( final_step ) begin", 
		"bug_line": "@ ( final_step begin",
		"error_description": "Missing closing parenthesis ')' for event control, causing mismatched parentheses in the analog event statement."
	},
	{
		"original_line": "@ ( final_step ) begin", 
		"bug_line": "@ ( final_step  begin",
		"error_description": "Missing closing parenthesis ')' in event control statement. The event expression is not properly terminated before the 'begin' keyword, causing a syntax error due to mismatched parentheses."
	},
	{
		"original_line": "`define ABSOLUTE 0", 
		"bug_line": "`define ABSOLUTE 0;",
		"error_description": "Semicolon added at end of macro definition, which is illegal syntax in Verilog-A compiler directives as macros must end with a newline."
	},
	{
		"original_line": "      iin_val = I(vp,vn);", 
		"bug_line": "      iin_val = I(vp vn);",
		"error_description": "Missing comma between function arguments vp and vn in the current measurement call I(vp,vn). Verilog-A requires commas to separate arguments in function calls."
	},
	{
		"original_line": "      if ( mtype == `RMS )", 
		"bug_line": "      if ( mtype == `RMS ",
		"error_description": "Missing closing parenthesis ')' for the conditional expression, causing unbalanced parentheses syntax error."
	},
	{
		"original_line": "      end else begin", 
		"bug_line": "      end els begin",
		"error_description": "Misspelled 'else' keyword as 'els' - VerilogA requires correct reserved words"
	},
	{
		"original_line": "parameter integer log_to_file = 0;", 
		"bug_line": "parameter integer log_to_file = 0",
		"error_description": "Missing semicolon at the end of the parameter declaration. VerilogA requires semicolons to terminate statements, and omitting it will cause a syntax error during compilation."
	},
	{
		"original_line": "      parameter integer log_to_file = 0;", 
		"bug_line": "      parameter integer log_to_file = 0",
		"error_description": "Missing semicolon at the end of the parameter declaration statement"
	},
	{
		"original_line": "         end else begin", 
		"bug_line": "         end else begine",
		"error_description": "Misspelled keyword 'begin' as 'begine' causing unrecognized token error"
	},
	{
		"original_line": "   integer out_file;", 
		"bug_line": "   integer out_file",
		"error_description": "Missing semicolon at the end of the integer declaration, causing a syntax error as the next token 'real' becomes unexpected and breaks variable declaration parsing."
	},
	{
		"original_line": "      V(vinter1) <+ vin_filter;", 
		"bug_line": "      V(vinter1 <+ vin_filter;",
		"error_description": "Missing closing parenthesis for the voltage contribution statement. The opening parenthesis before 'vinter1' is never closed, causing unbalanced parentheses."
	},
	{
		"original_line": "      V(vp,vn) <+ 0;", 
		"bug_line": "      V(vp,vn) <+ 0",
		"error_description": "Missing semicolon at the end of the contribution statement. VerilogA requires all analog block statements to terminate with semicolons. This causes a syntax error as the parser expects a semicolon before the next 'V(vgnd)' statement."
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ initial_step ) begin",
		"error_description": "Missing opening parenthesis after '@' for event control. VerilogA requires parentheses around event expressions like initial_step."
	}
]