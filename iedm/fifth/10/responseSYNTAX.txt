[
	{
		"original_line": "real   Iin1, Qin1, Iin2, Qin2;", 
		"bug_line": "real   Iin1, Qin1, Iin2 Qin2;",
		"error_description": "Missing comma between variable declarations 'Iin2' and 'Qin2'. VerilogA requires commas to separate multiple variables in a single data type declaration."
	},
	{
		"original_line": "    i_out_dpch    = 0;", 
		"bug_line": "    i_out_dpch    = 0",
		"error_description": "Missing semicolon at end of assignment statement, causing syntax error due to unterminated expression in initial block."
	},
	{
		"original_line": "    q_out_ocns    = 0;", 
		"bug_line": "    q_out_ocns    = 0",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "    i_out_p_cpich = 0;", 
		"bug_line": "    i_out_p_cpich = 0",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "V(Q_out_pich)        <+ q_out_pich;", 
		"bug_line": "V(Q_out_pich)        <+ q_out_pich",
		"error_description": "Missing semicolon at the end of the contribution statement, causing a syntax error as subsequent assignments become improperly separated."
	},
	{
		"original_line": "electrical I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,", 
		"bug_line": "electrica I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,",
		"error_description": "Misspelled discipline keyword 'electrica' instead of 'electrical', causing undefined type error"
	},
	{
		"original_line": "    i_out_p_cpich = 0;", 
		"bug_line": "    i_out_p_cpich = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error when the next assignment (q_out_p_cpich) is parsed without a statement separator."
	},
	{
		"original_line": "    i_out_p_ccpch = 0;", 
		"bug_line": "    i_out_p_ccpch = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "q_out_p_ccpch = ComplexMutiply( V(I_in_p_ccpch),V(Q_in_p_ccpch), tmpReal, tmpImag, ImagCalu );", 
		"bug_line": "q_out_p_ccpch = ComplexMutiply( V(I_in_p_ccpch) V(Q_in_p_ccpch), tmpReal, tmpImag, ImagCalu );",
		"error_description": "Missing comma between function arguments causes adjacent expressions 'V(I_in_p_ccpch)' and 'V(Q_in_p_ccpch)' without operator, violating VerilogA function call syntax."
	},
	{
		"original_line": "RealCalu = 1;", 
		"bug_line": "RealCalu = 1",
		"error_description": "Missing semicolon at end of assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "local_sample = frame_time / numChipsOut;", 
		"bug_line": "local_sample = frame_time / numChipsOut",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with semicolons."
	},
	{
		"original_line": "    q_out_dpch    = 0;", 
		"bug_line": "    q_out_dpch    = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "    q_out_ocns    = 0;", 
		"bug_line": "    q_out_ocns    = 0",
		"error_description": "Missing semicolon at end of assignment statement"
	},
	{
		"original_line": "    q_out_ocns       = ComplexMutiply( V(I_in_ocns),      V(Q_in_ocns),       tmpReal, tmpImag, ImagCalu );", 
		"bug_line": "    q_out_ocns       < ComplexMutiply( V(I_in_ocns),      V(Q_in_ocns),       tmpReal, tmpImag, ImagCalu );",
		"error_description": "Using '<' instead of '=' for assignment operator, which is invalid syntax for variable assignment in VerilogA procedural blocks."
	},
	{
		"original_line": "* poly_length, the number of items in poly.", 
		"bug_line": "* poly_length, the number of items in poly. */",
		"error_description": "Prematurely terminates the block comment with */, causing subsequent lines (10-16) to be uncommented and parsed as invalid VerilogA code due to leading asterisks."
	},
	{
		"original_line": "              Q_in_dpch, Q_in_p_cpich, Q_in_pich, Q_in_p_ccpch, Q_in_ocns,", 
		"bug_line": "              Q_in_dpch, Q_in_p_cpich, Q_in_pich Q_in_p_ccpch, Q_in_ocns,",
		"error_description": "Missing comma between identifiers 'Q_in_pich' and 'Q_in_p_ccpch' creates adjacent tokens without separator, causing syntax error."
	},
	{
		"original_line": "              Q_out_dpch, Q_out_p_cpich, Q_out_pich, Q_out_p_ccpch, Q_out_ocns;", 
		"bug_line": "              Q_out_dpch, Q_out_p_cpich, Q_out_pich Q_out_p_ccpch, Q_out_ocns;",
		"error_description": "Missing comma between Q_out_pich and Q_out_p_ccpch in the output port list, causing a syntax error due to invalid identifier separation."
	},
	{
		"original_line": "    tmpReal  = V(I_scr);", 
		"bug_line": "    tmpReal  = V(I_scr)",
		"error_description": "Missing semicolon at the end of the assignment statement, which is required to terminate VerilogA statements."
	},
	{
		"original_line": "V(I_out_p_ccpch)  <+ i_out_p_ccpch;", 
		"bug_line": "V(I_out_p_ccpch)  <+ i_out_p_ccpch",
		"error_description": "Missing semicolon at the end of the contribution statement"
	},
	{
		"original_line": "          V(Q_out_p_cpich)  <+ q_out_p_cpich;", 
		"bug_line": "          V(Q_out_p_cpich)  <+ q_out_p_cpich",
		"error_description": "Missing semicolon at the end of the contribution statement, causing a syntax error as the next line starts with 'V' which is incorrectly parsed as part of the same expression."
	}
]