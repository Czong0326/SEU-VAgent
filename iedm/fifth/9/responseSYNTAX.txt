[
	{
		"original_line": "       for(j=0; j < 18 ; j=j+1) ", 
		"bug_line": "       for(j=0; j < 18  j=j+1) ",
		"error_description": "Missing semicolon between condition and increment expressions in the for-loop header"
	},
	{
		"original_line": "for(i=0; i < xshift; i=i+1) begin", 
		"bug_line": "for(i=0; i < xshift i=i+1) begin",
		"error_description": "Missing semicolon after the condition expression in the for-loop statement"
	},
	{
		"original_line": "integer y2_back[0:poly_order];", 
		"bug_line": "integer y2_back[0:poly_order]",
		"error_description": "Missing semicolon at the end of the declaration causes a syntax error as the next token 'integer' (on the following line) is not a valid continuation for an array declaration without a statement separator."
	},
	{
		"original_line": "        tmpOut[1] = x2[18] + y2[18];", 
		"bug_line": "        tmpOut[1] = x2[18] + y2[18]",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "x[i] = 0;", 
		"bug_line": "x[i] = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to terminate with semicolons."
	},
	{
		"original_line": "        if(i == 0) begin", 
		"bug_line": "        if(i == 0 begin",
		"error_description": "Missing closing parenthesis in condition of if statement"
	},
	{
		"original_line": "       x2[j] = x2_back[j];", 
		"bug_line": "       x2[j] = x2_back[j]",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "integer x2[0:poly_order]; ", 
		"bug_line": "integer x2[0:poly_order]",
		"error_description": "Missing semicolon at the end of the integer array declaration."
	},
	{
		"original_line": "  tmpOut[1] = tmpOut[1] % 2 ;", 
		"bug_line": "  tmpOut[1] = tmpOut[1] % 2",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "        integer tmpOut[0:1];", 
		"bug_line": "        integer tmpOut[0:1]",
		"error_description": "Missing semicolon at the end of the array declaration statement."
	},
	{
		"original_line": "        tmpOut[1] = x2[18] + y2[18];", 
		"bug_line": "        tmpOut[1] = x2[18] + y2[18]",
		"error_description": "Missing semicolon at the end of the assignment statement, causing syntax error in VerilogA."
	},
	{
		"original_line": "real local_sample;", 
		"bug_line": "real local_sample",
		"error_description": "Missing semicolon at the end of the variable declaration statement."
	},
	{
		"original_line": "     if(i < 18 ) begin", 
		"bug_line": "     if i < 18 ) begin",
		"error_description": "Missing opening parenthesis after 'if' keyword. Verilog requires conditions in if-statements to be enclosed in parentheses."
	},
	{
		"original_line": "     end else begin", 
		"bug_line": "     end else beginn",
		"error_description": "Misspelled keyword 'begin' as 'beginn' - VerilogA requires exact keyword spelling"
	},
	{
		"original_line": "       x_back[i] = x[i];", 
		"bug_line": "       x_back(i] = x[i];",
		"error_description": "Mismatched brackets: opening parenthesis '(' used instead of square bracket '[' for array index, creating invalid syntax."
	},
	{
		"original_line": "          y[j] = y_back[j];", 
		"bug_line": "          y[j] = y_back[j);",
		"error_description": "Mismatched closing bracket: used parenthesis instead of square bracket to close the array index for y_back, creating invalid syntax."
	},
	{
		"original_line": "       for(j=0; j < 18 ; j=j+1)", 
		"bug_line": "       for(j=0; j < 18  j=j+1)",
		"error_description": "Missing semicolon between condition and increment in for-loop header"
	},
	{
		"original_line": "real local_sample;", 
		"bug_line": "real local_sample",
		"error_description": "Missing semicolon at the end of the variable declaration statement."
	},
	{
		"original_line": "       end else begin", 
		"bug_line": "       end else begn",
		"error_description": "Misspelled keyword 'begn' instead of 'begin', causing invalid token error as 'begn' is not a valid VerilogA keyword."
	},
	{
		"original_line": "   tmpOut[1] = x2[18] + y2[18];", 
		"bug_line": "   tmpOut[1] = x2[18] + y2[18]",
		"error_description": "Missing semicolon at the end of the assignment statement"
	}
]