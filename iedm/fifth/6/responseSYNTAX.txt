[
	{
		"original_line": "(* instrument_module *)", 
		"bug_line": "(* instrument_module *",
		"error_description": "Unterminated attribute specification due to missing closing '*)'. The compiler will expect the attribute to continue on subsequent lines, causing syntax errors."
	},
	{
		"original_line": "    tmp_power_pich    = sqrt( tmp_power_pich );", 
		"bug_line": "    tmp_power_pich    = sqrt( tmp_power_pich;",
		"error_description": "Missing closing parenthesis for the sqrt function call. The line ends with a semicolon inside the parentheses instead of properly closing the function argument list."
	},
	{
		"original_line": "           Q_in_dpch, Q_in_p_cpich, Q_in_pich, Q_in_p_ccpch, Q_in_ocns;", 
		"bug_line": "           Q_in_dpch, Q_in_p_cpich, Q_in_pich Q_in_p_ccpch, Q_in_ocns;",
		"error_description": "Missing comma between identifiers 'Q_in_pich' and 'Q_in_p_ccpch' in port list declaration, causing syntax error due to invalid identifier separation."
	},
	{
		"original_line": "  local_sample = frame_time / numChipsOut;", 
		"bug_line": "  local_sample = frame_time / numChipsOut",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "  V(I_out)  <+ tmp_out_I;", 
		"bug_line": "  V(I_out  <+ tmp_out_I;",
		"error_description": "Missing closing parenthesis for the voltage function call V(I_out), causing a syntax error due to unmatched parentheses."
	},
	{
		"original_line": "total           = total + tmp_power_pich;", 
		"bug_line": "total           = total + tmp_power_pich",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "    tmp_power_dpch   = pow(10.0, power_dpch /10.0);", 
		"bug_line": "    tmp_power_dpch   = pow(10.0, power_dpch /10.0",
		"error_description": "Missing semicolon at the end of the statement and unmatched parentheses due to removed closing parenthesis, causing syntax errors in function call termination and statement delimitation."
	},
	{
		"original_line": "    tmp_power_pich    = sqrt( tmp_power_pich );", 
		"bug_line": "    tmp_power_pich    sqrt( tmp_power_pich );",
		"error_description": "Missing assignment operator '=' between variable and function call"
	},
	{
		"original_line": "parameter real power_cpich = -10;", 
		"bug_line": "paramter real power_cpich = -10;",
		"error_description": "Misspelled keyword 'paramter' instead of 'parameter'"
	},
	{
		"original_line": "parameter real frame_time = 1.0/15000.0 from (0:inf);", 
		"bug_line": "parameter real frame_time = 1.0/15000.0 from (0,inf);",
		"error_description": "Replaced colon ':' with comma ',' in range expression. VerilogA requires colons for range specifiers (min:max), making the comma invalid syntax."
	},
	{
		"original_line": "electrical I_out, Q_out;", 
		"bug_line": "electrical I_out Q_out;",
		"error_description": "Missing comma between I_out and Q_out in the electrical declaration, which is a syntax error because identifiers in a single declaration must be separated by commas."
	},
	{
		"original_line": "    if ( total > 1 ) begin", 
		"bug_line": "    if ( total > 1 begin",
		"error_description": "Missing closing parenthesis ')' for the conditional expression in the if statement"
	},
	{
		"original_line": "          @(initial_step) begin", 
		"bug_line": "          @(initial_step begin",
		"error_description": "Missing closing parenthesis for the event control in the initial_step block"
	},
	{
		"original_line": "module wcdma_power_adjust(I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,", 
		"bug_line": "moduel wcdma_power_adjust(I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,",
		"error_description": "Misspelled keyword 'module' as 'moduel', which is an invalid VerilogA keyword"
	},
	{
		"original_line": "    tmp_power_ccpch = sqrt( tmp_power_ccpch);", 
		"bug_line": "    tmp_power_ccpch = sqrt( tmp_power_ccpch;",
		"error_description": "Missing closing parenthesis for sqrt function call, creating mismatched parentheses syntax error."
	},
	{
		"original_line": "module wcdma_power_adjust(I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,", 
		"bug_line": "module wcdma_power_adjust(I_in_dpch; I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,",
		"error_description": "Replaced comma after 'I_in_dpch' with semicolon, creating invalid port separator syntax in module declaration."
	},
	{
		"original_line": "input  I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,", 
		"bug_line": "input  I_in_dpch, I_in_p_cpich, I_in_pich I_in_p_ccpch, I_in_ocns,",
		"error_description": "Missing comma between port identifiers 'I_in_pich' and 'I_in_p_ccpch', causing two consecutive identifiers without separator"
	},
	{
		"original_line": "    if ( total > 1 ) begin", 
		"bug_line": "    if ( total > 1 begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression of the if statement"
	},
	{
		"original_line": "input  I_in_dpch, I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,", 
		"bug_line": "input  I_in_dpch; I_in_p_cpich, I_in_pich, I_in_p_ccpch, I_in_ocns,",
		"error_description": "Semicolon instead of comma after first port breaks the port list syntax. VerilogA requires comma-separated port lists without semicolons within declarations."
	},
	{
		"original_line": "                   Q_in_dpch, Q_in_p_cpich, Q_in_pich, Q_in_p_ccpch, Q_in_ocns;", 
		"bug_line": "                   Q_in_dpch, Q_in_p_cpich Q_in_pich, Q_in_p_ccpch, Q_in_ocns;",
		"error_description": "Missing comma between 'Q_in_p_cpich' and 'Q_in_pich' causes adjacent identifiers without separator, violating VerilogA port declaration syntax."
	}
]