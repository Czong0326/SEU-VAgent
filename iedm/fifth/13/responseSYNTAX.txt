[
	{
		"original_line": "$fstrobe(out_file, "%-.10g\tinf", $abstime);", 
		"bug_line": "$fstrobe(out_file, "%-.10g\tinf", $abstime)",
		"error_description": "Missing semicolon at the end of the statement. VerilogA requires all statements to terminate with a semicolon."
	},
	{
		"original_line": "   svcvs  #(.poles({-2*`PI*bw,0})) irms_filter (v_ifilt2,vgnd,v_ifilt1,vgnd);", 
		"bug_line": "   svcvs  #(.poles({-2*`PI*bw,0})) irms_filter (v_ifilt2,vgnd,v_ifilt1,vgnd)",
		"error_description": "Missing semicolon at the end of the module instantiation statement, causing a syntax error as statements must be properly terminated in Verilog-A."
	},
	{
		"original_line": "Z(zout) <+ zout_val;", 
		"bug_line": "Z(zout) <+ zout_val",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "end  else begin // probably have opencircuit", 
		"bug_line": "end  els begin // probably have opencircuit",
		"error_description": "Misspelled 'else' keyword as 'els', causing unrecognized token syntax error"
	},
	{
		"original_line": "electrical iin, vp_iout, vn;", 
		"bug_line": "electrical iin, vp_iout vn;",
		"error_description": "Missing comma between port identifiers 'vp_iout' and 'vn' in the declaration list, causing a syntax error due to invalid token separation."
	},
	{
		"original_line": "   electrical vgnd;", 
		"bug_line": "   electrical vgnd",
		"error_description": "Missing semicolon at end of declaration statement"
	},
	{
		"original_line": "          v_ifilt1_val = sqrt(integ_iin_sqd/$abstime);", 
		"bug_line": "          v_ifilt1_val = sqrt(integ_iin_sqd/$abstime;",
		"error_description": "Missing closing parenthesis for sqrt function call. The expression inside sqrt remains unclosed, causing a parenthesis mismatch."
	},
	{
		"original_line": "   real vin_val;", 
		"bug_line": "   reel vin_val;",
		"error_description": "Misspelled keyword 'real' as 'reel' - invalid data type identifier in VerilogA."
	},
	{
		"original_line": "   integer out_file;", 
		"bug_line": "   integer out_file",
		"error_description": "Missing semicolon at the end of the variable declaration statement."
	},
	{
		"original_line": "access = Z;", 
		"bug_line": "access = Z",
		"error_description": "Missing semicolon at the end of the assignment statement in the nature block. VerilogA requires semicolons to terminate attribute assignments."
	},
	{
		"original_line": "Z(zout) <+ zout_val;", 
		"bug_line": "Z(zout) <+ zout_val",
		"error_description": "Missing semicolon at the end of the contribution statement"
	},
	{
		"original_line": "zout_val = 0;", 
		"bug_line": "zout_val = 0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements, and omitting one causes a syntax error where the parser expects the statement to continue."
	},
	{
		"original_line": "end  else begin // probably have opencircuit", 
		"bug_line": "end  else begn // probably have opencircuit",
		"error_description": "Misspelled 'begin' keyword as 'begn' causing unrecognized token syntax error."
	},
	{
		"original_line": "      V(vgnd) <+ 0;", 
		"bug_line": "      V(vgnd) <+ 0",
		"error_description": "Missing semicolon at the end of the contribution statement"
	},
	{
		"original_line": "      if (log_to_file) begin", 
		"bug_line": "      if (log_to_file) begin;",
		"error_description": "Added illegal semicolon after 'begin' keyword. VerilogA requires statements after 'begin' without terminating the block starter."
	},
	{
		"original_line": "   real integ_iin_sqd; //  impedance measurement is based on rms values", 
		"bug_line": "   real integ_iin_sqd //  impedance measurement is based on rms values",
		"error_description": "Missing semicolon at the end of the variable declaration statement. VerilogA requires all statements to end with a semicolon, and its absence causes a syntax error."
	},
	{
		"original_line": "      if (log_to_file) begin", 
		"bug_line": "      if log_to_file) begin",
		"error_description": "Missing opening parenthesis '(' after 'if' keyword causes syntax error. VerilogA requires parentheses around conditional expressions."
	},
	{
		"original_line": "      if (log_to_file) begin", 
		"bug_line": "      if (log_to_file begin",
		"error_description": "Missing closing parenthesis ')' in conditional expression"
	},
	{
		"original_line": "V(iin,vp_iout) <+ 0;", 
		"bug_line": "V(iin,vp_iout <+ 0;",
		"error_description": "Missing closing parenthesis for the voltage contribution statement. The correct syntax requires balanced parentheses around the nodes."
	},
	{
		"original_line": "integ_vin_sqd  = idt(vin_val*vin_val,0);", 
		"bug_line": "integ_vin_sqd  = idt(vin_val*vin_val,0)",
		"error_description": "Missing semicolon at the end of the statement"
	}
]