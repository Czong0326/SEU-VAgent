[
	{
		"original_line": "      I(out2q) <+ -a2q*s12/(sqrt(r2)*(1+s11));", 
		"bug_line": "      I(out2q) <+ -a2q*s12/(sqrt(r2)*(1+s11);",
		"error_description": "Missing closing parenthesis for the denominator expression, creating mismatched parentheses and invalid syntax."
	},
	{
		"original_line": "         s11 = 0;", 
		"bug_line": "         s11 = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as subsequent tokens become unparsable."
	},
	{
		"original_line": "              I(out3q) <+ V(outq)/r2*(1-s22)/(1+s22);", 
		"bug_line": "              I(out3q) <+ V(outq)/r2*(1-s22)/(1+s22)",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as statements must be properly terminated in VerilogA."
	},
	{
		"original_line": "module BB_loss(ini, inq, outi, outq);", 
		"bug_line": "module BB_loss(ini inq, outi, outq);",
		"error_description": "Missing comma between port identifiers 'ini' and 'inq' in module declaration parameter list"
	},
	{
		"original_line": "      a2i = V(outi)/sqrt(r2) + I(outi, out3i)*sqrt(r2);", 
		"bug_line": "      a2i = V(outi)/sqrt(r2) + I(outi, out3i)*sqrt(r2)",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "parameter real loss = 0 ;", 
		"bug_line": "parameter real loss : 0 ;",
		"error_description": "Used colon ':' instead of equal sign '=' for parameter assignment"
	},
	{
		"original_line": "electrical inq;", 
		"bug_line": "electrical inq",
		"error_description": "Missing semicolon at the end of the discipline declaration, causing a syntax error as the next token 'inout' becomes unexpected."
	},
	{
		"original_line": "`include "constants.h"", 
		"bug_line": "include "constants.h"",
		"error_description": "Missing backtick (`) before 'include' directive, making it an invalid token instead of a compiler directive."
	},
	{
		"original_line": "      I(out3q) <+ -a1q*s21/(sqrt(r2)*(1+s22));", 
		"bug_line": "      I(out3q) <+ -a1q*s21/(sqrt(r2)*(1+s22);",
		"error_description": "Mismatched parentheses: Missing closing parenthesis for the denominator expression, causing unbalanced parentheses in the mathematical operation."
	},
	{
		"original_line": "      a2i = V(outi)/sqrt(r2) + I(outi, out3i)*sqrt(r2);", 
		"bug_line": "      a2i = V(outi)/sqrt(r2) + I(outi out3i)*sqrt(r2);",
		"error_description": "Missing comma between arguments in the I() function call. VerilogA requires commas to separate function arguments."
	},
	{
		"original_line": "module BB_loss(ini, inq, outi, outq);", 
		"bug_line": "moduel BB_loss(ini, inq, outi, outq);",
		"error_description": "Misspelled keyword 'module' as 'moduel'"
	},
	{
		"original_line": "parameter real loss = 0 ;", 
		"bug_line": "parameter real loss : 0 ;",
		"error_description": "Used colon ':' instead of equals '=' for parameter assignment, which is invalid syntax in VerilogA parameter declarations"
	},
	{
		"original_line": "      I(out3q) <+ V(outq)/r2*(1-s22)/(1+s22);", 
		"bug_line": "      I(out3q) <+ V(outq)/r2*(1-s22)/(1+s22)",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "      I(out2i) <+ -a2i*s12/(sqrt(r2)*(1+s11));", 
		"bug_line": "      I(out2i) <+ -a2i*s12/(sqrt(r2) (1+s11));",
		"error_description": "Missing operator between 'sqrt(r2)' and '(1+s11)' due to removed multiplication symbol, creating invalid adjacent expressions without operator"
	},
	{
		"original_line": "parameter real r2 = 50 ;", 
		"bug_line": "parameter real r2 = 50",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as the next token 'electrical' is unexpected."
	},
	{
		"original_line": "inout outq;", 
		"bug_line": "inoutt outq;",
		"error_description": "Misspelled keyword 'inoutt' instead of correct 'inout'. VerilogA requires exact keyword matching for port directions."
	},
	{
		"original_line": "analog begin", 
		"bug_line": "analog bgin",
		"error_description": "Misspelled 'begin' keyword as 'bgin', causing invalid token syntax error"
	},
	{
		"original_line": "         s11 = 0;", 
		"bug_line": "         s11 = 0 +;",
		"error_description": "Syntax error: '+' operator requires a right-hand expression operand"
	},
	{
		"original_line": "         s21 = `db20_real(-loss);", 
		"bug_line": "         s21 = `db20_real(-loss)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "electrical outi;", 
		"bug_line": "electrical outi",
		"error_description": "Missing semicolon at the end of the line, causing a syntax error as the next token 'electrical' becomes unexpected"
	}
]