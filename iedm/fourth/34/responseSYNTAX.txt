[
	{
		"original_line": "    if ( etaFFdrd <= `LARGE_VALUE ) begin", 
		"bug_line": "    if ( etaFFdrd <= `LARGE_VALUE  begin",
		"error_description": "Missing closing parenthesis ')' before 'begin' keyword"
	},
	{
		"original_line": "    if ( etadrd  <= `LARGE_VALUE ) begin", 
		"bug_line": "    if ( etadrd  <= `LARGE_VALUE  begin",
		"error_description": "Missing closing parenthesis ')' for the condition in the if-statement, resulting in unmatched parentheses."
	},
	{
		"original_line": "parameter real 		Tnom      	= 27.0          			from [-100:inf);        // Nominal (extraction) temperature", 
		"bug_line": "parameter real 		Tnom      	= 27.0          			from [-100:inf;        // Nominal (extraction) temperature",
		"error_description": "Missing closing bracket ']' in range specification. VerilogA requires complete bracket pairs for parameter ranges."
	},
	{
		"original_line": "real Idsrs, Vdsats1rs, Vdsat1rs, deltars;", 
		"bug_line": "real Idsrs, Vdsats1rs Vdsat1rs, deltars;",
		"error_description": "Missing comma between variable declarations 'Vdsats1rs' and 'Vdsat1rs', causing syntax error"
	},
	{
		"original_line": "real FFs, FFd, Fsd, etas, etad, Vdx, Qinvs, Qinvd, Vdsc, vx01 ;", 
		"bug_line": "real FFs, FFd, Fsd, etas, etad, Vdx Qinvs, Qinvd, Vdsc, vx01 ;",
		"error_description": "Missing comma between variable declarations 'Vdx' and 'Qinvs', resulting in invalid syntax for multiple variable definitions"
	},
	{
		"original_line": "        end else begin // reverse mode", 
		"bug_line": "        end elsee begin // reverse mode",
		"error_description": "Misspelled 'else' keyword as 'elsee' causing unrecognized token error"
	},
	{
		"original_line": "    else begin", 
		"bug_line": "    els begin",
		"error_description": "Misspelled keyword 'else' as 'els' (missing 'e')"
	},
	{
		"original_line": "    if ( etai <= `LARGE_VALUE )", 
		"bug_line": "    if ( etai =< `LARGE_VALUE )",
		"error_description": "Reversed operator '=<' is invalid syntax. The correct comparison operator is '<=' for less than or equal to."
	},
	{
		"original_line": "parameter real 		Cgrs      	= Cgrd    				from (0:inf);           // Drain access areal capacitance [F/cm2]", 
		"bug_line": "parameter real 		Cgrs      	= Cgrd    				from (0:inf;           // Drain access areal capacitance [F/cm2]",
		"error_description": "Missing closing parenthesis in range constraint. The correct syntax requires balanced parentheses for range specifications like 'from (0:inf)'. The missing ')' will cause a syntax error during compilation."
	},
	{
		"original_line": "real alpha_phit, two_ns_phit, two_nd_phit;", 
		"bug_line": "real alpha_phit, two_ns_phit, two_nd_phit",
		"error_description": "Missing semicolon at the end of the variable declaration"
	},
	{
		"original_line": "    if ( type * ( V(si) - V(src) ) >=  0.0 ) begin // forward mode", 
		"bug_line": "    if ( type * ( V(si) - V(src) ) =>  0.0 ) begin // forward mode",
		"error_description": "Invalid operator '=>' used instead of '>=' for comparison. The '=>' operator is not valid in VerilogA relational expressions."
	},
	{
		"original_line": "`include "constants.vams"", 
		"bug_line": "`include "constants.vams",
		"error_description": "Missing closing double quote for include filename string"
	},
	{
		"original_line": "parameter real 		vthetard  	= 0.05             			from [0:inf);           // Scattering: velocity reduction parameter with Vg", 
		"bug_line": "parameter real 		vthetard  	= 0.05             			from [0:inf;           // Scattering: velocity reduction parameter with Vg",
		"error_description": "Missing closing parenthesis ')' in range constraint. Valid range syntax requires '[lower:upper)' for inclusive-exclusive bounds."
	},
	{
		"original_line": "    two_ns_phit		= 1.0 * n * phit;", 
		"bug_line": "    two_ns_phit		= 1.0 * n * phit",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "real qsb, qdb, kq4, kq2, kq, tol;", 
		"bug_line": "real qsb, qdb, kq4, kq2, kq tol;",
		"error_description": "Missing comma between variable declarations 'kq' and 'tol'"
	},
	{
		"original_line": "    if ( etasrd  <= `LARGE_VALUE ) begin", 
		"bug_line": "    if ( etasrd  =< `LARGE_VALUE ) begin",
		"error_description": "Invalid operator '=<' used instead of '<=' for less than or equal comparison. VerilogA requires '<=' for relational operations."
	},
	{
		"original_line": "real qs, qd, qd1, dQinv;", 
		"bug_line": "real qs qd, qd1, dQinv;",
		"error_description": "Missing comma between variable declarations 'qs' and 'qd'"
	},
	{
		"original_line": "real dibsatrd, dibsatrs;", 
		"bug_line": "real dibsatrd dibsatrs;",
		"error_description": "Missing comma between variable declarations in a single real statement."
	},
	{
		"original_line": "    end else begin // reverse mode", 
		"bug_line": "    end else beginn // reverse mode",
		"error_description": "Misspelled 'begin' keyword as 'beginn' which is invalid VerilogA syntax"
	},
	{
		"original_line": "parameter real 		W         	= 25e-6         			from (0:inf);           // Width of the device [m]", 
		"bug_line": "parameter real 		W         	= 25e-6         			from (0:inf;           // Width of the device [m]",
		"error_description": "Missing closing parenthesis ')' in parameter range constraint"
	}
]