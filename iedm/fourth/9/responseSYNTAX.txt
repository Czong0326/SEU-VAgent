[
	{
		"original_line": " I(inn) <+ V(inn)/rin;", 
		"bug_line": " I(inn) < V(inn)/rin;",
		"error_description": "Incorrect contribution operator; '<' is invalid without '+'. VerilogA requires '<+' for analog contributions."
	},
	{
		"original_line": "   parameter real gain = 0;", 
		"bug_line": "   parameter real gain = 0",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing syntax error as VerilogA requires statements to be properly terminated"
	},
	{
		"original_line": "   rin            VHout", 
		"bug_line": "   rin            VHout */",
		"error_description": "Added '*/' which prematurely terminates the block comment, causing subsequent diagram lines to be interpreted as invalid VerilogA syntax."
	},
	{
		"original_line": "   wb2 = wb * wb;", 
		"bug_line": "   wb2 = wb * wb",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "real wb, real_gain, re_pole, im_pole, vout, wb2;", 
		"bug_line": "real wb, real_gain, re_pole, im_pole, vout, wb2",
		"error_description": "Missing semicolon at the end of the variable declaration statement."
	},
	{
		"original_line": "   |    --------   |", 
		"bug_line": "   |    --------   */",
		"error_description": "Prematurely terminates the block comment, exposing subsequent diagram lines (28-35) as invalid VerilogA syntax since they're no longer commented."
	},
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "include "disciplines.vams"",
		"error_description": "Missing backtick (`) before 'include' directive. VerilogA requires compiler directives to start with a backtick. Without it, 'include' is interpreted as an invalid keyword."
	},
	{
		"original_line": "        tmp = wb * (ReP[i] * ReP[i] + ImP[i] * ImP[i]);", 
		"bug_line": "        tmp = wb * (ReP[i] * ReP[i] + ImP[i] * ImP[i];",
		"error_description": "Missing closing parenthesis for the group expression, causing unmatched parentheses syntax error. The expression ends with a semicolon before closing the parenthesis group."
	},
	{
		"original_line": "   integer i, Npair, Np1p, k;", 
		"bug_line": "   integer i, Npair, Np1p k;",
		"error_description": "Missing comma between variable declarations 'Np1p' and 'k', causing a syntax error where the parser expects an operator or semicolon but finds an identifier."
	},
	{
		"original_line": "analog begin", 
		"bug_line": "analg begin",
		"error_description": "Misspelled keyword 'analog' as 'analg' causing unrecognized directive"
	},
	{
		"original_line": "/* System level implementation of differential Chebyshev HP filter:", 
		"bug_line": "/* System level implementation of differential Chebyshev HP filter:;",
		"error_description": "Semicolon inside comment block creates invalid token as ';' has no syntactic meaning within comments and breaks parser rules."
	},
	{
		"original_line": "        re_pole = wb / ReP[i];", 
		"bug_line": "        re_pole = wb / ReP[i]",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements, and its absence creates a syntax error."
	},
	{
		"original_line": "        tmp = wb * (ReP[i] * ReP[i] + ImP[i] * ImP[i]);", 
		"bug_line": "        tmp = wb * (ReP[i] * ReP[i] + ImP[i] * ImP[i]];",
		"error_description": "Mismatched brackets: changed the closing parenthesis ')' to an extra square bracket ']', creating unbalanced parentheses and incorrect array indexing syntax."
	},
	{
		"original_line": "`define N 8", 
		"bug_line": "define N 8",
		"error_description": "Missing backtick (`) in preprocessor directive. VerilogA requires `define for macro definitions. Without the backtick, 'define' is interpreted as an undefined identifier, causing a syntax error."
	},
	{
		"original_line": "   nu =  asinh(1.0/eps)/`N;", 
		"bug_line": "   nu =  asinh(1.0/eps)/`N",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        zeron[`N] = zeron[`N] / wb2;", 
		"bug_line": "        zeron[`N] = zeron[`N] / wb2",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects a semicolon to terminate the expression."
	},
	{
		"original_line": "wb = `M_TWO_PI * fcorner;", 
		"bug_line": "wb = `M_TWO_PI * fcorner",
		"error_description": "Missing semicolon at the end of the statement causes a syntax error where the parser expects ';' before the next assignment"
	},
	{
		"original_line": "        |    --------   |", 
		"bug_line": "        |    -------- */ error_token   |",
		"error_description": "Terminated the comment block early with '*/' and added an unrecognized token 'error_token' causing a syntax error as this token is invalid outside comment scope."
	},
	{
		"original_line": " I(inp) <+ V(inp)/rin;", 
		"bug_line": " I(inp) <+ V(inp)/rin",
		"error_description": "Missing semicolon at the end of the contribution statement"
	},
	{
		"original_line": "   for (k=1; k<=Np1p; k=k+1) begin", 
		"bug_line": "   for (k=1; k=<Np1p; k=k+1) begin",
		"error_description": "Invalid operator '=<' in condition. VerilogA requires '<=' for less-than-or-equal comparisons."
	}
]