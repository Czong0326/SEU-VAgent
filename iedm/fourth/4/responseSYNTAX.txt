[
	{
		"original_line": "   if( `N < 2 ) begin", 
		"bug_line": "   if `N < 2 ) begin",
		"error_description": "Missing opening parenthesis for condition after 'if' keyword"
	},
	{
		"original_line": "   input inp,inn;", 
		"bug_line": "   input inp,inn",
		"error_description": "Missing semicolon at the end of the input port declaration. VerilogA requires semicolons to terminate port declarations, and the absence here will cause a syntax error when parsing subsequent lines."
	},
	{
		"original_line": "   input inp,inn;", 
		"bug_line": "   input inp inn;",
		"error_description": "Missing comma between port identifiers in input declaration causes syntax error as Verilog-A requires commas to separate multiple port names."
	},
	{
		"original_line": "        zeros[IntegTmp]     =  0;", 
		"bug_line": "        zeros[IntegTmp      =  0;",
		"error_description": "Missing closing bracket ']' for array index, causing syntax error due to unmatched bracket and invalid assignment context"
	},
	{
		"original_line": "`include "constants.vams"", 
		"bug_line": "`include constants.vams"",
		"error_description": "Missing opening double quote for include file name, causing unterminated string and invalid file path specification"
	},
	{
		"original_line": "   end // for (k=1; k<=Np1p; k=k+1)", 
		"bug_line": "   end / for (k=1; k<=Np1p; k=k+1)",
		"error_description": "Missing second slash in comment delimiter creates invalid token '/' and unterminated comment"
	},
	{
		"original_line": "   end // it's impossible that imagtmp == 0.0", 
		"bug_line": "   ned // it's impossible that imagtmp == 0.0",
		"error_description": "Misspelled keyword 'end' as 'ned' - VerilogA requires correct 'end' keyword to terminate conditional blocks"
	},
	{
		"original_line": "   wg  = sqrt(wg2);", 
		"bug_line": "   wg  = sqrt(wg2)",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "end // analog begin", 
		"bug_line": "endd // analog begin",
		"error_description": "Misspelled 'end' keyword as 'endd', causing undefined keyword syntax error"
	},
	{
		"original_line": "   parameter real gain = 0;", 
		"bug_line": "   parametr real gain = 0;",
		"error_description": "Misspelled keyword 'parameter' as 'parametr' (invalid VerilogA keyword)"
	},
	{
		"original_line": "          if (realtmp == 0) teta = -`M_PI / 2;", 
		"bug_line": "          if realtmp == 0) teta = -`M_PI / 2;",
		"error_description": "Missing opening parenthesis '(' for the conditional expression in the if statement. VerilogA requires conditions to be enclosed in parentheses."
	},
	{
		"original_line": "Voltage source VHout = H(s)*Vin, where H(s) is the polynomial transfer function", 
		"bug_line": "Voltage source VHout = H(s)*Vin, where H(s) is the polynomial transfer function */ $",
		"error_description": "Prematurely ends block comment with '*/' and adds invalid '$' character, causing unterminated string and illegal token syntax errors"
	},
	{
		"original_line": "        if (realtmp == 0) teta = -`M_PI / 2;", 
		"bug_line": "        if (realtmp == 0 teta = -`M_PI / 2;",
		"error_description": "Missing closing parenthesis in conditional expression"
	},
	{
		"original_line": "imagtmp = 0.0;", 
		"bug_line": "imagtmp = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements to be terminated with a semicolon."
	},
	{
		"original_line": "   real  ReP[0:`N/2], ImP[0:`N/2];", 
		"bug_line": "   real  ReP[0:`N/2, ImP[0:`N/2];",
		"error_description": "Missing closing bracket ']' after array dimension in ReP declaration, causing unclosed array dimension syntax error."
	},
	{
		"original_line": "     zeros[IntegTmp + 1] =  wg;", 
		"bug_line": "     zeros[IntegTmp + 1] =  wg +",
		"error_description": "Missing semicolon at end of statement and dangling '+' operator without right operand creates two syntax errors: unterminated expression and invalid operator usage."
	},
	{
		"original_line": "   rin            VHout", 
		"bug_line": "   rin            VHout *",
		"error_description": "Added asterisk without closing comment, creating unterminated block comment syntax error."
	},
	{
		"original_line": "        imagtmp = tmp * sin(teta) / 2;", 
		"bug_line": "        imagtmp = tmp * sin(teta / 2;",
		"error_description": "Unmatched parenthesis: The argument for sin() is missing a closing parenthesis after the expression."
	},
	{
		"original_line": "        if (imagtmp > 0) begin", 
		"bug_line": "        if (imagtmp > 0 begin",
		"error_description": "Missing closing parenthesis ')' in the conditional expression before the 'begin' keyword"
	},
	{
		"original_line": "        else if (realtmp > 0 ) teta = atan(imagtmp/realtmp);", 
		"bug_line": "        else if (realtmp > 0 ) teta = atan(imagtmp/realtmp)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	}
]