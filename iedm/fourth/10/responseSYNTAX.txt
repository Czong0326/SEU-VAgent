[
	{
		"original_line": "        as laplace_zp(V(inp)- V(inp), {}, poles)).", 
		"bug_line": "        as laplace_zp(V(inp)- V(inp), {, poles)).",
		"error_description": "Missing closing brace '}' for empty numerator argument in laplace_zp function call, causing unbalanced braces."
	},
	{
		"original_line": "   parameter real rin = 50 from (0:inf);", 
		"bug_line": "   parameter real rin = 50 from (0,inf);",
		"error_description": "Replaced colon with comma in range expression, causing syntax error: range bounds must be separated by colon (':') instead of comma (',')"
	},
	{
		"original_line": "   if (Npair*2==`N) real_gain = pow(10.0,(gain-ripple)/20.0);", 
		"bug_line": "   if (Npair*2==`N) real_gain = pow(10.0,(gain-ripple)/20.0)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "include "disciplines.vams"",
		"error_description": "Missing backtick (`) at the beginning of the include directive, rendering it an invalid compiler directive. VerilogA requires preprocessor directives to start with a backtick."
	},
	{
		"original_line": "   eps = sqrt(pow(10.0,ripple/10.0)-1.0);", 
		"bug_line": "   eps = sqrt(pow(10.0 ripple/10.0)-1.0);",
		"error_description": "Missing comma between arguments in pow function call"
	},
	{
		"original_line": "   real  poles[0:`N*2 -1];", 
		"bug_line": "   real  poles[0:`N*2 -1]];",
		"error_description": "Added extra closing bracket ']' creating mismatched brackets in array declaration."
	},
	{
		"original_line": "   rin            VHout", 
		"bug_line": "   rin            VHout */",
		"error_description": "Prematurely closed multi-line comment at line 28 using */, causing subsequent lines (29-41) to be interpreted as invalid VerilogA syntax instead of comments."
	},
	{
		"original_line": "   nu =  asinh(1.0/eps)/`N;", 
		"bug_line": "   nu =  asinh(1.0/eps)/`N",
		"error_description": "Missing semicolon at the end of the statement causes a syntax error as VerilogA requires semicolons to terminate statements."
	},
	{
		"original_line": "   rin            VHout", 
		"bug_line": "   rin            VHout */",
		"error_description": "Added '*/' to prematurely terminate the comment block, causing subsequent non-comment lines to be parsed as invalid VerilogA syntax."
	},
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "`include "disciplines.vams",
		"error_description": "Unterminated string literal due to missing closing double quote"
	},
	{
		"original_line": "        poles[4*i+1] = 0.0;", 
		"bug_line": "        poles[4*i+1] = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing syntax error in Verilog-A where statements must be terminated with semicolons."
	},
	{
		"original_line": "inn-               ---rout----outn", 
		"bug_line": "inn-               ---rout----outn */",
		"error_description": "Prematurely terminates the block comment with '*/', exposing subsequent non-Verilog diagram text (lines 33-37) as invalid syntax."
	},
	{
		"original_line": "   @(initial_step) begin", 
		"bug_line": "   @(initial_step begin",
		"error_description": "Missing closing parenthesis ')' in event control expression"
	},
	{
		"original_line": "        re_pole = wb * ReP[i];", 
		"bug_line": "        re_pole = wb * ReP[i;",
		"error_description": "Missing closing square bracket ']' in array index, causing unterminated array reference syntax error"
	},
	{
		"original_line": "wb = `M_TWO_PI * fcorner;", 
		"bug_line": "wb = `M_TWO_PI * fcorner",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as statements in analog blocks must be properly terminated"
	},
	{
		"original_line": "wb = `M_TWO_PI * fcorner;", 
		"bug_line": "wb = `M_TWO_PI * fcorner",
		"error_description": "Missing semicolon at end of statement causes syntax error as subsequent tokens become part of invalid expression"
	},
	{
		"original_line": "        --------              ", 
		"bug_line": "        --------               *",
		"error_description": "Added an asterisk without closing the block comment, creating unterminated comment syntax error"
	},
	{
		"original_line": "   teta = (2*k-1.0)*`M_PI/(2*`N);", 
		"bug_line": "   teta = (2*k-1.0)*`M_PI/(2*`N)",
		"error_description": "Missing semicolon at statement termination. VerilogA requires semicolons to end assignment statements."
	},
	{
		"original_line": "   if (Npair*2==`N) real_gain = pow(10.0,(gain-ripple)/20.0);", 
		"bug_line": "   if (Npair*2==`N real_gain = pow(10.0,(gain-ripple)/20.0);",
		"error_description": "Missing closing parenthesis ')' for the condition in the if statement, causing a syntax error due to unmatched parentheses."
	},
	{
		"original_line": "   @(initial_step) begin", 
		"bug_line": "   @initial_step begin",
		"error_description": "Missing parentheses around event expression 'initial_step'. Verilog-A requires parentheses for event controls like @(event)."
	}
]