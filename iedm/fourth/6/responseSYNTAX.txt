[
	{
		"original_line": "   end // for (k=1; k<=Np1p; k=k+1)", 
		"bug_line": "   edn // for (k=1; k<=Np1p; k=k+1)",
		"error_description": "Misspelled 'end' keyword as 'edn'. VerilogA requires correct reserved words; 'edn' is unrecognized and breaks the block structure by failing to close the for-loop."
	},
	{
		"original_line": "vout = real_gain * laplace_zp(V(inp)- V(inn), , poles);", 
		"bug_line": "vout = real_gain * laplace_zp(V(inp)- V(inn), , poles;",
		"error_description": "Missing closing parenthesis for laplace_zp function call"
	},
	{
		"original_line": "end //if (Npair != Np1p)", 
		"bug_line": "end if //if (Npair != Np1p)",
		"error_description": "Added invalid 'if' after 'end'. VerilogA requires only 'end' to terminate blocks, not 'end if' like VHDL. This creates a syntax error due to unexpected token 'if'."
	},
	{
		"original_line": "   parameter real fcorner = 1e9 from (0:inf);", 
		"bug_line": "   parameter real fcorner = 1e9 from (0:inf;",
		"error_description": "Missing closing parenthesis in the range specification"
	},
	{
		"original_line": "end // analog begin", 
		"bug_line": "endd // analog begin",
		"error_description": "Misspelled 'end' keyword as 'endd', causing a syntax error due to unrecognized block termination keyword"
	},
	{
		"original_line": "re_pole = wb * ReP[i];", 
		"bug_line": "re_pole = wb * ReP[i]",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error when the parser encounters the next identifier 'poles' without an operator."
	},
	{
		"original_line": "	teta   = (2*k+1.0)*tmp;", 
		"bug_line": "	teta   = (2*k+1.0)*tmp",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "@(initial_step) begin", 
		"bug_line": "@(initialstep begin",
		"error_description": "Missing closing parenthesis for the event control and misspelled 'initial_step' keyword. Correct syntax requires '@(event_name)' with proper event identifier."
	},
	{
		"original_line": "   integer i, Npair, Np1p, k, IntegTmp;", 
		"bug_line": "   integer i, Npair Np1p, k, IntegTmp;",
		"error_description": "Missing comma between 'Npair' and 'Np1p' causes invalid variable declaration syntax (multiple identifiers without separators)."
	},
	{
		"original_line": "real  ReP[0:`N/2], ImP[0:`N/2];", 
		"bug_line": "real  ReP[0:`N/2, ImP[0:`N/2];",
		"error_description": "Missing closing bracket ']' after first array dimension, causing unterminated array declaration for ReP."
	},
	{
		"original_line": " end //if (Npair != Np1p)", 
		"bug_line": " edn //if (Npair != Np1p)",
		"error_description": "Misspelled keyword 'edn' instead of 'end'"
	},
	{
		"original_line": "        poles[IntegTmp+3] = -im_pole;", 
		"bug_line": "        poles[IntegTmp+3] = -im_pole",
		"error_description": "Missing semicolon at the end of the assignment statement, causing syntax error due to unterminated expression"
	},
	{
		"original_line": "   parameter real gain = 0;", 
		"bug_line": "   parameter real gain == 0;",
		"error_description": "Used comparison operator '==' instead of assignment operator '=' in parameter declaration"
	},
	{
		"original_line": "        gnd             gnd", 
		"bug_line": "        gnd             gnd */",
		"error_description": "Prematurely closes comment block with '*/', causing subsequent non-VerilogA text to be parsed as invalid code."
	},
	{
		"original_line": "   parameter real gain = 0;", 
		"bug_line": "   parameter real gain = 0",
		"error_description": "Missing semicolon at the end of parameter declaration"
	},
	{
		"original_line": " of LPF implemented as laplace_zp(V(inp)- V(inp), {}, poles)).", 
		"bug_line": " of LPF implemented as laplace_zp(V(inp)- V(inp), {}, poles).",
		"error_description": "Missing closing parenthesis for laplace_zp function call. The original had two closing parentheses '))' at the end, but the modified version has only one ')', causing unbalanced parentheses syntax error."
	},
	{
		"original_line": "vout = real_gain * laplace_zp(V(inp)- V(inn), , poles);", 
		"bug_line": "vout = real_gain * laplace_zp(V(inp)- V(inn), , poles)",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "   parameter real rout = 50 from (0:inf);", 
		"bug_line": "   parameter real rout = 50 from (0:inf;",
		"error_description": "Missing closing parenthesis in the range expression for parameter 'rout', causing unmatched parentheses syntax error."
	},
	{
		"original_line": "   Npair = `N/2; Np1p = (`N+1)/2;", 
		"bug_line": "   Npair = `N/2; Np1p = `N+1)/2;",
		"error_description": "Unmatched closing parenthesis in the Np1p assignment due to missing opening parenthesis before `N"
	},
	{
		"original_line": "inp-    | H(s) |   ---rout----outp", 
		"bug_line": "inp-    | H(s) |   ---rout----outp */",
		"error_description": "Added '*/' to prematurely close the multi-line comment. This causes subsequent ASCII art to be uncommented and parsed as invalid VerilogA code, while also leaving an unmatched '*/' at the original comment's end."
	}
]