[
	{
		"original_line": "analog begin", 
		"bug_line": "analg begin",
		"error_description": "Misspelled 'analog' as 'analg', which is an unrecognized keyword in VerilogA syntax."
	},
	{
		"original_line": "   I(I_in_int) <+ V(I_in_int)/rin;", 
		"bug_line": "   I(I_in_int) <+ V(I_in_int):rin;",
		"error_description": "Incorrect operator: colon ':' used instead of division operator '/'"
	},
	{
		"original_line": "electrical I_in_int, Q_in_int;", 
		"bug_line": "electrical I_in_int Q_in_int;",
		"error_description": "Missing comma between signal declarations causes VerilogA syntax error. The comma separating 'I_in_int' and 'Q_in_int' signals is required when declaring multiple nodes of the same discipline type."
	},
	{
		"original_line": "PCR:575553, "Improper Noise implementation in all modules in rfLib"", 
		"bug_line": "PCR:575553, "Improper Noise implementation in all modules in rfLib */",
		"error_description": "Prematurely closed the multi-line comment block with '*/', causing subsequent lines (6-8) to be interpreted as invalid Verilog code outside any comment block."
	},
	{
		"original_line": "real phi1, r1;", 
		"bug_line": "real phi1 r1;",
		"error_description": "Missing comma between variable declarations. The correct syntax requires commas to separate multiple variables in a single type declaration statement."
	},
	{
		"original_line": "theta = cw*(1+beta)*pscp*tmp/(1+beta*tmp);", 
		"bug_line": "theta = cw*(1+beta))*pscp*tmp/(1+beta*tmp);",
		"error_description": "Added extra closing parenthesis after 'beta', creating unmatched parentheses in the expression"
	},
	{
		"original_line": "PCR:560190, "Implementation error in rfLib baseband module LNA_BB"", 
		"bug_line": "PCR:560190, "Implementation error in rfLib baseband module LNA_BB",
		"error_description": "Unterminated string literal due to missing closing double quote, causing a syntax error where the compiler expects the string to terminate properly."
	},
	{
		"original_line": "parameter real nf = 2 from [0:inf];", 
		"bug_line": "parameter real nf = 2 from [0:inf)",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing the next token 'real' to be interpreted as part of the current statement and resulting in a syntax error."
	},
	{
		"original_line": "parameter real psinf = 2 from (pscp:inf);", 
		"bug_line": "parameter real psinf = 2 from (pscp:inf;",
		"error_description": "Missing closing parenthesis in range constraint, causing unbalanced parentheses syntax error."
	},
	{
		"original_line": "parameter real rin = 50 from (0:inf);", 
		"bug_line": "parameter real rin = 50 from (0:inf;",
		"error_description": "Unmatched opening parenthesis in range expression. The closing parenthesis is missing, causing a syntax error due to incomplete range specification."
	},
	{
		"original_line": "I(I_out) <+ (-rhoout*(V(I_in_int)*cos_theta - V(Q_in_int)*sin_theta) + V(I_out))/rout;", 
		"bug_line": "I(I_out) <+ (-rhoout*(V(I_in_int)*cos_theta - V(Q_in_int)*sin_theta) + V(I_out))/rout",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "              vn2 = (rsopt*rsopt) * in2;", 
		"bug_line": "              vn2 = (rsopt*rsopt) * in2",
		"error_description": "Missing semicolon at the end of the assignment statement. This will cause a syntax error as the next token ('end') cannot be parsed as part of the expression."
	},
	{
		"original_line": "   V(Q_in, Q_in_int) <+ white_noise(vn2, "Q_vnoise"); // based on PCR:575553", 
		"bug_line": "   V(Q_in, Q_in_int) <+ white_noise(vn2 "Q_vnoise"); // based on PCR:575553",
		"error_description": "Missing comma between function arguments, resulting in invalid parameter list syntax for white_noise call"
	},
	{
		"original_line": "parameter real shp = 2 from [1:inf);", 
		"bug_line": "parameter real shp = 2 from [1:inf;",
		"error_description": "Unterminated range specification due to missing closing parenthesis for the interval. Should be '[1:inf)' but written as '[1:inf;'"
	},
	{
		"original_line": "`include "discipline.h"", 
		"bug_line": "`includee "discipline.h"",
		"error_description": "Misspelled preprocessor directive 'includee' instead of correct 'include'. Verilog requires exact spelling for compiler directives."
	},
	{
		"original_line": "I(Q_out) <+ (-rhoout*V(Q_in_int) + V(Q_out))/rout;", 
		"bug_line": "I(Q_out) <+ (-rhoout*V(Q_in_int) + V(Q_out))/rout",
		"error_description": "Missing semicolon at the end of the statement. VerilogA requires all analog operator statements to end with a semicolon."
	},
	{
		"original_line": "          the shift rise faster as a function of input signal level.", 
		"bug_line": "          the shift rise faster as a function of input signal level. */",
		"error_description": "Prematurely closed multi-line comment with '*/', causing subsequent descriptive text to be interpreted as invalid VerilogA code."
	},
	{
		"original_line": "   I(I_in_int) <+ white_noise(in2, "I_inoise"); // based on PCR:575553", 
		"bug_line": "   I(I_in_int) <+ white_noise(in2 "I_inoise"); // based on PCR:575553",
		"error_description": "Missing comma between function arguments in the white_noise call. The two arguments 'in2' and the string "I_inoise" should be separated by a comma."
	},
	{
		"original_line": "real theta, beta, tmp, cp;", 
		"bug_line": "real theta beta, tmp, cp;",
		"error_description": "Missing comma between variable names 'theta' and 'beta', resulting in an invalid variable declaration where 'theta beta' is parsed as an undeclared type or identifier."
	},
	{
		"original_line": "PCR:565951, "LNA_PB, MIXER_PB models etc requires Impedance functions"", 
		"bug_line": "PCR:565951, "LNA_PB, MIXER_PB models etc requires Impedance functions",
		"error_description": "Unterminated string literal due to missing closing double quote, causing a syntax error."
	}
]