[
	{
		"original_line": "end // it's impossible that imagtmp == 0.0", 
		"bug_line": "edn // it's impossible that imagtmp == 0.0",
		"error_description": "Misspelled 'end' keyword as 'edn', causing unrecognized statement syntax error"
	},
	{
		"original_line": "        poles[IntegTmp+2] =  (re_pole - realtmp)/2;", 
		"bug_line": "        poles[IntegTmp+2 =  (re_pole - realtmp)/2;",
		"error_description": "Missing closing bracket ']' for array index, causing mismatched brackets"
	},
	{
		"original_line": "   else real_gain = pow(10.0,gain/20.0);", 
		"bug_line": "   else real_gain = pow(10.0,gain/20.0)",
		"error_description": "Missing semicolon at the end of the assignment statement. This leaves the expression unterminated and will cause a syntax error during compilation."
	},
	{
		"original_line": "end else begin", 
		"bug_line": "end elsee begin",
		"error_description": "Misspelled keyword 'else' as 'elsee', causing unrecognized VerilogA syntax"
	},
	{
		"original_line": "   parameter real fupper = 1e9 from (0:inf);", 
		"bug_line": "   parameter real fupper = 1e9 from (0;inf);",
		"error_description": "In the range constraint (0:inf), the colon must be used to separate range limits. Using a semicolon instead creates invalid syntax."
	},
	{
		"original_line": "        end else begin", 
		"bug_line": "        end els begin",
		"error_description": "Misspelled 'else' keyword as 'els', causing a syntax error due to unrecognized conditional block keyword"
	},
	{
		"original_line": "   integer i, Npair, Np1p, k, IntegTmp;", 
		"bug_line": "   integer i, Npair, Np1p, k IntegTmp;",
		"error_description": "Missing comma between variable declarations 'k' and 'IntegTmp', causing syntax error due to invalid token sequence."
	},
	{
		"original_line": "        imagtmp = - 2 * ReP[i] * ImP[i] * wb2 / Sqr_Rep2PlusImp2;", 
		"bug_line": "        imagtmp = - 2 * ReP[i] ImP[i] * wb2 / Sqr_Rep2PlusImp2;",
		"error_description": "Missing multiplication operator between 'ReP[i]' and 'ImP[i]' resulting in invalid adjacent identifiers"
	},
	{
		"original_line": "   electrical inp,inn, outp,outn;", 
		"bug_line": "   electrical inp,inn outp,outn;",
		"error_description": "Missing comma between node identifiers 'inn' and 'outp' causes syntax error due to invalid identifier list structure."
	},
	{
		"original_line": "    ImP[k-1] =   cosh_nu * cos(teta);", 
		"bug_line": "    ImP[k-1] =   cosh_nu * cos(teta;",
		"error_description": "Missing closing parenthesis ')' for cos function call, causing unmatched parentheses syntax error"
	},
	{
		"original_line": "   end //for (i=0; i<Npair; i=i+1)", 
		"bug_line": "   endd //for (i=0; i<Npair; i=i+1)",
		"error_description": "Misspelled 'end' keyword as 'endd' - VerilogA requires exact keyword matching for block termination"
	},
	{
		"original_line": "   end // for (k=1; k<=Np1p; k=k+1)", 
		"bug_line": "   endd // for (k=1; k<=Np1p; k=k+1)",
		"error_description": "Misspelled 'end' keyword as 'endd'. VerilogA requires correct block termination keywords; 'endd' is invalid and will cause a syntax error."
	},
	{
		"original_line": "        poles[IntegTmp]   =  re_pole + realtmp;", 
		"bug_line": "        poles[IntegTmp]   =  re_pole + realtmp",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error in VerilogA where statements must be properly terminated."
	},
	{
		"original_line": "end // it's impossible that imagtmp == 0.0", 
		"bug_line": "ned // it's impossible that imagtmp == 0.0",
		"error_description": "Misspelled 'end' keyword as 'ned', causing unrecognized statement and broken block structure"
	},
	{
		"original_line": "analog begin", 
		"bug_line": "analog beginn",
		"error_description": "Misspelled keyword 'begin' as 'beginn' introduces an extra 'n' character, creating an undefined keyword syntax error."
	},
	{
		"original_line": "   for (k=1; k<=Np1p; k=k+1) begin", 
		"bug_line": "   for (k=1; k=<Np1p; k=k+1) begin",
		"error_description": "Invalid comparison operator '=<' used instead of '<='. VerilogA requires correct operator tokens; this reversal creates unrecognizable syntax."
	},
	{
		"original_line": "        re_pole  =   wb * ReP[i] / Sqr_Rep2PlusImp2 / 2;", 
		"bug_line": "        re_pole  =   wb * ReP[i / Sqr_Rep2PlusImp2 / 2;",
		"error_description": "Missing closing bracket ']' in array index, causing syntax error due to mismatched brackets."
	},
	{
		"original_line": "   for (k=1; k<=Np1p; k=k+1) begin", 
		"bug_line": "   for (k=1 k<=Np1p; k=k+1) begin",
		"error_description": "Missing semicolon after the initializer in the for loop, causing invalid syntax structure."
	},
	{
		"original_line": "        if (realtmp > 0) begin", 
		"bug_line": "        if (realtmp > 0 begin",
		"error_description": "Missing closing parenthesis for the conditional expression in the if statement. The condition 'realtmp > 0' is missing the required closing ')' before the 'begin' keyword."
	},
	{
		"original_line": "   real  ReP[0:`N/2], ImP[0:`N/2];", 
		"bug_line": "   real  ReP[0:`N/2] ImP[0:`N/2];",
		"error_description": "Missing comma between variable declarations 'ReP' and 'ImP'. Verilog requires commas to separate multiple declarations in a single statement."
	}
]