[
	{
		"original_line": "      Theta(shaft_pos) <+ theta;", 
		"bug_line": "      Theta(shaft_pos) <+ theta",
		"error_description": "Missing semicolon at end of statement"
	},
	{
		"original_line": "parameter real d = 0.1;", 
		"bug_line": "parameter real d = 0,1;",
		"error_description": "Comma used as decimal separator in real number assignment instead of a dot, causing invalid syntax for numerical value"
	},
	{
		"original_line": "                         - d * Omega(shaft_w,com)", 
		"bug_line": "                         - d * Omega(shaft_w,com",
		"error_description": "Missing closing parenthesis for the Omega function call, causing unmatched parentheses syntax error"
	},
	{
		"original_line": "      Tau(shaft_w, com) <+   kf *( I(vp1, vn1)*cos(theta)", 
		"bug_line": "      Tau(shaft_w com) <+   kf *( I(vp1, vn1)*cos(theta)",
		"error_description": "Missing comma between branch nodes in the torque contribution statement. The nodes 'shaft_w' and 'com' must be separated by a comma within the parentheses."
	},
	{
		"original_line": "parameter real lm = 1m;", 
		"bug_line": "parameter real lm = 1 m;",
		"error_description": "Space between number and scale suffix 'm' creates invalid tokenization - scale suffixes must immediately follow digits in VerilogA real literals."
	},
	{
		"original_line": "parameter real rm = 0.2;", 
		"bug_line": "parameter real rm => 0.2;",
		"error_description": "Used invalid assignment operator '=>' instead of '=' for parameter initialization"
	},
	{
		"original_line": "          nu = 0.0;", 
		"bug_line": "          nu = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error when the parser encounters the 'else' keyword on the next line."
	},
	{
		"original_line": "`define PI 3.14159", 
		"bug_line": "`define PI 3,14159",
		"error_description": "Using comma instead of period in floating-point literal creates an invalid number token, as commas aren't allowed in numeric constants in VerilogA."
	},
	{
		"original_line": "parameter real j = 0.0004;", 
		"bug_line": "parameter real j = 0.0004",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "parameter real kf = 0.6;", 
		"bug_line": "parameter real kf = 0.6",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "parameter real km = 0.06;", 
		"bug_line": "parameter real km 0.06;",
		"error_description": "Missing assignment operator '=' in parameter declaration. VerilogA requires explicit assignment operator between parameter name and value."
	},
	{
		"original_line": "parameter real rm = 0.2;", 
		"bug_line": "parameter real rm = 0.2",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error as the next token 'parameter' becomes unexpected."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begn",
		"error_description": "Misspelled keyword 'begin' as 'begn'"
	},
	{
		"original_line": "theta = theta - nu*2*`PI;", 
		"bug_line": "theta = theta - nu*2*`PI",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error due to unterminated assignment"
	},
	{
		"original_line": "parameter real lm = 1m;", 
		"bug_line": "parameter real lm = 1m",
		"error_description": "Missing semicolon at the end of the parameter declaration statement"
	},
	{
		"original_line": "rotational shaft_pos;", 
		"bug_line": "rotational shaft_pos",
		"error_description": "Missing semicolon at the end of the discipline declaration. VerilogA requires semicolons to terminate declaration statements."
	},
	{
		"original_line": "parameter real d = 0.1;", 
		"bug_line": "parameter real d = 0.1",
		"error_description": "Missing semicolon at the end of the parameter declaration causes syntax error as VerilogA requires semicolons to terminate parameter statements."
	},
	{
		"original_line": "                         - ddt( j * Omega(shaft_w,com));", 
		"bug_line": "                         - ddt( j * Omega(shaft_w com));",
		"error_description": "Missing comma between function arguments 'shaft_w' and 'com' in the call to Omega"
	},
	{
		"original_line": "      if ( theta == 0.0 )", 
		"bug_line": "      if ( theta == 0.0; )",
		"error_description": "Semicolon inside condition expression: VerilogA requires complete expressions without terminating semicolons within conditional parentheses"
	},
	{
		"original_line": "   integer nu;", 
		"bug_line": "   integer nu",
		"error_description": "Missing semicolon at the end of the variable declaration statement, which is required in VerilogA syntax for terminating statements."
	}
]