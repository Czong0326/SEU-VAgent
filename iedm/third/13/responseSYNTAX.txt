[
	{
		"original_line": "module Rectangular_64_QAM(inbit, outi, outq);", 
		"bug_line": "moduel Rectangular_64_QAM(inbit, outi, outq);",
		"error_description": "Misspelled keyword 'moduel' instead of 'module' causes unrecognized declaration error"
	},
	{
		"original_line": "real magv, tmpinphase, pha;", 
		"bug_line": "real magv,, tmpinphase, pha;",
		"error_description": "Extra comma after 'magv' creates an empty variable declaration slot, which is invalid syntax in VerilogA."
	},
	{
		"original_line": "`include "disciplines.vams"", 
		"bug_line": "include "disciplines.vams"",
		"error_description": "Missing backtick (`) before 'include' directive. VerilogA requires compiler directives to be prefixed with a backtick, so this will cause an unrecognized macro error."
	},
	{
		"original_line": "        tq = tq ^ (tq>>2);", 
		"bug_line": "        tq = tq ^ (tq>>2)",
		"error_description": "Missing semicolon at the end of the assignment statement. This causes the next line (tq = tq ^ (tq>>1); to be interpreted as part of the same expression, resulting in invalid syntax."
	},
	{
		"original_line": "          V(outq) <+ PhaseImag[tmpInteger];", 
		"bug_line": "          V(outq) <+ PhaseImag[tmpInteger]",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as VerilogA requires explicit statement termination"
	},
	{
		"original_line": "parameter integer Disable_input = 0 from [0:1];", 
		"bug_line": "parameter integer Disable_input = 0 from [0:1;",
		"error_description": "Missing closing bracket ']' in range constraint for parameter declaration"
	},
	{
		"original_line": "        ti = ti ^ (ti>>1);", 
		"bug_line": "        ti = ti ^ (ti>>1)",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as VerilogA requires statements to be terminated with semicolons."
	},
	{
		"original_line": "        magv = 1/sqrt(42) * sqrt(Dist_or_power) ;", 
		"bug_line": "        magv = 1/sqrt(42) * sqrt(Dist_or_power ;",
		"error_description": "Missing closing parenthesis for sqrt function call, creating unterminated argument list."
	},
	{
		"original_line": "        ti = ti ^ (ti>>1);", 
		"bug_line": "        ti = ti ^ (ti>>1)",
		"error_description": "Missing semicolon at statement termination. VerilogA requires all statements to end with a semicolon."
	},
	{
		"original_line": "integerOut = 0;", 
		"bug_line": "integerOut = 0",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        if ( Disable_input ) ", 
		"bug_line": "        if Disable_input ) ",
		"error_description": "Missing opening parenthesis after 'if' keyword. VerilogA requires parentheses around conditional expressions in if statements."
	},
	{
		"original_line": "        tmpInteger = Usr_mappig_vec[integerOut];", 
		"bug_line": "        tmpInteger = Usr_mappig_vec[integerOut);",
		"error_description": "Mismatched brackets: used closing parenthesis ')' instead of square bracket ']' for array indexing"
	},
	{
		"original_line": "        ti = i >> 3;", 
		"bug_line": "        ti = i >> 3",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as the next token 'tq' becomes part of an invalid expression."
	},
	{
		"original_line": "        PhaseReal[i] = ( -7 + ( i >> 3 ) * 2 ) * magv;", 
		"bug_line": "        PhaseReal[i] = ( -7 + ( i >> 3 ) * 2 ) * magv",
		"error_description": "Missing semicolon at the end of the statement causes syntax error as subsequent lines are interpreted as continuation of this expression"
	},
	{
		"original_line": "integer i, use_seed;", 
		"bug_line": "integer i: use_seed;",
		"error_description": "Colon ':' used instead of comma ',' to separate variable declarations. VerilogA requires commas between multiple variables in a single declaration statement."
	},
	{
		"original_line": "    tmpInteger = mappingArray[integerOut];", 
		"bug_line": "    tmpInteger = mappingArray[integerOut};",
		"error_description": "Mismatched closing brace '}' used instead of square bracket ']' for array indexing, causing syntax error due to improper array access syntax."
	},
	{
		"original_line": "        tq = tq ^ (tq>>1);", 
		"bug_line": "        tq = tq ^ (tq>>1)",
		"error_description": "Missing semicolon at the end of the statement, causing a syntax error as statements in VerilogA must be properly terminated."
	},
	{
		"original_line": "    magv = 1;", 
		"bug_line": "    magv = 1",
		"error_description": "Missing semicolon at the end of the assignment statement in the analog initial block."
	},
	{
		"original_line": "analog begin", 
		"bug_line": "analg begin",
		"error_description": "Misspelled keyword 'analog' as 'analg', resulting in an unrecognized module declaration keyword."
	},
	{
		"original_line": "real tmp[0:`Bits-1];", 
		"bug_line": "real tmp[0:`Bits-1]",
		"error_description": "Missing semicolon at the end of the variable declaration statement. VerilogA requires all statements to terminate with semicolons."
	}
]