[
	{
		"original_line": "         vout_val = exp_upper", 
		"bug_line": "         vout_val exp_upper",
		"error_description": "Missing assignment operator '=', resulting in two consecutive identifiers without an operator, which is a syntax error."
	},
	{
		"original_line": "parameter real vclamp_upper = 1;", 
		"bug_line": "parameter real vclamp_upper = 1",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "         vout_val = vin_val;", 
		"bug_line": "         vout_val = vin_val",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements in analog blocks to terminate with semicolons."
	},
	{
		"original_line": "         exp_decay = exp_ampl; // decay factor of exponential clamping", 
		"bug_line": "         exp_decay = exp_ampl // decay factor of exponential clamping",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires semicolons to terminate statements, and its absence will cause a parsing error when the compiler processes the following 'if' keyword."
	},
	{
		"original_line": "            $display("Range specification error.  vclamp_upper = (%E) less than vclamp_lower = (%E).\n", vclamp_upper, vclamp_lower );", 
		"bug_line": "            $display("Range specification error.  vclamp_upper = (%E) less than vclamp_lower = (%E).\n, vclamp_upper, vclamp_lower );",
		"error_description": "Missing closing double quote (") after the format string. The comma and variable names are now inside the unterminated string literal, causing a syntax error."
	},
	{
		"original_line": "   real vout_val;", 
		"bug_line": "   real vout_val",
		"error_description": "Missing semicolon at the end of the variable declaration statement. VerilogA requires semicolons to terminate variable declarations."
	},
	{
		"original_line": "vout_val = exp_upper", 
		"bug_line": "vout_val = = exp_upper",
		"error_description": "Double equals operator used for assignment instead of single equals, causing invalid syntax"
	},
	{
		"original_line": "   real vout_val;", 
		"bug_line": "   real vout_val",
		"error_description": "Missing semicolon at the end of the variable declaration statement"
	},
	{
		"original_line": "   real exp_upper; // up start of exp clamp", 
		"bug_line": "   real exp_upper // up start of exp clamp",
		"error_description": "Missing semicolon at end of declaration statement. VerilogA requires semicolons to terminate variable declarations."
	},
	{
		"original_line": "   real vin_val;", 
		"bug_line": "   real vin_val",
		"error_description": "Missing semicolon at the end of the real variable declaration statement."
	},
	{
		"original_line": "   analog begin", 
		"bug_line": "   analog begn",
		"error_description": "Misspelled 'begin' keyword as 'begn' causing unrecognized token syntax error"
	},
	{
		"original_line": "      vin_val = V(vin,vgnd);", 
		"bug_line": "      vin_val = V(vin,vgnd)",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'if' becomes unexpected"
	},
	{
		"original_line": "   real vin_val;", 
		"bug_line": "   reel vin_val;",
		"error_description": "Misspelled keyword 'real' as 'reel' - unrecognized data type in Verilog-A syntax"
	},
	{
		"original_line": "      @ ( initial_step ) begin", 
		"bug_line": "      @ initial_step ) begin",
		"error_description": "Missing opening parenthesis after '@' for event control. The correct syntax requires parentheses around the event expression."
	},
	{
		"original_line": "		    $display("Range specification error.  vclamp_upper = (%E) less than vclamp_lower = (%E).\n", vclamp_upper, vclamp_lower );", 
		"bug_line": "		    $display("Range specification error.  vclamp_upper = (%E) less than vclamp_lower = (%E).\n", vclamp_upper, vclamp_lower ;",
		"error_description": "Missing closing parenthesis for $display function call. The line ends with a semicolon instead of closing the function arguments with a parenthesis before the semicolon."
	},
	{
		"original_line": "         exp_upper = (vclamp_upper - exp_ampl); // up start of exp clamp", 
		"bug_line": "         exp_upper = (vclamp_upper - exp_ampl // up start of exp clamp",
		"error_description": "Missing closing parenthesis and semicolon. The line ends without terminating the expression or statement."
	},
	{
		"original_line": "      V(vout,vgnd) <+ vout_val;", 
		"bug_line": "      V(vout vgnd) <+ vout_val;",
		"error_description": "Missing comma between vout and vgnd in branch access function. VerilogA requires commas to separate nodes in the V() function."
	},
	{
		"original_line": "         vclamp_range = (vclamp_upper - vclamp_lower);", 
		"bug_line": "         vclamp_range = (vclamp_upper - vclamp_lower;",
		"error_description": "Missing closing parenthesis in the expression, creating unbalanced parentheses"
	},
	{
		"original_line": "   real exp_lower; // low start of exp clamp", 
		"bug_line": "   reel exp_lower; // low start of exp clamp",
		"error_description": "Misspelled keyword 'reel' instead of 'real' for variable type declaration."
	},
	{
		"original_line": "         exp_upper = (vclamp_upper - exp_ampl); // up start of exp clamp", 
		"bug_line": "         exp_upper = (vclamp_upper - exp_ampl // up start of exp clamp",
		"error_description": "Unmatched parenthesis: missing closing ')' in the assignment expression."
	}
]