[
	{
		"original_line": "real period, i_out, q_out, delay;", 
		"bug_line": "real period, i_out, q_out delay;",
		"error_description": "Missing comma between 'q_out' and 'delay' variable declarations causes syntax error."
	},
	{
		"original_line": "        i_input_data[0]  = V(I_in);", 
		"bug_line": "        i_input_data[0]  = V(I_in;",
		"error_description": "Missing closing parenthesis for the function call V(I_in, causing mismatched parentheses syntax error."
	},
	{
		"original_line": "electrical I_in, Q_in, I_out, Q_out;", 
		"bug_line": "electrical I_in, Q_in, I_out, Q_out",
		"error_description": "Missing semicolon at the end of the port declaration statement, causing a syntax error as VerilogA requires semicolons to terminate declarations."
	},
	{
		"original_line": "parameter real frame_time = 5e-8;", 
		"bug_line": "parameter real frame_time = 5e-8",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "      tmpInteger = taps-i-1;", 
		"bug_line": "      tmpInteger = taps-i-1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where subsequent code is interpreted as part of the same expression."
	},
	{
		"original_line": "      if( ceil(tmp) ==  floor(tmp) )", 
		"bug_line": "      if( ceil(tmp) ==  floor(tmp) ",
		"error_description": "Missing closing parenthesis for 'if' condition. The expression becomes unbalanced, causing a syntax error."
	},
	{
		"original_line": "    if ( upflag == over_samples )", 
		"bug_line": "    if ( upflag == over_samples",
		"error_description": "Missing closing parenthesis for the conditional expression"
	},
	{
		"original_line": "parameter real frame_time = 5e-8;", 
		"bug_line": "parameter real frame_time = 5e-8",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "q_out = q_out + q_input_data[0] * filter_taps[0];", 
		"bug_line": "q_out = q_out + q_input_data[0] filter_taps[0];",
		"error_description": "Missing multiplication operator (*) between 'q_input_data[0]' and 'filter_taps[0]', resulting in adjacent expressions without an operator"
	},
	{
		"original_line": "middle = floor(taps / 2.0);", 
		"bug_line": "middle = flor(taps / 2.0);",
		"error_description": "Misspelled function name: 'flor' instead of the correct 'floor' function, causing an undefined function error."
	},
	{
		"original_line": "  V(I_out)  <+  i_out;", 
		"bug_line": "  V(I_out   <+  i_out;",
		"error_description": "Missing closing parenthesis for the branch argument in the V function call"
	},
	{
		"original_line": "integer i, j, k;", 
		"bug_line": "integer i, j, k",
		"error_description": "Missing terminating semicolon at end of declaration statement"
	},
	{
		"original_line": "start_time = start_time / 500 ;", 
		"bug_line": "start_time = start_time / (500 ;",
		"error_description": "Unmatched parenthesis: missing closing ')' in the division expression. The opening parenthesis '(' is never closed, causing a syntax error."
	},
	{
		"original_line": "   q_out  = 0;", 
		"bug_line": "   q_out  = 0",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'upflag' becomes unexpected after the numeric literal."
	},
	{
		"original_line": "filter_taps[middle] =  1;", 
		"bug_line": "filter_taps[middle) =  1;",
		"error_description": "Closing square bracket for array index mistakenly replaced by a closing parenthesis, causing mismatched bracket syntax error."
	},
	{
		"original_line": "integer tmpInteger, middle, taps;", 
		"bug_line": "integer tmpInteger, middle, taps",
		"error_description": "Missing semicolon at the end of the integer declaration statement, causing a syntax error as the subsequent 'real' declaration would be incorrectly parsed as part of the same statement."
	},
	{
		"original_line": "        i_out  = i_out   +  i_input_data[i] * filter_taps[i];", 
		"bug_line": "        i_out  = i_out   +  i_input_data[i]  filter_taps[i];",
		"error_description": "Missing '*' operator between 'i_input_data[i]' and 'filter_taps[i]', resulting in two adjacent expressions without an operator"
	},
	{
		"original_line": "parameter integer over_samples = 4;", 
		"bug_line": "paramete integer over_samples = 4;",
		"error_description": "Misspelled keyword 'parameter' as 'paramete' (missing 'r'), causing unrecognized declaration syntax."
	},
	{
		"original_line": "    if ( upflag ==  0 ) begin", 
		"bug_line": "    if ( upflag ==  0  begin",
		"error_description": "Missing closing parenthesis after the condition in the if statement."
	},
	{
		"original_line": "        q_input_data[0] = 0 ;", 
		"bug_line": "        q_input_data[0) = 0 ;",
		"error_description": "Mismatched brackets: used closing parenthesis ')' instead of closing bracket ']' for array indexing, causing a syntax error."
	}
]