[
	{
		"original_line": "`include "constants.vams"", 
		"bug_line": "`include "constants.vams",
		"error_description": "Unterminated string literal due to missing closing double quote"
	},
	{
		"original_line": "parameter string Normalize_method = "Min_distance";", 
		"bug_line": "parameter string Normalize_method = "Min_distance"",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "V(outi) <+ PhaseReal[tmpInteger];", 
		"bug_line": "V(outi) <+ PhaseReal[tmpInteger);",
		"error_description": "Mismatched closing parenthesis ')' instead of required closing bracket ']' for array indexing, causing syntax error."
	},
	{
		"original_line": "        tq = i & 3 ;", 
		"bug_line": "        tq = i & ;",
		"error_description": "Missing right-hand operand for bitwise AND operator '&'. VerilogA requires explicit operands on both sides of bitwise operators."
	},
	{
		"original_line": "parameter real phase_offset = 0.0;", 
		"bug_line": "parameter real phase_offset = 0..0;",
		"error_description": "Invalid real number '0..0' with consecutive decimal points"
	},
	{
		"original_line": "  V(outq) <+ PhaseImag[tmpInteger];", 
		"bug_line": "  V(outq) <+ PhaseImag[tmpInteger",
		"error_description": "Missing closing bracket ']' and semicolon ';' at end of statement, causing unterminated array index and incomplete statement syntax."
	},
	{
		"original_line": "        magv = 1/sqrt(10) * sqrt(Dist_or_power) ;", 
		"bug_line": "        magv = 1/sqrt(10)) * sqrt(Dist_or_power) ;",
		"error_description": "Mismatched parentheses due to extra closing parenthesis after '10', creating unbalanced parentheses in the expression."
	},
	{
		"original_line": "    pha = 0.0;", 
		"bug_line": "    pha = 0.0",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "    for (i = 0; i < `M; i = i + 1) begin", 
		"bug_line": "    for (i = 0; i < `M i = i + 1) begin",
		"error_description": "Missing semicolon between loop condition and iteration expression"
	},
	{
		"original_line": "parameter string Constellation_ordering = "Gray";", 
		"bug_line": "parameter string Constellation_ordering = "Gray;",
		"error_description": "Unterminated string literal due to missing closing double-quote"
	},
	{
		"original_line": "    end else if ( Constellation_ordering == "Gray" ) begin", 
		"bug_line": "    end else if Constellation_ordering == "Gray" ) begin",
		"error_description": "Missing parentheses around conditional expression"
	},
	{
		"original_line": "output outi, outq;", 
		"bug_line": "output outi, outq",
		"error_description": "Missing semicolon at the end of the output port declaration statement"
	},
	{
		"original_line": "  V(outq) <+ PhaseImag[tmpInteger];", 
		"bug_line": "  V(outq) <+ PhaseImag[tmpInteger]",
		"error_description": "Missing semicolon at the end of the statement"
	},
	{
		"original_line": "parameter real Dist_or_power = 2.0;", 
		"bug_line": "parameter real Dist_or_power = 2.0",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "parameter real Dist_or_power = 2.0;", 
		"bug_line": "parameter real Dist_or_power = 2.0",
		"error_description": "Missing required semicolon at the end of the parameter declaration"
	},
	{
		"original_line": "for (i=0; i < `Bits; i = i+1)", 
		"bug_line": "for (i=0 i < `Bits; i = i+1)",
		"error_description": "Missing semicolon after initializer in for loop"
	},
	{
		"original_line": "pha = phase_offset * `M_PI ;", 
		"bug_line": "pha = phase_offset * `M_PI",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "        ti = ti ^ (ti>>2);", 
		"bug_line": "        ti = ti ^ (ti>>2)",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'ti' is interpreted as part of an invalid expression."
	},
	{
		"original_line": "    end else if ( Constellation_ordering == "Gray" ) begin", 
		"bug_line": "    end else if ( Constellation_ordering == "Gray" )) begin",
		"error_description": "Mismatched parentheses due to extra closing parenthesis"
	},
	{
		"original_line": "parameter real Dist_or_power = 2.0;", 
		"bug_line": "parameter real Dist_or_power = 2.0",
		"error_description": "Missing semicolon at the end of the parameter declaration"
	}
]