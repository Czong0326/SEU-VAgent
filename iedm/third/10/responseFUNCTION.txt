[
	{
		"original_line": "kw = f1*sqrt(y1);", 
		"bug_line": "kw = sqrt(y1);",
		"error_description": "The modification removes the multiplication by f1, which scales the white noise coefficient to the measurement frequency. Without f1, the white noise calculation ignores the frequency-dependent scaling, resulting in incorrect phase noise levels at offset frequency f1 and violating the specified noise parameter n1."
	},
	{
		"original_line": "module quadrature(lag, lead);", 
		"bug_line": "module quadrature(lag);",
		"error_description": "Removed the 'lead' port, violating the required two-port interface. This breaks external connectivity for the lead signal, causing internal driving/sensing operations (is1 source, rout, noise insertion) to target a non-existent external node."
	},
	{
		"original_line": "parameter real f1 = 1000 ;", 
		"bug_line": "parameter real f1 = 0 ;",
		"error_description": "Setting f1 to zero causes division by zero in noise coefficient calculations when flicker noise is present (fc != 0) and disables white noise contribution when absent, violating oscillator phase noise requirements."
	},
	{
		"original_line": "inout lag;", 
		"bug_line": "output lag;",
		"error_description": "Changing port direction from inout to output prevents reading voltage (V(lag)) required for calculations, as output ports in VerilogA are write-only for electrical disciplines."
	},
	{
		"original_line": "    if(fc == 0) begin  // no flicker noise", 
		"bug_line": "    if(fc != 0) begin  // no flicker noise",
		"error_description": "Inverting the condition incorrectly activates the no-flicker-noise branch when fc is non-zero, and skips it when fc=0. This violates the design where flicker noise should be disabled specifically when fc=0."
	},
	{
		"original_line": "electrical lead;", 
		"bug_line": "current lead;",
		"error_description": "Changing 'electrical' to 'current' discipline makes potential access V(lead) illegal in the analog block (line 33), as 'current' discipline only supports flow (I) access. This violates signal direction requirements."
	},
	{
		"original_line": "kw = sqrt(y1/(1/(f1*f1)+fc/(f1*f1*f1)));", 
		"bug_line": "kw = sqrt(y1/(1/(f1*f1)+fc/(f1*f1)));",
		"error_description": "Changed denominator term from fc/(f1*f1*f1) to fc/(f1*f1), reducing the exponent and miscalculating flicker noise contribution. This violates the 1/fÂ³ dependency required for accurate phase noise modeling when flicker corner frequency is non-zero."
	},
	{
		"original_line": "I(lead) <+ V(lead)/rout;", 
		"bug_line": "I(lead) <+ V(lag)/rout;",
		"error_description": "Changed the current contribution at 'lead' node to depend on voltage at 'lag' node instead of its own voltage. This creates unintended cross-coupling between quadrature outputs, violating isolation requirements and distorting the signal relationship."
	},
	{
		"original_line": "                  kw = f1*sqrt(y1);", 
		"bug_line": "                  kw = f1*y1;",
		"error_description": "In the no-flicker-noise branch, the white noise coefficient calculation incorrectly uses linear difference y1 instead of sqrt(y1). This results in underestimating kw by a factor of sqrt(y1), reducing phase noise below specified levels."
	},
	{
		"original_line": "    if(fc == 0) begin  // no flicker noise", 
		"bug_line": "    if(fc == 1.0) begin  // no flicker noise",
		"error_description": "Changed condition from fc==0 to fc==1.0. This inverts the flicker noise logic - now flicker noise is incorrectly disabled when fc=1.0 instead of when fc=0, violating the parameter's intended behavior."
	},
	{
		"original_line": "real vc;", 
		"bug_line": "real vc = 0;",
		"error_description": "Initializing vc to 0 removes dynamic phase noise integration. The variable vc must continuously update based on noise calculations, but fixed initialization locks its value, eliminating phase noise modulation in the output signals."
	},
	{
		"original_line": "real vc;", 
		"bug_line": "real vc = 1.0;",
		"error_description": "Initializing vc to 1.0 creates a constant DC offset in the phase noise calculation. This overrides the dynamic noise value from V(int), causing incorrect sinusoidal modulation and permanently biasing the quadrature output signals."
	},
	{
		"original_line": "I(lead) <+ white_noise(amp*amp*kb/2, "quadrature");", 
		"bug_line": "I(lead) <+ white_noise(amp*amp*kw/2, "quadrature");",
		"error_description": "Replaced noise floor coefficient 'kb' with phase noise coefficient 'kw'. This incorrectly uses the oscillator's white phase noise parameter instead of the intended noise floor parameter, dramatically increasing the noise floor power."
	},
	{
		"original_line": "isource #(.type("sine"),.ampl(amp),.fundname(fundname),.freq(freq),.sinephase(phase_shift)) is1(gnd, lead);", 
		"bug_line": "isource #(.type("sine"),.ampl(amp),.fundname(fundname),.freq(freq),.sinephase(0)) is1(gnd, lead);",
		"error_description": "The phase shift for the lead signal is hardcoded to 0 instead of using the parameter phase_shift (90 degrees). This causes both quadrature signals to be in-phase, violating the required 90-degree phase relationship."
	},
	{
		"original_line": "module quadrature(lag, lead);", 
		"bug_line": "module quadrature(lead);",
		"error_description": "Removed the 'lag' port, breaking the quadrature output interface and causing all internal logic referencing 'lag' to become disconnected. This violates the dual-output design specification."
	},
	{
		"original_line": "parameter real fc = 0 ;", 
		"bug_line": "parameter real fc = -10 ;",
		"error_description": "Setting fc to a negative value causes sqrt(fc) calculation in the initial block to produce imaginary numbers, leading to simulation errors or undefined behavior due to invalid square root operations."
	},
	{
		"original_line": "ground gnd;", 
		"bug_line": "ground vdd;",
		"error_description": "Changed ground node from 'gnd' to 'vdd'. This incorrectly connects the ground reference to a non-existent 'vdd' node instead of the declared 'gnd' node, leaving all current source negative terminals floating without a proper ground reference. This violates fundamental circuit grounding requirements and causes undefined behavior in the quadrature oscillator."
	},
	{
		"original_line": "analog begin", 
		"bug_line": "initial begin",
		"error_description": "Replaces continuous-time analog block with one-time initial block, preventing real-time noise generation and signal updates required for oscillator modeling."
	},
	{
		"original_line": "kf = sqrt(fc)*kw;", 
		"bug_line": "kf = sqrt(fc)/kw;",
		"error_description": "Division instead of multiplication incorrectly scales flicker noise coefficient, causing inverted relationship between white and flicker noise components and potential division-by-zero instability when kw approaches 0."
	},
	{
		"original_line": "I(int) <+ white_noise(amp*amp*kw*kw, "osc");", 
		"bug_line": "I(int) <+ white_noise(amp*amp*kf*kf, "osc");",
		"error_description": "Replaced 'kw' with 'kf', incorrectly using the flicker noise coefficient for white noise generation. This disrupts the noise profile by scaling white noise with flicker parameters, violating the intended noise separation where white noise should use kw (white coefficient) and flicker noise uses kf."
	}
]