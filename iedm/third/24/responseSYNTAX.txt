[
	{
		"original_line": "                    end		// case 4", 
		"bug_line": "                    ned		// case 4",
		"error_description": "Misspelled 'end' keyword as 'ned', causing unterminated begin-end block for case 4."
	},
	{
		"original_line": "                    ; // not possible to leave phase 5", 
		"bug_line": "                    : // not possible to leave phase 5",
		"error_description": "Replaced semicolon with colon, which is an invalid statement terminator in VerilogA. Colons are used in case statements and labels, not to end standalone statements."
	},
	{
		"original_line": "         if ((verr_n_diff * verr_p_diff) >  0) begin // have same signs", 
		"bug_line": "         if ((verr_n_diff * verr_p_diff)  0) begin // have same signs",
		"error_description": "Missing '>' operator between the parenthesized expression and the constant 0, resulting in invalid syntax for the conditional expression"
	},
	{
		"original_line": "parameter real vtune_set = 1K from  [0:inf);", 
		"bug_line": "parameter real vtune_set = 1K from  [0:inf;",
		"error_description": "Unterminated range specification: missing closing parenthesis for the range constraint after 'inf'."
	},
	{
		"original_line": "         direction = 0; // stop tuning", 
		"bug_line": "         direction = 0 // stop tuning",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "   integer verr_p_start_threshold;	// a flag, set when thesh reached", 
		"bug_line": "   integre verr_p_start_threshold;	// a flag, set when thesh reached",
		"error_description": "Misspelled keyword 'integer' as 'integre'"
	},
	{
		"original_line": "                  phase_num = 5;", 
		"bug_line": "                  phase_num = 5",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error in VerilogA as statements must be properly terminated."
	},
	{
		"original_line": "                  phase_num = 3;", 
		"bug_line": "                  phase_num = 3",
		"error_description": "Missing semicolon at the end of the assignment statement"
	},
	{
		"original_line": "         phase_num = 5;", 
		"bug_line": "         phase_num = 5",
		"error_description": "Missing semicolon at the end of the assignment statement. VerilogA requires all statements within analog blocks to be terminated with a semicolon."
	},
	{
		"original_line": "    end else if ( (verr_n_start < 0)&&(verr_n_diff < verr_p_diff)) begin", 
		"bug_line": "    end else if ( (verr_n_start < 0)&&(verr_n_diff < verr_p_diff) begin",
		"error_description": "Missing closing parenthesis for the outer condition. The expression has an unmatched opening parenthesis before the second condition."
	},
	{
		"original_line": "parameter real vtune_set = 1K from  [0:inf);", 
		"bug_line": "parameter real vtune_set = 1 K from  [0:inf);",
		"error_description": "Space inserted between '1' and 'K' breaks the real number literal. VerilogA requires scale factors (K, M, etc.) to immediately follow the numeric value without spaces."
	},
	{
		"original_line": "         $display("Cannot resolve tuning direction for %M");", 
		"bug_line": "         $display("Cannot resolve tuning direction for %M")",
		"error_description": "Missing semicolon at the end of the statement. VerilogA requires all statements to be terminated with semicolons."
	},
	{
		"original_line": "         $display("Cannot resolve tuning direction for %M");", 
		"bug_line": "         $display("Cannot resolve tuning direction for %M);",
		"error_description": "Missing closing double quote in the string literal, resulting in an unterminated string error."
	},
	{
		"original_line": "verr_n_start = verr_val;", 
		"bug_line": "verr_n_start = verr_val",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as the next token 'phase_num' will be interpreted as part of the same unterminated statement."
	},
	{
		"original_line": "         direction = 1;", 
		"bug_line": "         direction = 1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error where the parser expects a continuation of the expression."
	},
	{
		"original_line": "                          direction = -1;", 
		"bug_line": "                          direction = -1",
		"error_description": "Missing semicolon at the end of the assignment statement, causing a syntax error as VerilogA requires all statements to be properly terminated with semicolons."
	},
	{
		"original_line": "   real r; // instantaneous resistance", 
		"bug_line": "   real r: // instantaneous resistance",
		"error_description": "Replaced semicolon with colon, creating invalid syntax for variable declaration termination in VerilogA"
	},
	{
		"original_line": "parameter real rgain     = 10M;", 
		"bug_line": "parameter real rgain     = 10M",
		"error_description": "Missing semicolon at the end of the parameter declaration, causing a syntax error where subsequent tokens become unexpected."
	},
	{
		"original_line": "electrical vp,vn,vtune,verr;", 
		"bug_line": "electrical vp vn,vtune,verr;",
		"error_description": "Missing comma between port identifiers in electrical declaration causes syntax error. Verilog-A requires commas to separate multiple port names in a single declaration."
	},
	{
		"original_line": "          end		// case 3", 
		"bug_line": "          endd		// case 3",
		"error_description": "Misspelled 'end' keyword as 'endd', causing invalid block termination syntax"
	}
]